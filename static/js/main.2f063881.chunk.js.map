{"version":3,"sources":["assets/logo_white_text.png","wallet-adapters/ledger/core.ts","utils/fetch-loop.tsx","utils/utils.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/math/index.tsx","wallet-adapters/solflare-extension/index.tsx","utils/wallet.tsx","wallet-adapters/sollet-extension/index.tsx","global_style.ts","consts/colors.consts.ts","components/CustomMarketDialog.jsx","utils/send.tsx","utils/tokens.tsx","utils/raydiumConnector.tsx","utils/markets.tsx","components/layout/FloatingElement.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/DeprecatedMarketsInstructions.js","components/Orderbook.jsx","utils/useInterval.tsx","utils/usePrevious.tsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","charting_library/charting_library.esm.js","utils/Datafeed.tsx","components/TradingView/saveLoadAdapter.tsx","components/TradingView/index.tsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/index.jsx","pages/TradePage.tsx","components/LinkAddress.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/layout/DataTable.jsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","pages/ConvertPage.tsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","consts/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","pages/DashboardPage.tsx","routes.tsx","utils/referrer.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","Math","min","timeSincePageLoad","document","visibilityState","hasFocus","random","setTimeout","Set","map","listener","refreshIntervalsOnError","filter","x","size","previousRefreshInterval","add","assert","delete","forEach","globalLoops","loops","has","get","addListener","loop","removeListener","Promise","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","refreshCache","clearCache","refreshAllCaches","setCache","value","initializeOnly","isValidPublicKey","key","sleep","ms","resolve","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","decimals","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","push","setState","useCallback","newState","removeItem","setItem","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","endpoints","url","weight","ENDPOINTS","name","endpoint","pointer","api","getRandomEndpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","connect","bind","window","solana","isPhantom","_provider","isConnected","autoApprove","signAllTransactions","open","on","MathWalletAdapter","_onProcess","_connected","isMathWallet","getAccount","then","catch","finally","SolflareExtensionWalletAdapter","off","solflare","isSolflare","ASSET_URL","WALLET_PROVIDERS","icon","adapter","_","network","sollet","Wallet","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","readyState","removeEventListener","addEventListener","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Text","Typography","CustomMarketDialog","onAddCustomMarket","onClose","marketId","setMarketId","marketLabel","setMarketLabel","baseLabel","setBaseLabel","quoteLabel","setQuoteLabel","market","setMarket","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","programId","owner","MARKETS","deprecated","Market","load","resetLabels","knownMarket","m","knownProgram","knownBaseCurrency","baseMintAddress","TOKEN_MINTS","token","knownQuoteCurrency","quoteMintAddress","canSubmit","onDoClose","onOk","params","disabled","span","placeholder","onChange","e","suffix","LoadingOutlined","marginTop","gutter","createTokenAccountTransaction","mintPublicKey","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","ata","Transaction","createAssociatedTokenAccountInstruction","newAccountPubkey","settleFunds","openOrders","baseCurrencyAccount","quoteCurrencyAccount","sendNotification","usdcRef","usdtRef","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","createAccountTransaction","referrerQuoteWallet","supportsReferralFees","quoteToken","getTokenByMintAddress","referrer","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","isZero","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","signer","s","cancelOrder","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","fromPubkey","space","createAccount","initializeAccount","mint","tx2","getLayout","DexInstructions","initializeMarket","authority","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","parsedErrorInfo","parseInstructionErrorResponse","parsedError","error","reject","onSignature","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","getProgramAccounts","resp","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","mintAddress","NATIVE_SOL","cloneDeep","TOKENS","symbol","NORA","USDC","RaydiumApi","path","fetch","URL","response","ok","json","responseJson","success","reverse","marketAddress","tokens","idx","_MARKETS","USE_MARKETS","getMarketInfos","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","itemToken","item","baseCurrency","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarketName","localToken","setLocalToken","localMarket","setLocalMarket","market_addresses","marketData","marketDict","itemMarket","fetchToken","tokenData","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","itemNew","Wrapper","styled","FloatingElement","stretchVertical","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","rowItem","setRowItem","fontSize","paddingBottom","overflowX","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","pageSize","loading","marketFilter","cancelId","setCancelId","orderId","dataSource","cancel","Title","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","level","justifyContent","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","delay","savedCallback","setInterval","clearInterval","useInterval","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","borderTop","borderBottom","padding","paddingRight","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DepositDialog","coinMint","depositCoin","baseOrQuote","paddingTop","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","code","RowBox","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","align","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","walletPubkey","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","flexDirection","border","background","fontStyle","fontWeight","bordered","borderRadius","onSetQuoteSize","tipFormatter","marks","paddingLeft","checked","block","toUpperCase","PublicTrades","getRecentTrades","useRaydiumTrades","minHeight","overflowY","time","toLocaleTimeString","assign","o","arguments","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","text","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","chart","getLanguage","setSymbol","changeSymbol","splice","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","saveChart","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","encodeURIComponent","timeframe","toolbar_bg","replace","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","URL_SERVER","makeDataFeed","subscriptions","overTime","lastReqTime","getApi","onReady","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","fromCustomMarket","customMarketStr","userName","ticker","getBars","symbolInfo","onHistoryCallback","onErrorCallback","firstDataRequest","ceil","convertResolutionToApi","minTs","out_count","nodeData","c","parseCandles","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","reduceTs","resolutionApi","candle","unsubscribeBars","searchSymbols","marketList","reList","full_name","minCount","resolutionTv","ts","candles","high","h","low","l","volume","v","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chartData","content","timestamp","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageUrl","chartsStorageApiVersion","clientId","userId","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","innerWidth","className","FeesTable","balance","feeTier","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","FillsTable","fills","fill","useFills","liquidity","feeCost","Index","activeKeyStr","setActiveKeyStr","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","dimensions","changeOrderRef","componentProps","onChangeOrderRef","component","newCustomMarkets","MarketSelector","onDeleteCustomMarket","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","nanoid","DeleteOutlined","stopPropagation","nativeEvent","stopImmediatePropagation","arr","addList","uniqueArray","DeprecatedMarketsPage","RenderNormal","flexWrap","minWidth","RenderSmaller","xs","sm","LinkAddress","shorten","LinkOutlined","cursor","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","orderInfos","DataTable","columns","emptyLabel","pagination","renderEmpty","alignItems","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","render","walletBalance","dataIndex","TabPane","Tabs","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","defaultActiveKey","tab","ConvertPage","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","addonBefore","LogoWrapper","MENU","link","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","endpointInfoCustom","handler","tradePageUrl","pathname","menuDiv","Menu","SubMenu","mode","defaultSelectedKeys","selectedKeys","handleError","getEpochInfo","newCustomEndpoints","wrap","logo_white_text","alignContent","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","options","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","every","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","trigger","InfoCircleOutlined","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","Paragraph","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","onSubmit","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","Group","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","DashboardWrapper","h1","img","gap","button","lineHeight","DashboardPage","LOGO_WHITE","Routes","basename","exact","ReferrerContext","USDC_MINT","USDT_MINT","findAssociatedTokenAddress","walletAddress","tokenMintAddress","findProgramAddress","SOL_TLD_AUTHORITY","getInputKey","getHashedName","hashed_input_name","getNameAccountKey","inputDomainKey","hashedInputName","ReferrerProvider","allowRefLink","process","REACT_APP_ALLOW_REF_LINK","refCode","setRefCode","usdc","setUsdc","usdt","setUsdt","usdcAddress","usdtAddress","REACT_APP_USDC_REFERRAL_FEES_ADDRESS","REACT_APP_USDT_REFERRAL_FEES_ADDRESS","NameRegistryState","retrieve","nameRegistryState","getTwitterRegistry","usdcAccountInfo","usdtAccountInfo","useFeesAccountsFromRefCode","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AAS6G,gBACX,mBACAL,mBAAmB75B,KAAKC,UAAU1G,KAAK85B,SAAS6G,kBAChD,IACJ,eACAL,mBAAmB75B,KAAKC,UAAU1G,KAAK85B,SAASf,cAChD,WACAuH,mBAAmBtgC,KAAK85B,SAAS/B,QACjC,QACAuI,mBAAmBtgC,KAAKw5B,KACxB,aACA8G,mBAAmBM,OAAO5gC,KAAK85B,SAASZ,YACxC,WACAoH,mBAAmBM,OAAO5gC,KAAK85B,SAASX,WACvCn5B,KAAK85B,SAAS+G,mBACX,qBACAP,mBAAmBtgC,KAAK85B,SAAS+G,oBACjC,KACH7gC,KAAK85B,SAASV,2BACX,qBACAkH,mBAAmBtgC,KAAK85B,SAASV,4BACjC,KACHp5B,KAAK85B,SAASgH,eACX,cAAgBR,mBAAmBtgC,KAAK85B,SAASgH,gBACjD,KACH9gC,KAAK85B,SAASiH,gBACX,kBACAT,mBAAmBM,OAAO5gC,KAAK85B,SAASiH,kBACxC,IACJ,UACAT,mBAAmBM,OAAO5gC,KAAK85B,SAASjB,SACvC74B,KAAK85B,SAASkH,aACX,gBAAkBV,mBAAmBtgC,KAAK85B,SAASkH,cACnD,KACHhhC,KAAK85B,SAASlC,SACX,aAAe0I,mBAAmBtgC,KAAK85B,SAASlC,UAChD,KACH53B,KAAK85B,SAASmH,kBACX,oBACAX,mBAAmBM,OAAO5gC,KAAK85B,SAASmH,oBACxC,KACHjhC,KAAK85B,SAASoH,4BACX,eACAZ,mBACEM,OAAO5gC,KAAK85B,SAASoH,8BAEvB,KACHlhC,KAAK85B,SAASqH,gBACX,mBACAb,mBAAmB75B,KAAKC,UAAU1G,KAAK85B,SAASqH,kBAChD,KACHnhC,KAAK85B,SAASE,MACX,UAAYsG,mBAAmBM,OAAO5gC,KAAK85B,SAASE,QACpD,IACN,MACE,eACAh6B,KAAKw5B,IACL,WACAx5B,KAAKw5B,IACL,WACAplB,EACA,KACCpU,KAAK85B,SAASlB,UAAY54B,KAAK85B,SAASnB,WACrC,GACA,WACA34B,KAAK85B,SAASjpB,MACd,aACA7Q,KAAK85B,SAAS9oB,OACd,KACJ,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","file":"static/js/main.2f063881.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white_text.67ce5562.png\";","import type Transport from '@ledgerhq/hw-transport';\r\nimport type { Transaction } from '@solana/web3.js';\r\n\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nconst INS_GET_PUBKEY = 0x05;\r\nconst INS_SIGN_MESSAGE = 0x06;\r\n\r\nconst P1_NON_CONFIRM = 0x00;\r\nconst P1_CONFIRM = 0x01;\r\n\r\nconst P2_EXTEND = 0x01;\r\nconst P2_MORE = 0x02;\r\n\r\nconst MAX_PAYLOAD = 255;\r\n\r\nconst LEDGER_CLA = 0xe0;\r\n\r\n/*\r\n * Helper for chunked send of large payloads\r\n */\r\nasync function ledgerSend(\r\n  transport: Transport,\r\n  instruction: number,\r\n  p1: number,\r\n  payload: Buffer,\r\n) {\r\n  let p2 = 0;\r\n  let payloadOffset = 0;\r\n\r\n  if (payload.length > MAX_PAYLOAD) {\r\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\r\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\r\n      payloadOffset += MAX_PAYLOAD;\r\n      console.log(\r\n        'send',\r\n        (p2 | P2_MORE).toString(16),\r\n        chunk.length.toString(16),\r\n        chunk,\r\n      );\r\n      const reply = await transport.send(\r\n        LEDGER_CLA,\r\n        instruction,\r\n        p1,\r\n        p2 | P2_MORE,\r\n        chunk,\r\n      );\r\n      if (reply.length !== 2) {\r\n        throw new Error('Received unexpected reply payload');\r\n      }\r\n      p2 |= P2_EXTEND;\r\n    }\r\n  }\r\n\r\n  const chunk = payload.slice(payloadOffset);\r\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\r\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\r\n\r\n  return reply.slice(0, reply.length - 2);\r\n}\r\n\r\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\r\nfunction harden(n: number = 0) {\r\n  return (n | BIP32_HARDENED_BIT) >>> 0;\r\n}\r\n\r\nexport function getSolanaDerivationPath(account?: number, change?: number) {\r\n  var length;\r\n  if (account !== undefined) {\r\n    if (change !== undefined) {\r\n      length = 4;\r\n    } else {\r\n      length = 3;\r\n    }\r\n  } else {\r\n    length = 2;\r\n  }\r\n\r\n  var derivationPath = Buffer.alloc(1 + length * 4);\r\n  // eslint-disable-next-line\r\n  var offset = 0;\r\n  offset = derivationPath.writeUInt8(length, offset);\r\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\r\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\r\n\r\n  if (length > 2) {\r\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\r\n    if (length === 4) {\r\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\r\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\r\n    }\r\n  }\r\n\r\n  return derivationPath;\r\n}\r\n\r\nexport async function signTransaction(\r\n  transport: Transport,\r\n  transaction: Transaction,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const messageBytes = transaction.serializeMessage();\r\n  return signBytes(transport, messageBytes, derivationPath);\r\n}\r\n\r\nexport async function signBytes(\r\n  transport: Transport,\r\n  bytes: Buffer,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const numPaths = Buffer.alloc(1);\r\n  numPaths.writeUInt8(1, 0);\r\n\r\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\r\n\r\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\r\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\r\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\r\n}\r\n\r\nexport async function getPublicKey(\r\n  transport: Transport,\r\n  derivationPath: Buffer = getSolanaDerivationPath(),\r\n) {\r\n  const publicKeyBytes = await ledgerSend(\r\n    transport,\r\n    INS_GET_PUBKEY,\r\n    P1_NON_CONFIRM,\r\n    derivationPath,\r\n  );\r\n\r\n  return new PublicKey(publicKeyBytes);\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nimport assert from 'assert';\r\n\r\nconst pageLoadTime = new Date();\r\n\r\nconst globalCache: Map<any, any> = new Map();\r\n\r\nclass FetchLoopListener<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  refreshInterval: number;\r\n  refreshIntervalOnError: number | null;\r\n  callback: () => void;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(\r\n    cacheKey: any,\r\n    fn: () => Promise<T>,\r\n    refreshInterval: number,\r\n    refreshIntervalOnError: number | null,\r\n    callback: () => void,\r\n    cacheNullValues: Boolean,\r\n  ) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.refreshInterval = refreshInterval;\r\n    this.refreshIntervalOnError = refreshIntervalOnError;\r\n    this.callback = callback;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n}\r\n\r\nclass FetchLoopInternal<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  timeoutId: null | any;\r\n  listeners: Set<FetchLoopListener<T>>;\r\n  errors: number;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.timeoutId = null;\r\n    this.listeners = new Set();\r\n    this.errors = 0;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n\r\n  get refreshInterval(): number {\r\n    return Math.min(\r\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\r\n    );\r\n  }\r\n\r\n  get refreshIntervalOnError(): number | null {\r\n    const refreshIntervalsOnError: number[] = [...this.listeners]\r\n      .map((listener) => listener.refreshIntervalOnError)\r\n      .filter((x): x is number => x !== null);\r\n    if (refreshIntervalsOnError.length === 0) {\r\n      return null;\r\n    }\r\n    return Math.min(...refreshIntervalsOnError);\r\n  }\r\n\r\n  get stopped(): boolean {\r\n    return this.listeners.size === 0;\r\n  }\r\n\r\n  addListener(listener: FetchLoopListener<T>): void {\r\n    const previousRefreshInterval = this.refreshInterval;\r\n    this.listeners.add(listener);\r\n    if (this.refreshInterval < previousRefreshInterval) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  removeListener(listener: FetchLoopListener<T>): void {\r\n    assert(this.listeners.delete(listener));\r\n    if (this.stopped) {\r\n      if (this.timeoutId) {\r\n        clearTimeout(this.timeoutId);\r\n        this.timeoutId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener.callback());\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    let errored = false;\r\n    try {\r\n      const data = await this.fn();\r\n      if (!this.cacheNullValues && data === null) {\r\n        console.log(`Not caching null value for ${this.cacheKey}`);\r\n        // cached data has not changed so no need to re-render\r\n        this.errors = 0;\r\n        return data;\r\n      } else {\r\n        globalCache.set(this.cacheKey, data);\r\n        this.errors = 0;\r\n        this.notifyListeners();\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      ++this.errors;\r\n      console.warn(error);\r\n      errored = true;\r\n    } finally {\r\n      if (!this.timeoutId && !this.stopped) {\r\n        let waitTime = this.refreshInterval;\r\n        if (\r\n          errored &&\r\n          this.refreshIntervalOnError &&\r\n          this.refreshIntervalOnError > 0\r\n        ) {\r\n          waitTime = this.refreshIntervalOnError;\r\n        }\r\n\r\n        // Back off on errors.\r\n        if (this.errors > 0) {\r\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\r\n        }\r\n\r\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\r\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\r\n        if (timeSincePageLoad < 5000) {\r\n          waitTime += 5000 - timeSincePageLoad / 2;\r\n        }\r\n\r\n        // Refresh background pages slowly.\r\n        if (document.visibilityState === 'hidden') {\r\n          waitTime = 60000;\r\n        } else if (!document.hasFocus()) {\r\n          waitTime *= 1.5;\r\n        }\r\n\r\n        // Add jitter so we don't send all requests at the same time.\r\n        waitTime *= 0.8 + 0.4 * Math.random();\r\n\r\n        this.timeoutId = setTimeout(this.refresh, waitTime);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass FetchLoops {\r\n  loops = new Map();\r\n\r\n  addListener<T>(listener: FetchLoopListener<T>) {\r\n    if (!this.loops.has(listener.cacheKey)) {\r\n      this.loops.set(\r\n        listener.cacheKey,\r\n        new FetchLoopInternal<T>(\r\n          listener.cacheKey,\r\n          listener.fn,\r\n          listener.cacheNullValues,\r\n        ),\r\n      );\r\n    }\r\n    this.loops.get(listener.cacheKey).addListener(listener);\r\n  }\r\n\r\n  removeListener<T>(listener: FetchLoopListener<T>) {\r\n    const loop = this.loops.get(listener.cacheKey);\r\n    loop.removeListener(listener);\r\n    if (loop.stopped) {\r\n      this.loops.delete(listener.cacheKey);\r\n      globalCache.delete(listener.cacheKey);\r\n    }\r\n  }\r\n\r\n  refresh(cacheKey) {\r\n    if (this.loops.has(cacheKey)) {\r\n      this.loops.get(cacheKey).refresh();\r\n    }\r\n  }\r\n\r\n  refreshAll() {\r\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\r\n  }\r\n}\r\nconst globalLoops = new FetchLoops();\r\n\r\nexport function useAsyncData<T = any>(\r\n  asyncFn: () => Promise<T>,\r\n  cacheKey: any,\r\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\r\n  cacheNullValues: Boolean = true,\r\n): [null | undefined | T, boolean] {\r\n  const [, rerender] = useReducer((i) => i + 1, 0);\r\n\r\n  useEffect(() => {\r\n    if (!cacheKey) {\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      return () => {};\r\n    }\r\n    const listener = new FetchLoopListener<T>(\r\n      cacheKey,\r\n      asyncFn,\r\n      refreshInterval,\r\n      refreshIntervalOnError,\r\n      rerender,\r\n      cacheNullValues,\r\n    );\r\n    globalLoops.addListener(listener);\r\n    return () => globalLoops.removeListener(listener);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey, refreshInterval]);\r\n\r\n  if (!cacheKey) {\r\n    return [null, false];\r\n  }\r\n\r\n  const loaded = globalCache.has(cacheKey);\r\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\r\n  return [data, loaded];\r\n}\r\n\r\nexport function refreshCache(cacheKey: any, clearCache = false): void {\r\n  if (clearCache) {\r\n    globalCache.delete(cacheKey);\r\n  }\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.refresh();\r\n    if (clearCache) {\r\n      loop.notifyListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport function refreshAllCaches(): void {\r\n  for (const loop of globalLoops.loops.values()) {\r\n    loop.refresh();\r\n  }\r\n}\r\n\r\nexport function setCache(\r\n  cacheKey: any,\r\n  value: any,\r\n  { initializeOnly = false } = {},\r\n): void {\r\n  if (initializeOnly && globalCache.has(cacheKey)) {\r\n    return;\r\n  }\r\n  globalCache.set(cacheKey, value);\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.notifyListeners();\r\n  }\r\n}\r\n\r\nexport function getCache(\r\n  cacheKey: any\r\n) {\r\n  return globalCache.get(cacheKey);\r\n}\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport BN from 'bn.js';\r\n\r\nexport function isValidPublicKey(key) {\r\n  if (!key) {\r\n    return false;\r\n  }\r\n  try {\r\n    new PublicKey(key);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const percentFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function floorToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals\r\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\r\n    : Math.floor(value);\r\n}\r\n\r\nexport function roundToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function getDecimalCount(value): number {\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('.')\r\n  )\r\n    return value.toString().split('.')[1].length || 0;\r\n  if (\r\n    !isNaN(value) &&\r\n    Math.floor(value) !== value &&\r\n    value.toString().includes('e')\r\n  )\r\n    return parseInt(value.toString().split('e-')[1] || '0');\r\n  return 0;\r\n}\r\n\r\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\r\n  const quotient = numerator.div(denominator).toNumber();\r\n  const rem = numerator.umod(denominator);\r\n  const gcd = rem.gcd(denominator);\r\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\r\n}\r\n\r\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\r\n  return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nconst localStorageListeners = {};\r\n\r\nexport function useLocalStorageStringState(\r\n  key: string,\r\n  defaultState: string | null = null,\r\n): [string | null, (newState: string | null) => void] {\r\n  const state = localStorage.getItem(key) || defaultState;\r\n\r\n  const [, notify] = useState(key + '\\n' + state);\r\n\r\n  useEffect(() => {\r\n    if (!localStorageListeners[key]) {\r\n      localStorageListeners[key] = [];\r\n    }\r\n    localStorageListeners[key].push(notify);\r\n    return () => {\r\n      localStorageListeners[key] = localStorageListeners[key].filter(\r\n        (listener) => listener !== notify,\r\n      );\r\n      if (localStorageListeners[key].length === 0) {\r\n        delete localStorageListeners[key];\r\n      }\r\n    };\r\n  }, [key]);\r\n\r\n  const setState = useCallback<(newState: string | null) => void>(\r\n    (newState) => {\r\n      const changed = state !== newState;\r\n      if (!changed) {\r\n        return;\r\n      }\r\n\r\n      if (newState === null) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newState);\r\n      }\r\n      localStorageListeners[key]?.forEach((listener) =>\r\n        listener(key + '\\n' + newState),\r\n      );\r\n    },\r\n    [state, key],\r\n  );\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport function useLocalStorageState<T = any>(\r\n  key: string,\r\n  defaultState: T | null = null,\r\n): [T, (newState: T) => void] {\r\n  let [stringState, setStringState] = useLocalStorageStringState(\r\n    key,\r\n    JSON.stringify(defaultState),\r\n  );\r\n  return [\r\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\r\n    (newState) => setStringState(JSON.stringify(newState)),\r\n  ];\r\n}\r\n\r\nexport function useEffectAfterTimeout(effect, timeout) {\r\n  useEffect(() => {\r\n    const handle = setTimeout(effect, timeout);\r\n    return () => clearTimeout(handle);\r\n  });\r\n}\r\n\r\nexport function useListener(emitter, eventName) {\r\n  const [, forceUpdate] = useState(0);\r\n  useEffect(() => {\r\n    const listener = () => forceUpdate((i) => i + 1);\r\n    emitter.on(eventName, listener);\r\n    return () => emitter.removeListener(eventName, listener);\r\n  }, [emitter, eventName]);\r\n}\r\n\r\nexport function abbreviateAddress(address: PublicKey, size = 4) {\r\n  const base58 = address.toBase58();\r\n  return base58.slice(0, size) + '…' + base58.slice(-size);\r\n}\r\n\r\nexport function isEqual(obj1, obj2, keys) {\r\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n    return false;\r\n  }\r\n  keys = keys || Object.keys(obj1);\r\n  for (const k of keys) {\r\n    if (obj1[k] !== obj2[k]) {\r\n      // shallow comparison\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function flatten(obj, { prefix = '', restrictTo }) {\r\n  let restrict = restrictTo;\r\n  if (restrict) {\r\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\r\n  }\r\n  const result = {};\r\n  (function recurse(obj, current, keys) {\r\n    (keys || Object.keys(obj)).forEach((key) => {\r\n      const value = obj[key];\r\n      const newKey = current ? current + '.' + key : key; // joined key with dot\r\n      if (value && typeof value === 'object') {\r\n        // @ts-ignore\r\n        recurse(value, newKey); // nested object\r\n      } else {\r\n        result[newKey] = value;\r\n      }\r\n    });\r\n  })(obj, prefix, restrict);\r\n  return result;\r\n}\r\n","import { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport tuple from 'immutable-tuple';\r\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\r\nimport { setCache, useAsyncData } from './fetch-loop';\r\nimport { ConnectionContextValues, EndpointInfo } from './types';\r\nimport { useLocalStorageState } from './utils';\r\n\r\n\r\nexport const endpoints = [\r\n  // { url: 'https://raydium.rpcpool.com', weight: 30 },\r\n  { url: 'https://solana-api.tt-prod.net', weight: 100 }\r\n  // { url: 'https://raydium.genesysgo.net', weight: 100 }\r\n]\r\n\r\nexport function getRandomEndpoint() {\r\n  let pointer = 0\r\n  const random = Math.random() * 100\r\n  let api = endpoints[0].url\r\n\r\n  for (const endpoint of endpoints) {\r\n    if (random > pointer + endpoint.weight) {\r\n      pointer += pointer + endpoint.weight\r\n    } else if (random >= pointer && random < pointer + endpoint.weight) {\r\n      api = endpoint.url\r\n      break\r\n    } else {\r\n      api = endpoint.url\r\n      break\r\n    }\r\n  }\r\n\r\n  return api\r\n}\r\n\r\nexport const ENDPOINTS: EndpointInfo[] = [\r\n  {\r\n    name: 'mainnet-beta',\r\n    // endpoint: 'https://solana-api.projectserum.com',\r\n    endpoint: getRandomEndpoint(),\r\n    custom: false,\r\n  },\r\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\r\n];\r\n\r\nconst accountListenerCount = new Map();\r\n\r\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\r\n  null,\r\n);\r\n\r\nexport function ConnectionProvider({ children }) {\r\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\r\n    'connectionEndpts',\r\n    ENDPOINTS[0].endpoint,\r\n  );\r\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\r\n    EndpointInfo[]\r\n  >('customConnectionEndpoints', []);\r\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\r\n\r\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n\r\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\r\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\r\n  // This is a hack to prevent the list from every getting empty\r\n  useEffect(() => {\r\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\r\n    return () => {\r\n      connection.removeAccountChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = connection.onSlotChange(() => null);\r\n    return () => {\r\n      connection.removeSlotChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onAccountChange(\r\n      new Account().publicKey,\r\n      () => {},\r\n    );\r\n    return () => {\r\n      sendConnection.removeAccountChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onSlotChange(() => null);\r\n    return () => {\r\n      sendConnection.removeSlotChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  return (\r\n    <ConnectionContext.Provider\r\n      value={{\r\n        endpoint,\r\n        setEndpoint,\r\n        connection,\r\n        sendConnection,\r\n        availableEndpoints,\r\n        setCustomEndpoints,\r\n      }}\r\n    >\r\n      {children}\r\n    </ConnectionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.connection;\r\n}\r\n\r\nexport function useSendConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.sendConnection;\r\n}\r\n\r\nexport function useConnectionConfig() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return {\r\n    endpoint: context.endpoint,\r\n    endpointInfo: context.availableEndpoints.find(\r\n      (info) => info.endpoint === context.endpoint,\r\n    ),\r\n    setEndpoint: context.setEndpoint,\r\n    availableEndpoints: context.availableEndpoints,\r\n    setCustomEndpoints: context.setCustomEndpoints,\r\n  };\r\n}\r\n\r\nexport function useAccountInfo(\r\n  publicKey: PublicKey | undefined | null,\r\n): [AccountInfo<Buffer> | null | undefined, boolean] {\r\n  const connection = useConnection();\r\n  const cacheKey = tuple(connection, publicKey?.toBase58());\r\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\r\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\r\n    cacheKey,\r\n    { refreshInterval: 60_000 },\r\n  );\r\n  useEffect(() => {\r\n    if (!publicKey) {\r\n      return;\r\n    }\r\n    if (accountListenerCount.has(cacheKey)) {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      ++currentItem.count;\r\n    } else {\r\n      let previousInfo: AccountInfo<Buffer> | null = null;\r\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\r\n        if (\r\n          !previousInfo ||\r\n          !previousInfo.data.equals(info.data) ||\r\n          previousInfo.lamports !== info.lamports\r\n        ) {\r\n          previousInfo = info;\r\n          setCache(cacheKey, info);\r\n        }\r\n      });\r\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\r\n    }\r\n    return () => {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      let nextCount = currentItem.count - 1;\r\n      if (nextCount <= 0) {\r\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\r\n        accountListenerCount.delete(cacheKey);\r\n      } else {\r\n        --currentItem.count;\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey]);\r\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\r\n  if (\r\n    !accountInfo ||\r\n    !previousInfoRef.current ||\r\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\r\n    previousInfoRef.current.lamports !== accountInfo.lamports\r\n  ) {\r\n    previousInfoRef.current = accountInfo;\r\n  }\r\n  return [previousInfoRef.current, loaded];\r\n}\r\n\r\nexport function useAccountData(publicKey) {\r\n  const [accountInfo] = useAccountInfo(publicKey);\r\n  return accountInfo && accountInfo.data;\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function Link({ external = false, ...props }) {\r\n  let { to, children, ...rest } = props;\r\n  if (external) {\r\n    return (\r\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  return (\r\n    <RouterLink to={to} {...rest}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Link from '../components/Link';\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n  txid,\r\n  type = 'info',\r\n  placement = 'bottomRight',\r\n}: {\r\n  message: string;\r\n  description?: string | JSX.Element;\r\n  txid?: string;\r\n  type?: string;\r\n  placement?: string;\r\n}) {\r\n  if (txid) {\r\n    description = (\r\n      <Link\r\n        external\r\n        to={'https://solscan.io/tx/' + txid}\r\n        style={{ color: '#0000ff' }}\r\n      >\r\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\r\n      </Link>\r\n    );\r\n  }\r\n  notification[type]({\r\n    message: <span style={{ color: 'black' }}>{message}</span>,\r\n    description: (\r\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\r\n    ),\r\n    placement,\r\n    style: {\r\n      backgroundColor: 'white',\r\n    },\r\n  });\r\n}\r\n","import { PublicKey, Transaction } from '@solana/web3.js';\r\n\r\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\r\n  '11111111111111111111111111111111',\r\n);\r\n\r\nexport interface WalletAdapter {\r\n  publicKey: PublicKey;\r\n  autoApprove: boolean;\r\n  connected: boolean;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\r\n  connect: () => any;\r\n  disconnect: () => any;\r\n  on<T>(event: string, fn: () => void): this;\r\n}\r\n","import type Transport from '@ledgerhq/hw-transport';\r\nimport type { Transaction } from '@solana/web3.js';\r\n\r\nimport EventEmitter from 'eventemitter3';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\r\nimport { notify } from '../../utils/notifications';\r\nimport { getPublicKey, signTransaction } from './core';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\r\n  _connecting: boolean;\r\n  _publicKey: PublicKey | null;\r\n  _transport: Transport | null;\r\n\r\n  constructor() {\r\n    super();\r\n    this._connecting = false;\r\n    this._publicKey = null;\r\n    this._transport = null;\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  get connected() {\r\n    return this._publicKey !== null;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return false;\r\n  }\r\n\r\n  public async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    const result: Transaction[] = [];\r\n    for (let i = 0; i < transactions.length; i++) {\r\n      const transaction = transactions[i];\r\n      const signed = await this.signTransaction(transaction);\r\n      result.push(signed);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._transport || !this._publicKey) {\r\n      throw new Error('Not connected to Ledger');\r\n    }\r\n\r\n    // @TODO: account selection (derivation path changes with account)\r\n    const signature = await signTransaction(this._transport, transaction);\r\n\r\n    transaction.addSignature(this._publicKey, signature);\r\n\r\n    return transaction;\r\n  }\r\n\r\n  async connect() {\r\n    if (this._connecting) {\r\n      return;\r\n    }\r\n\r\n    this._connecting = true;\r\n\r\n    try {\r\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\r\n      this._transport = await TransportWebUSB.create();\r\n      // @TODO: account selection\r\n      this._publicKey = await getPublicKey(this._transport);\r\n      this.emit('connect', this._publicKey);\r\n    } catch (error) {\r\n      notify({\r\n        message: 'Ledger Error',\r\n        description: error.message,\r\n      });\r\n      await this.disconnect();\r\n    } finally {\r\n      this._connecting = false;\r\n    }\r\n  }\r\n\r\n  async disconnect() {\r\n    let emit = false;\r\n    if (this._transport) {\r\n      await this._transport.close();\r\n      this._transport = null;\r\n      emit = true;\r\n    }\r\n\r\n    this._connecting = false;\r\n    this._publicKey = null;\r\n\r\n    if (emit) {\r\n      this.emit('disconnect');\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\ntype PhantomEvent = 'disconnect' | 'connect';\r\ntype PhantomRequestMethod =\r\n  | 'connect'\r\n  | 'disconnect'\r\n  | 'signTransaction'\r\n  | 'signAllTransactions';\r\n\r\ninterface PhantomProvider {\r\n  publicKey?: PublicKey;\r\n  isConnected?: boolean;\r\n  autoApprove?: boolean;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\r\n  connect: () => Promise<void>;\r\n  disconnect: () => Promise<void>;\r\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\r\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\r\n  listeners: (event: PhantomEvent) => (() => void)[];\r\n}\r\n\r\nexport class PhantomWalletAdapter\r\n  extends EventEmitter\r\n  implements WalletAdapter {\r\n  constructor() {\r\n    super();\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  private get _provider(): PhantomProvider | undefined {\r\n    if ((window as any)?.solana?.isPhantom) {\r\n      return (window as any).solana;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private _handleConnect = (...args) => {\r\n    this.emit('connect', ...args);\r\n  }\r\n\r\n  private _handleDisconnect = (...args) => {\r\n    this.emit('disconnect', ...args);\r\n  }\r\n\r\n  get connected() {\r\n    return this._provider?.isConnected || false;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return this._provider?.autoApprove || false;\r\n  }\r\n\r\n  async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    if (!this._provider) {\r\n      return transactions;\r\n    }\r\n\r\n    return this._provider.signAllTransactions(transactions);\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._provider) {\r\n      return transaction;\r\n    }\r\n\r\n    return this._provider.signTransaction(transaction);\r\n  }\r\n\r\n  connect() {\r\n    if (!this._provider) {\r\n      window.open('https://phantom.app/', '_blank');\r\n      notify({\r\n        message: 'Connection Error',\r\n        description: 'Please install Phantom wallet',\r\n      });\r\n      return;\r\n    }\r\n    if (!this._provider.listeners('connect').length) {\r\n      this._provider?.on('connect', this._handleConnect);\r\n    }\r\n    if (!this._provider.listeners('disconnect').length) {\r\n      this._provider?.on('disconnect', this._handleDisconnect);\r\n    }\r\n    return this._provider?.connect();\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._provider) {\r\n      this._provider.disconnect();\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\r\n  _publicKey?: PublicKey;\r\n  _onProcess: boolean;\r\n  _connected: boolean;\r\n  constructor() {\r\n    super();\r\n    this._onProcess = false;\r\n    this._connected = false;\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  get connected() {\r\n    return this._connected;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return false;\r\n  }\r\n\r\n  public async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    if (!this._provider) {\r\n      return transactions;\r\n    }\r\n\r\n    return this._provider.signAllTransactions(transactions);\r\n  }\r\n\r\n  private get _provider() {\r\n    if ((window as any)?.solana?.isMathWallet) {\r\n      return (window as any).solana;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._provider) {\r\n      return transaction;\r\n    }\r\n\r\n    return this._provider.signTransaction(transaction);\r\n  }\r\n\r\n  connect() {\r\n    if (this._onProcess) {\r\n      return;\r\n    }\r\n\r\n    if (!this._provider) {\r\n      window.open('https://mathwallet.org/', '_blank');\r\n      notify({\r\n        message: 'Math Wallet Error',\r\n        description: 'Please install mathwallet',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this._onProcess = true;\r\n    this._provider\r\n      .getAccount()\r\n      .then((account: any) => {\r\n        this._publicKey = new PublicKey(account);\r\n        this._connected = true;\r\n        this.emit('connect', this._publicKey);\r\n      })\r\n      .catch(() => {\r\n        this.disconnect();\r\n      })\r\n      .finally(() => {\r\n        this._onProcess = false;\r\n      });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._publicKey) {\r\n      this._publicKey = undefined;\r\n      this._connected = false;\r\n      this.emit('disconnect');\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\r\n\r\ntype SolflareExtensionEvent = 'disconnect' | 'connect';\r\ntype SolflareExtensionRequestMethod =\r\n  | 'connect'\r\n  | 'disconnect'\r\n  | 'signTransaction'\r\n  | 'signAllTransactions';\r\n\r\ninterface SolflareExtensionProvider {\r\n  publicKey?: PublicKey;\r\n  isConnected?: boolean;\r\n  autoApprove?: boolean;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\r\n  connect: () => Promise<void>;\r\n  disconnect: () => Promise<void>;\r\n  on: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\r\n  off: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\r\n  request: (method: SolflareExtensionRequestMethod, params: any) => Promise<any>;\r\n}\r\n\r\nexport class SolflareExtensionWalletAdapter\r\n  extends EventEmitter\r\n  implements WalletAdapter {\r\n  constructor() {\r\n    super();\r\n    this.connect = this.connect.bind(this);\r\n  }\r\n\r\n  private get _provider(): SolflareExtensionProvider | undefined {\r\n    if ((window as any)?.solflare?.isSolflare) {\r\n      return (window as any).solflare;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private _handleConnect = (...args) => {\r\n    this.emit('connect', ...args);\r\n  }\r\n\r\n  private _handleDisconnect = (...args) => {\r\n    this._provider?.off('connect', this._handleConnect);\r\n    this._provider?.off('disconnect', this._handleDisconnect);\r\n    this.emit('disconnect', ...args);\r\n  }\r\n\r\n  get connected() {\r\n    return this._provider?.isConnected || false;\r\n  }\r\n\r\n  get autoApprove() {\r\n    return this._provider?.autoApprove || false;\r\n  }\r\n\r\n  async signAllTransactions(\r\n    transactions: Transaction[],\r\n  ): Promise<Transaction[]> {\r\n    if (!this._provider) {\r\n      return transactions;\r\n    }\r\n\r\n    return this._provider.signAllTransactions(transactions);\r\n  }\r\n\r\n  get publicKey() {\r\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\r\n  }\r\n\r\n  async signTransaction(transaction: Transaction) {\r\n    if (!this._provider) {\r\n      return transaction;\r\n    }\r\n\r\n    return this._provider.signTransaction(transaction);\r\n  }\r\n\r\n  async connect() {\r\n    if (!this._provider) {\r\n      window.open('https://solflare.com/', '_blank');\r\n      notify({\r\n        message: 'Connection Error',\r\n        description: 'Please install Solflare extension',\r\n      });\r\n      return;\r\n    }\r\n    this._provider?.on('connect', this._handleConnect);\r\n    this._provider?.on('disconnect', this._handleDisconnect);\r\n    return this._provider?.connect();\r\n  }\r\n\r\n  async disconnect() {\r\n    if (this._provider) {\r\n      this._provider.disconnect();\r\n    }\r\n  }\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport { WalletContextValues } from './types';\r\nimport { Button, Modal } from 'antd';\r\nimport {\r\n  WalletAdapter,\r\n  LedgerWalletAdapter,\r\n  PhantomWalletAdapter,\r\n  SolletExtensionAdapter,\r\n  MathWalletAdapter,\r\n  SolflareExtensionWalletAdapter,\r\n} from '../wallet-adapters';\r\n\r\nconst ASSET_URL =\r\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\r\nexport const WALLET_PROVIDERS = [\r\n  {\r\n    name: 'sollet.io',\r\n    url: 'https://www.sollet.io',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n  },\r\n  {\r\n    name: 'Sollet Extension',\r\n    url: 'https://www.sollet.io/extension',\r\n    icon: `${ASSET_URL}/sollet.svg`,\r\n    adapter: SolletExtensionAdapter as any,\r\n  },\r\n  {\r\n    name: 'Ledger',\r\n    url: 'https://www.ledger.com',\r\n    icon: `${ASSET_URL}/ledger.svg`,\r\n    adapter: LedgerWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Solflare',\r\n    url: 'https://solflare.com/access-wallet',\r\n    icon: `${ASSET_URL}/solflare.svg`,\r\n  },\r\n  {\r\n    name: 'Solflare Extension',\r\n    url: 'https://solflare.com',\r\n    icon: `${ASSET_URL}/solflare.svg`,\r\n    adapter: SolflareExtensionWalletAdapter,\r\n  },\r\n  {\r\n    name: 'Phantom',\r\n    url: 'https://www.phantom.app',\r\n    icon: `https://www.phantom.app/img/logo.png`,\r\n    adapter: PhantomWalletAdapter,\r\n  },\r\n  {\r\n    name: 'MathWallet',\r\n    url: 'https://www.mathwallet.org',\r\n    icon: `${ASSET_URL}/mathwallet.svg`,\r\n    adapter: MathWalletAdapter,\r\n  },\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [autoConnect, setAutoConnect] = useState(false);\r\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\r\n\r\n  const provider = useMemo(\r\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\r\n    [providerUrl],\r\n  );\r\n\r\n  let [wallet, setWallet] = useState<WalletAdapter | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      const updateWallet = () => {\r\n        // hack to also update wallet synchronously in case it disconnects\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        wallet = new (provider.adapter || Wallet)(\r\n          providerUrl,\r\n          endpoint,\r\n        ) as WalletAdapter;\r\n        setWallet(wallet);\r\n      };\r\n\r\n      if (document.readyState !== 'complete') {\r\n        // wait to ensure that browser extensions are loaded\r\n        const listener = () => {\r\n          updateWallet();\r\n          window.removeEventListener('load', listener);\r\n        };\r\n        window.addEventListener('load', listener);\r\n        return () => window.removeEventListener('load', listener);\r\n      } else {\r\n        updateWallet();\r\n      }\r\n    }\r\n  }, [provider, providerUrl, endpoint]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      wallet.on('connect', () => {\r\n        if (wallet?.publicKey) {\r\n          console.log('connected');\r\n          localStorage.removeItem('feeDiscountKey');\r\n          setConnected(true);\r\n          const walletPublicKey = wallet.publicKey.toBase58();\r\n          const keyToDisplay =\r\n            walletPublicKey.length > 20\r\n              ? `${walletPublicKey.substring(\r\n                  0,\r\n                  7,\r\n                )}.....${walletPublicKey.substring(\r\n                  walletPublicKey.length - 7,\r\n                  walletPublicKey.length,\r\n                )}`\r\n              : walletPublicKey;\r\n\r\n          notify({\r\n            message: 'Wallet update',\r\n            description: 'Connected to wallet ' + keyToDisplay,\r\n          });\r\n        }\r\n      });\r\n\r\n      wallet.on('disconnect', () => {\r\n        setConnected(false);\r\n        notify({\r\n          message: 'Wallet update',\r\n          description: 'Disconnected from wallet',\r\n        });\r\n        localStorage.removeItem('feeDiscountKey');\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      setConnected(false);\r\n      if (wallet && wallet.connected) {\r\n        wallet.disconnect();\r\n        setConnected(false);\r\n      }\r\n    };\r\n  }, [wallet]);\r\n\r\n  useEffect(() => {\r\n    if (wallet && autoConnect) {\r\n      wallet.connect();\r\n      setAutoConnect(false);\r\n    }\r\n\r\n    return () => {};\r\n  }, [wallet, autoConnect]);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const select = useCallback(() => setIsModalVisible(true), []);\r\n  const close = useCallback(() => setIsModalVisible(false), []);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        select,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n      <Modal\r\n        title=\"Select Wallet\"\r\n        okText=\"Connect\"\r\n        visible={isModalVisible}\r\n        okButtonProps={{ style: { display: 'none' } }}\r\n        onCancel={close}\r\n        width={400}\r\n      >\r\n        {WALLET_PROVIDERS.map((provider) => {\r\n          const onClick = function () {\r\n            setProviderUrl(provider.url);\r\n            setAutoConnect(true);\r\n            close();\r\n          };\r\n\r\n          return (\r\n            <Button\r\n              key={provider.name}\r\n              size=\"large\"\r\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\r\n              onClick={onClick}\r\n              icon={\r\n                <img\r\n                  alt={`${provider.name}`}\r\n                  width={20}\r\n                  height={20}\r\n                  src={provider.icon}\r\n                  style={{ marginRight: 8 }}\r\n                />\r\n              }\r\n              style={{\r\n                display: 'block',\r\n                width: '100%',\r\n                textAlign: 'left',\r\n                marginBottom: 8,\r\n              }}\r\n            >\r\n              {provider.name}\r\n            </Button>\r\n          );\r\n        })}\r\n      </Modal>\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n\r\n  const wallet = context.wallet;\r\n  return {\r\n    connected: context.connected,\r\n    wallet: wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n    select: context.select,\r\n    connect() {\r\n      wallet ? wallet.connect() : context.select();\r\n    },\r\n    disconnect() {\r\n      wallet?.disconnect();\r\n    },\r\n  };\r\n}\r\n","import Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport function SolletExtensionAdapter(_, network) {\r\n  const sollet = (window as any).sollet;\r\n  if (sollet) {\r\n    return new Wallet(sollet, network);\r\n  }\r\n\r\n  return {\r\n    on: () => {},\r\n    connect: () => {\r\n      notify({\r\n        message: 'Sollet Extension Error',\r\n        description: 'Please install the Sollet Extension for Chrome',\r\n      });\r\n    }\r\n  }\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport {PRIMARY_BLUE, PRIMARY_PINK,SECONDARY_BLUE} from '../src/consts/colors.consts'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml,body{\r\n  background: #11161D;\r\n}\r\ninput[type=number]::-webkit-inner-spin-button {\r\n  opacity: 0;\r\n}\r\ninput[type=number]:hover::-webkit-inner-spin-button,\r\ninput[type=number]:focus::-webkit-inner-spin-button {\r\n  opacity: 0.25;\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n}\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2d313c;\r\n}\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #5b5f67;\r\n}\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #5b5f67;\r\n}\r\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\r\n  background-color: ${PRIMARY_PINK};\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-track,\r\n.ant-slider ant-slider-track:hover {\r\n  background-color: ${PRIMARY_PINK};\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-dot-active,\r\n.ant-slider-handle,\r\n.ant-slider-handle-click-focused,\r\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\r\n  border: 2px solid ${PRIMARY_PINK}; \r\n}\r\n.ant-table-tbody > tr.ant-table-row:hover > td {\r\n  background: #273043;\r\n}\r\n.ant-table-tbody > tr > td {\r\n  border-bottom: 8px solid #1A2029;\r\n}\r\n.ant-table-container table > thead > tr:first-child th {\r\n  border-bottom: none;\r\n}\r\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\r\n  border-top: 1px solid #434a59 !important;\r\n}\r\n.ant-layout { \r\n  background: rgb(28,28,28);\r\n  background: radial-gradient(circle, rgba(28,28,28,1) 0%, rgba(6,6,6,1) 50%, rgba(25,31,88,1) 100%);\r\n\r\n  \r\n  }\r\n  .ant-table {\r\n    background: #212734;\r\n  }\r\n  .ant-table-thead > tr > th {\r\n    background: #1A2029;\r\n  }\r\n.ant-select-item-option-content {\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n}\r\n.ant-modal-content {\r\n  background: rgb(28, 28, 28);\r\n  \r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  from { background-color: ${PRIMARY_PINK};}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-moz-keyframes highlight {\r\n  from { background-color: ${PRIMARY_PINK};}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-keyframes highlight {\r\n  from { background-color: ${PRIMARY_PINK};}\r\n  to {background-color: #1A2029;}\r\n}\r\n.flash {\r\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\r\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\r\n  animation: highlight 0.5s ease 0s 1 alternate;\r\n}`;\r\n","export const PRIMARY_PINK = '#Ff3399'\r\nexport const PRIMARY_BLUE = '#6147FF'\r\nexport const SECONDARY_BLUE = '#475FBD'","import React, { useEffect, useState } from 'react';\r\nimport { Col, Input, Modal, Row, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function CustomMarketDialog({\r\n  visible,\r\n  onAddCustomMarket,\r\n  onClose,\r\n}) {\r\n  const connection = useConnection();\r\n\r\n  const [marketId, setMarketId] = useState('');\r\n\r\n  const [marketLabel, setMarketLabel] = useState('');\r\n  const [baseLabel, setBaseLabel] = useState('');\r\n  const [quoteLabel, setQuoteLabel] = useState('');\r\n\r\n  const [market, setMarket] = useState(null);\r\n  const [loadingMarket, setLoadingMarket] = useState(false);\r\n\r\n  const wellFormedMarketId = isValidPublicKey(marketId);\r\n\r\n  const [marketAccountInfo] = useAccountInfo(\r\n    wellFormedMarketId ? new PublicKey(marketId) : null,\r\n  );\r\n  const programId = marketAccountInfo\r\n    ? marketAccountInfo.owner.toBase58()\r\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\r\n\r\n  useEffect(() => {\r\n    if (!wellFormedMarketId || !programId) {\r\n      resetLabels();\r\n      return;\r\n    }\r\n    setLoadingMarket(true);\r\n    Market.load(\r\n      connection,\r\n      new PublicKey(marketId),\r\n      {},\r\n      new PublicKey(programId),\r\n    )\r\n      .then((market) => {\r\n        setMarket(market);\r\n      })\r\n      .catch(() => {\r\n        resetLabels();\r\n        setMarket(null);\r\n      })\r\n      .finally(() => setLoadingMarket(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [connection, marketId, programId]);\r\n\r\n  const resetLabels = () => {\r\n    setMarketLabel(null);\r\n    setBaseLabel(null);\r\n    setQuoteLabel(null);\r\n  };\r\n\r\n  const knownMarket = MARKETS.find(\r\n    (m) =>\r\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\r\n  );\r\n  const knownProgram = MARKETS.find(\r\n    (m) => m.programId.toBase58() === programId,\r\n  );\r\n  const knownBaseCurrency =\r\n    market?.baseMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n      ?.name;\r\n\r\n  const knownQuoteCurrency =\r\n    market?.quoteMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n      ?.name;\r\n\r\n  const canSubmit =\r\n    !loadingMarket &&\r\n    !!market &&\r\n    market.publicKey.toBase58() === marketId &&\r\n    marketId &&\r\n    programId &&\r\n    marketLabel &&\r\n    (knownBaseCurrency || baseLabel) &&\r\n    (knownQuoteCurrency || quoteLabel) &&\r\n    wellFormedMarketId;\r\n\r\n  const onSubmit = () => {\r\n    if (!canSubmit) {\r\n      notify({\r\n        message: 'Please fill in all fields with valid values',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      address: marketId,\r\n      programId,\r\n      name: marketLabel,\r\n    };\r\n    if (!knownBaseCurrency) {\r\n      params.baseLabel = baseLabel;\r\n    }\r\n    if (!knownQuoteCurrency) {\r\n      params.quoteLabel = quoteLabel;\r\n    }\r\n    onAddCustomMarket(params);\r\n    onDoClose();\r\n  };\r\n\r\n  const onDoClose = () => {\r\n    resetLabels();\r\n    setMarket(null);\r\n    setMarketId(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom market'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={\r\n        market && knownProgram && knownProgram.deprecated\r\n          ? 'Refused to add'\r\n          : 'Add'\r\n      }\r\n      onCancel={onDoClose}\r\n      okButtonProps={{\r\n        disabled:\r\n          !canSubmit || (market && knownProgram && knownProgram.deprecated),\r\n      }}\r\n    >\r\n      <div>\r\n        {wellFormedMarketId ? (\r\n          <>\r\n            {!market && !loadingMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Not a valid market</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\r\n              </Row>\r\n            )}\r\n            {market && !knownProgram && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownProgram && knownProgram.deprecated && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {marketId && !wellFormedMarketId && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Invalid market ID</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n        <Row style={{ marginBottom: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Id\"\r\n              value={marketId}\r\n              onChange={(e) => setMarketId(e.target.value)}\r\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Label\"\r\n              disabled={!market}\r\n              value={marketLabel}\r\n              onChange={(e) => setMarketLabel(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Base label\"\r\n              disabled={!market || knownBaseCurrency}\r\n              value={knownBaseCurrency || baseLabel}\r\n              onChange={(e) => setBaseLabel(e.target.value)}\r\n            />\r\n            {market && !knownBaseCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Quote label\"\r\n              disabled={!market || knownQuoteCurrency}\r\n              value={knownQuoteCurrency || quoteLabel}\r\n              onChange={(e) => setQuoteLabel(e.target.value)}\r\n            />\r\n            {market && !knownQuoteCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { notify } from './notifications';\r\nimport { getDecimalCount, sleep } from './utils';\r\nimport { getSelectedTokenAccountForMint } from './markets';\r\nimport {\r\n  Account,\r\n  AccountInfo,\r\n  Commitment,\r\n  Connection,\r\n  PublicKey,\r\n  RpcResponseAndContext,\r\n  SimulatedTransactionResponse,\r\n  SystemProgram,\r\n  Transaction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport {\r\n  Token,\r\n  ASSOCIATED_TOKEN_PROGRAM_ID,\r\n  TOKEN_PROGRAM_ID,\r\n} from '@solana/spl-token';\r\nimport BN from 'bn.js';\r\nimport {\r\n  DexInstructions,\r\n  Market,\r\n  OpenOrders,\r\n  parseInstructionErrorResponse,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport { SelectedTokenAccounts, TokenAccount } from './types';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport { Buffer } from 'buffer';\r\nimport assert from 'assert';\r\nimport { struct } from 'superstruct';\r\nimport { WalletAdapter } from '../wallet-adapters';\r\nimport { getTokenByMintAddress } from './tokens';\r\n\r\nexport async function createTokenAccountTransaction({\r\n  connection,\r\n  wallet,\r\n  mintPublicKey,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  mintPublicKey: PublicKey;\r\n}): Promise<{\r\n  transaction: Transaction;\r\n  newAccountPubkey: PublicKey;\r\n}> {\r\n  const ata = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    mintPublicKey,\r\n    wallet.publicKey,\r\n  );\r\n  const transaction = new Transaction();\r\n  transaction.add(\r\n    Token.createAssociatedTokenAccountInstruction(\r\n      ASSOCIATED_TOKEN_PROGRAM_ID,\r\n      TOKEN_PROGRAM_ID,\r\n      mintPublicKey,\r\n      ata,\r\n      wallet.publicKey,\r\n      wallet.publicKey,\r\n    ),\r\n  );\r\n  return {\r\n    transaction,\r\n    newAccountPubkey: ata,\r\n  };\r\n}\r\n\r\nexport async function settleFunds({\r\n  market,\r\n  openOrders,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n  sendNotification = true,\r\n  usdcRef = undefined,\r\n  usdtRef = undefined,\r\n}: {\r\n  market: Market;\r\n  openOrders: OpenOrders;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseCurrencyAccount: TokenAccount;\r\n  quoteCurrencyAccount: TokenAccount;\r\n  sendNotification?: boolean;\r\n  usdcRef?: PublicKey;\r\n  usdtRef?: PublicKey;\r\n}): Promise<string | undefined> {\r\n  if (\r\n    !market ||\r\n    !wallet ||\r\n    !connection ||\r\n    !openOrders ||\r\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\r\n  ) {\r\n    if (sendNotification) {\r\n      notify({ message: 'Not connected' });\r\n    }\r\n    return;\r\n  }\r\n\r\n  let createAccountTransaction: Transaction | undefined;\r\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\r\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\r\n\r\n  if (!baseCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n  }\r\n  if (!quoteCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n  }\r\n  let referrerQuoteWallet: PublicKey | null = null;\r\n  if (market.supportsReferralFees) {\r\n    const quoteToken = getTokenByMintAddress(\r\n      market.quoteMintAddress.toBase58(),\r\n    );\r\n    if (quoteToken?.referrer) {\r\n      referrerQuoteWallet = new PublicKey(quoteToken?.referrer);\r\n    }\r\n  }\r\n  const {\r\n    transaction: settleFundsTransaction,\r\n    signers: settleFundsSigners,\r\n  } = await market.makeSettleFundsTransaction(\r\n    connection,\r\n    openOrders,\r\n    baseCurrencyAccountPubkey,\r\n    quoteCurrencyAccountPubkey,\r\n    referrerQuoteWallet,\r\n  );\r\n\r\n  let transaction = mergeTransactions([\r\n    createAccountTransaction,\r\n    settleFundsTransaction,\r\n  ]);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers: settleFundsSigners,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Settling funds...',\r\n    sendNotification,\r\n  });\r\n}\r\n\r\nexport async function settleAllFunds({\r\n  connection,\r\n  wallet,\r\n  tokenAccounts,\r\n  markets,\r\n  selectedTokenAccounts,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  tokenAccounts: TokenAccount[];\r\n  markets: Market[];\r\n  selectedTokenAccounts?: SelectedTokenAccounts;\r\n}) {\r\n  if (!markets || !wallet || !connection || !tokenAccounts) {\r\n    return;\r\n  }\r\n\r\n  const programIds: PublicKey[] = [];\r\n  markets\r\n    .reduce((cumulative, m) => {\r\n      // @ts-ignore\r\n      cumulative.push(m._programId);\r\n      return cumulative;\r\n    }, [])\r\n    .forEach((programId) => {\r\n      if (!programIds.find((p) => p.equals(programId))) {\r\n        programIds.push(programId);\r\n      }\r\n    });\r\n\r\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\r\n    const openOrdersAccounts = await OpenOrders.findForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n      programId,\r\n    );\r\n    return openOrdersAccounts.filter(\r\n      (openOrders) =>\r\n        openOrders.baseTokenFree.toNumber() ||\r\n        openOrders.quoteTokenFree.toNumber(),\r\n    );\r\n  };\r\n\r\n  const openOrdersAccountsForProgramIds = await Promise.all(\r\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\r\n  );\r\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\r\n    (accounts, current) => accounts.concat(current),\r\n    [],\r\n  );\r\n\r\n  const settleTransactions = (\r\n    await Promise.all(\r\n      openOrdersAccounts.map((openOrdersAccount) => {\r\n        const market = markets.find((m) =>\r\n          // @ts-ignore\r\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\r\n        );\r\n        if (\r\n          openOrdersAccount.baseTokenFree.isZero() &&\r\n          openOrdersAccount.quoteTokenFree.isZero()\r\n        ) {\r\n          // nothing to settle for this market.\r\n          return null;\r\n        }\r\n        const baseMint = market?.baseMintAddress;\r\n        const quoteMint = market?.quoteMintAddress;\r\n\r\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          baseMint,\r\n          baseMint &&\r\n          selectedTokenAccounts &&\r\n          selectedTokenAccounts[baseMint.toBase58()],\r\n        )?.pubkey;\r\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          quoteMint,\r\n          quoteMint &&\r\n          selectedTokenAccounts &&\r\n          selectedTokenAccounts[quoteMint.toBase58()],\r\n        )?.pubkey;\r\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          market &&\r\n          market.makeSettleFundsTransaction(\r\n            connection,\r\n            openOrdersAccount,\r\n            selectedBaseTokenAccount,\r\n            selectedQuoteTokenAccount,\r\n          )\r\n        );\r\n      }),\r\n    )\r\n  ).filter(\r\n    (\r\n      x,\r\n    ): x is {\r\n      signers: Account[];\r\n      transaction: Transaction;\r\n      payer: PublicKey;\r\n    } => !!x,\r\n  );\r\n  if (!settleTransactions || settleTransactions.length === 0) return;\r\n\r\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\r\n  const signers: Array<Account> = [];\r\n  settleTransactions\r\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\r\n    .forEach((signer) => {\r\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\r\n        signers.push(signer);\r\n      }\r\n    });\r\n\r\n  const transaction = mergeTransactions(transactions);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n  });\r\n}\r\n\r\nexport async function cancelOrder(params: {\r\n  market: Market;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  order: Order;\r\n}) {\r\n  return cancelOrders({ ...params, orders: [params.order] });\r\n}\r\n\r\nexport async function cancelOrders({\r\n  market,\r\n  wallet,\r\n  connection,\r\n  orders,\r\n}: {\r\n  market: Market;\r\n  wallet: WalletAdapter;\r\n  connection: Connection;\r\n  orders: Order[];\r\n}) {\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  orders.forEach((order) => {\r\n    transaction.add(\r\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\r\n    );\r\n  });\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Sending cancel...',\r\n  });\r\n}\r\n\r\nexport async function placeOrder({\r\n  side,\r\n  price,\r\n  size,\r\n  orderType,\r\n  market,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n  feeDiscountPubkey = undefined,\r\n}: {\r\n  side: 'buy' | 'sell';\r\n  price: number;\r\n  size: number;\r\n  orderType: 'ioc' | 'postOnly' | 'limit';\r\n  market: Market | undefined | null;\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseCurrencyAccount: PublicKey | undefined;\r\n  quoteCurrencyAccount: PublicKey | undefined;\r\n  feeDiscountPubkey: PublicKey | undefined;\r\n}) {\r\n  let formattedMinOrderSize =\r\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\r\n    market?.minOrderSize;\r\n  let formattedTickSize =\r\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\r\n    market?.tickSize;\r\n  const isIncrement = (num, step) =>\r\n    Math.abs((num / step) % 1) < 1e-5 ||\r\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\r\n  if (isNaN(price)) {\r\n    notify({ message: 'Invalid price', type: 'error' });\r\n    return;\r\n  }\r\n  if (isNaN(size)) {\r\n    notify({ message: 'Invalid size', type: 'error' });\r\n    return;\r\n  }\r\n  if (!wallet || !wallet.publicKey) {\r\n    notify({ message: 'Connect wallet', type: 'error' });\r\n    return;\r\n  }\r\n  if (!market) {\r\n    notify({ message: 'Invalid  market', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(size, market.minOrderSize)) {\r\n    notify({\r\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (size < market.minOrderSize) {\r\n    notify({ message: 'Size too small', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(price, market.tickSize)) {\r\n    notify({\r\n      message: `Price must be an increment of ${formattedTickSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (price < market.tickSize) {\r\n    notify({ message: 'Price under tick size', type: 'error' });\r\n    return;\r\n  }\r\n  const owner = wallet.publicKey;\r\n  const transaction = new Transaction();\r\n  const signers: Account[] = [];\r\n\r\n  if (!baseCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    baseCurrencyAccount = newAccountPubkey;\r\n  }\r\n  if (!quoteCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    quoteCurrencyAccount = newAccountPubkey;\r\n  }\r\n\r\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\r\n  if (!payer) {\r\n    notify({\r\n      message: 'Need an SPL token account for cost currency',\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  const params = {\r\n    owner,\r\n    payer,\r\n    side,\r\n    price,\r\n    size,\r\n    orderType,\r\n    feeDiscountPubkey: feeDiscountPubkey || null,\r\n  };\r\n  console.log(params);\r\n\r\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\r\n  transaction.add(matchOrderstransaction);\r\n  const startTime = getUnixTs();\r\n  let {\r\n    transaction: placeOrderTx,\r\n    signers: placeOrderSigners,\r\n  } = await market.makePlaceOrderTransaction(\r\n    connection,\r\n    params,\r\n    120_000,\r\n    120_000,\r\n  );\r\n  const endTime = getUnixTs();\r\n  console.log(`Creating order transaction took ${endTime - startTime}`);\r\n  transaction.add(placeOrderTx);\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  signers.push(...placeOrderSigners);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    signers,\r\n    sendingMessage: 'Sending order...',\r\n  });\r\n}\r\n\r\nexport async function listMarket({\r\n  connection,\r\n  wallet,\r\n  baseMint,\r\n  quoteMint,\r\n  baseLotSize,\r\n  quoteLotSize,\r\n  dexProgramId,\r\n}: {\r\n  connection: Connection;\r\n  wallet: WalletAdapter;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  baseLotSize: number;\r\n  quoteLotSize: number;\r\n  dexProgramId: PublicKey;\r\n}) {\r\n  const market = new Account();\r\n  const requestQueue = new Account();\r\n  const eventQueue = new Account();\r\n  const bids = new Account();\r\n  const asks = new Account();\r\n  const baseVault = new Account();\r\n  const quoteVault = new Account();\r\n  const feeRateBps = 0;\r\n  const quoteDustThreshold = new BN(100);\r\n\r\n  async function getVaultOwnerAndNonce() {\r\n    const nonce = new BN(0);\r\n    while (true) {\r\n      try {\r\n        const vaultOwner = await PublicKey.createProgramAddress(\r\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\r\n          dexProgramId,\r\n        );\r\n        return [vaultOwner, nonce];\r\n      } catch (e) {\r\n        nonce.iaddn(1);\r\n      }\r\n    }\r\n  }\r\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\r\n\r\n  const tx1 = new Transaction();\r\n  tx1.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: baseVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: quoteVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: baseVault.publicKey,\r\n      mint: baseMint,\r\n      owner: vaultOwner,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: quoteVault.publicKey,\r\n      mint: quoteMint,\r\n      owner: vaultOwner,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: market.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(\r\n        Market.getLayout(dexProgramId).span,\r\n      ),\r\n      space: Market.getLayout(dexProgramId).span,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: requestQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\r\n      space: 5120 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: eventQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\r\n      space: 262144 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: bids.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: asks.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    DexInstructions.initializeMarket({\r\n      market: market.publicKey,\r\n      requestQueue: requestQueue.publicKey,\r\n      eventQueue: eventQueue.publicKey,\r\n      bids: bids.publicKey,\r\n      asks: asks.publicKey,\r\n      baseVault: baseVault.publicKey,\r\n      quoteVault: quoteVault.publicKey,\r\n      baseMint,\r\n      quoteMint,\r\n      baseLotSize: new BN(baseLotSize),\r\n      quoteLotSize: new BN(quoteLotSize),\r\n      feeRateBps,\r\n      vaultSignerNonce,\r\n      quoteDustThreshold,\r\n      programId: dexProgramId,\r\n      authority: undefined,\r\n    }),\r\n  );\r\n\r\n  const signedTransactions = await signTransactions({\r\n    transactionsAndSigners: [\r\n      { transaction: tx1, signers: [baseVault, quoteVault] },\r\n      {\r\n        transaction: tx2,\r\n        signers: [market, requestQueue, eventQueue, bids, asks],\r\n      },\r\n    ],\r\n    wallet,\r\n    connection,\r\n  });\r\n  for (let signedTransaction of signedTransactions) {\r\n    await sendSignedTransaction({\r\n      signedTransaction,\r\n      connection,\r\n    });\r\n  }\r\n\r\n  return market.publicKey;\r\n}\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n  sendNotification = true,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: WalletAdapter;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n  sendNotification?: boolean;\r\n}) {\r\n  const signedTransaction = await signTransaction({\r\n    transaction,\r\n    wallet,\r\n    signers,\r\n    connection,\r\n  });\r\n  return await sendSignedTransaction({\r\n    signedTransaction,\r\n    connection,\r\n    sendingMessage,\r\n    sentMessage,\r\n    successMessage,\r\n    timeout,\r\n    sendNotification,\r\n  });\r\n}\r\n\r\nexport async function signTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: WalletAdapter;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n}) {\r\n  transaction.recentBlockhash = (\r\n    await connection.getRecentBlockhash('max')\r\n  ).blockhash;\r\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  return await wallet.signTransaction(transaction);\r\n}\r\n\r\nexport async function signTransactions({\r\n  transactionsAndSigners,\r\n  wallet,\r\n  connection,\r\n}: {\r\n  transactionsAndSigners: {\r\n    transaction: Transaction;\r\n    signers?: Array<Account>;\r\n  }[];\r\n  wallet: WalletAdapter;\r\n  connection: Connection;\r\n}) {\r\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\r\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\r\n    transaction.recentBlockhash = blockhash;\r\n    transaction.setSigners(\r\n      wallet.publicKey,\r\n      ...signers.map((s) => s.publicKey),\r\n    );\r\n    if (signers?.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n  });\r\n  return await wallet.signAllTransactions(\r\n    transactionsAndSigners.map(({ transaction }) => transaction),\r\n  );\r\n}\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n  sendNotification = true,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n  sendNotification?: boolean;\r\n}): Promise<string> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  if (sendNotification) {\r\n    notify({ message: sendingMessage });\r\n  }\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n  if (sendNotification) {\r\n    notify({ message: sentMessage, type: 'success', txid });\r\n  }\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(300);\r\n    }\r\n  })();\r\n  try {\r\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\r\n  } catch (err) {\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) { }\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      let parsedError;\r\n      if (\r\n        typeof simulateResult.err == 'object' &&\r\n        'InstructionError' in simulateResult.err\r\n      ) {\r\n        const parsedErrorInfo = parseInstructionErrorResponse(\r\n          signedTransaction,\r\n          simulateResult.err['InstructionError'],\r\n        );\r\n        parsedError = parsedErrorInfo.error;\r\n      } else {\r\n        parsedError = JSON.stringify(simulateResult.err);\r\n      }\r\n      throw new Error(parsedError);\r\n    }\r\n    throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n  if (sendNotification) {\r\n    notify({ message: successMessage, type: 'success', txid });\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return txid;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n) {\r\n  let done = false;\r\n  const result = await new Promise((resolve, reject) => {\r\n    (async () => {\r\n      setTimeout(() => {\r\n        if (done) {\r\n          return;\r\n        }\r\n        done = true;\r\n        console.log('Timed out for txid', txid);\r\n        reject({ timeout: true });\r\n      }, timeout);\r\n      try {\r\n        connection.onSignature(\r\n          txid,\r\n          (result) => {\r\n            console.log('WS confirmed', txid, result);\r\n            done = true;\r\n            if (result.err) {\r\n              reject(result.err);\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          'recent',\r\n        );\r\n        console.log('Set up WS connection', txid);\r\n      } catch (e) {\r\n        done = true;\r\n        console.log('WS error in setup', txid, e);\r\n      }\r\n      while (!done) {\r\n        // eslint-disable-next-line no-loop-func\r\n        (async () => {\r\n          try {\r\n            const signatureStatuses = await connection.getSignatureStatuses([\r\n              txid,\r\n            ]);\r\n            const result = signatureStatuses && signatureStatuses.value[0];\r\n            if (!done) {\r\n              if (!result) {\r\n                console.log('REST null result for', txid, result);\r\n              } else if (result.err) {\r\n                console.log('REST error for', txid, result);\r\n                done = true;\r\n                reject(result.err);\r\n              } else if (!result.confirmations) {\r\n                console.log('REST no confirmations for', txid, result);\r\n              } else {\r\n                console.log('REST confirmation for', txid, result);\r\n                done = true;\r\n                resolve(result);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!done) {\r\n              console.log('REST connection error: txid', txid, e);\r\n            }\r\n          }\r\n        })();\r\n        await sleep(300);\r\n      }\r\n    })();\r\n  });\r\n  done = true;\r\n  return result;\r\n}\r\n\r\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\r\n  const transaction = new Transaction();\r\n  transactions\r\n    .filter((t): t is Transaction => t !== undefined)\r\n    .forEach((t) => {\r\n      transaction.add(t);\r\n    });\r\n  return transaction;\r\n}\r\n\r\nfunction jsonRpcResult(resultDescription: any) {\r\n  const jsonRpcVersion = struct.literal('2.0');\r\n  return struct.union([\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'any',\r\n    }),\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'null?',\r\n      result: resultDescription,\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction jsonRpcResultAndContext(resultDescription: any) {\r\n  return jsonRpcResult({\r\n    context: struct({\r\n      slot: 'number',\r\n    }),\r\n    value: resultDescription,\r\n  });\r\n}\r\n\r\nconst AccountInfoResult = struct({\r\n  executable: 'boolean',\r\n  owner: 'string',\r\n  lamports: 'number',\r\n  data: 'any',\r\n  rentEpoch: 'number?',\r\n});\r\n\r\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\r\n  struct.array([struct.union(['null', AccountInfoResult])]),\r\n);\r\n\r\nexport async function getMultipleSolanaAccounts(\r\n  connection: Connection,\r\n  publicKeys: PublicKey[],\r\n): Promise<\r\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\r\n> {\r\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\r\n  // @ts-ignore\r\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\r\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\r\n  if (res.error) {\r\n    throw new Error(\r\n      'failed to get info about accounts ' +\r\n      publicKeys.map((k) => k.toBase58()).join(', ') +\r\n      ': ' +\r\n      res.error.message,\r\n    );\r\n  }\r\n  assert(typeof res.result !== 'undefined');\r\n  const accounts: Array<{\r\n    executable: any;\r\n    owner: PublicKey;\r\n    lamports: any;\r\n    data: Buffer;\r\n  } | null> = [];\r\n  for (const account of res.result.value) {\r\n    let value: {\r\n      executable: any;\r\n      owner: PublicKey;\r\n      lamports: any;\r\n      data: Buffer;\r\n    } | null = null;\r\n    if (res.result.value) {\r\n      const { executable, owner, lamports, data } = account;\r\n      assert(data[1] === 'base64');\r\n      value = {\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n        data: Buffer.from(data[0], 'base64'),\r\n      };\r\n    }\r\n    accounts.push(value);\r\n  }\r\n  return {\r\n    context: {\r\n      slot: res.result.context.slot,\r\n    },\r\n    value: Object.fromEntries(\r\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\r\n    ),\r\n  };\r\n}\r\n\r\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n","import * as BufferLayout from 'buffer-layout';\r\n\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\r\n\r\nimport BN from 'bn.js';\r\nimport { TOKEN_MINTS } from '@project-serum/serum';\r\nimport { TokenAccount } from './types';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\n// @ts-ignore\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { getMultipleSolanaAccounts } from './send';\r\nimport tuple from 'immutable-tuple';\r\nimport { useAsyncData } from './fetch-loop';\r\nimport { useConnection } from './connection';\r\nimport { useMemo } from 'react';\r\n\r\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(32, 'mint'),\r\n  BufferLayout.blob(32, 'owner'),\r\n  BufferLayout.nu64('amount'),\r\n  BufferLayout.blob(93),\r\n]);\r\n\r\nexport const MINT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(36),\r\n  BufferLayout.blob(8, 'supply'),\r\n  BufferLayout.u8('decimals'),\r\n  BufferLayout.u8('initialized'),\r\n  BufferLayout.blob(36),\r\n]);\r\n\r\nexport function parseTokenAccountData(data: Buffer): {\r\n  mint: PublicKey;\r\n  owner: PublicKey;\r\n  amount: number;\r\n} {\r\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\r\n  return {\r\n    mint: new PublicKey(mint),\r\n    owner: new PublicKey(owner),\r\n    amount,\r\n  };\r\n}\r\n\r\nexport interface MintInfo {\r\n  decimals: number;\r\n  initialized: boolean;\r\n  supply: BN;\r\n}\r\n\r\nexport function parseTokenMintData(data): MintInfo {\r\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\r\n  return {\r\n    decimals,\r\n    initialized: !!initialized,\r\n    supply: new BN(supply, 10, 'le'),\r\n  };\r\n}\r\n\r\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\r\n  return [\r\n    {\r\n      memcmp: {\r\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\r\n        bytes: publicKey.toBase58(),\r\n      },\r\n    },\r\n    {\r\n      dataSize: ACCOUNT_LAYOUT.span,\r\n    },\r\n  ];\r\n}\r\n\r\nexport const TOKEN_PROGRAM_ID = new PublicKey(\r\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\r\n);\r\n\r\nexport async function getOwnedTokenAccounts(\r\n  connection: Connection,\r\n  publicKey: PublicKey,\r\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\r\n  let filters = getOwnedAccountsFilters(publicKey);\r\n  let resp = await connection.getProgramAccounts(TOKEN_PROGRAM_ID, {\r\n    filters,\r\n  });\r\n  return resp.map(\r\n    ({ pubkey, account: { data, executable, owner, lamports } }) => ({\r\n      publicKey: new PublicKey(pubkey),\r\n      accountInfo: {\r\n        data,\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n      },\r\n    }),\r\n  );\r\n}\r\n\r\nexport async function getTokenAccountInfo(\r\n  connection: Connection,\r\n  ownerAddress: PublicKey,\r\n) {\r\n  let [splAccounts, account] = await Promise.all([\r\n    getOwnedTokenAccounts(connection, ownerAddress),\r\n    connection.getAccountInfo(ownerAddress),\r\n  ]);\r\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\r\n    ({ publicKey, accountInfo }) => {\r\n      return {\r\n        pubkey: publicKey,\r\n        account: accountInfo,\r\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\r\n      };\r\n    },\r\n  );\r\n  return parsedSplAccounts.concat({\r\n    pubkey: ownerAddress,\r\n    account,\r\n    effectiveMint: WRAPPED_SOL_MINT,\r\n  });\r\n}\r\n\r\nexport function useMintToTickers(): { [mint: string]: string } {\r\n  const { customMarkets } = useCustomMarkets();\r\n  const [markets] = useAllMarkets();\r\n  return useMemo(() => {\r\n    const mintsToTickers = Object.fromEntries(\r\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\r\n    );\r\n    for (let market of markets || []) {\r\n      const customMarketInfo = customMarkets.find(\r\n        (customMarket) =>\r\n          customMarket.address === market.market.address.toBase58(),\r\n      );\r\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\r\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\r\n        }\r\n      }\r\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\r\n        if (customMarketInfo) {\r\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\r\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\r\n        }\r\n      }\r\n    }\r\n    return mintsToTickers;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [markets?.length, customMarkets.length]);\r\n}\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\nexport function useMintInfos(): [\r\n  (\r\n    | {\r\n        [mintAddress: string]: {\r\n          decimals: number;\r\n          initialized: boolean;\r\n        } | null;\r\n      }\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const connection = useConnection();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [allMarkets] = useAllMarkets();\r\n\r\n  const allMints = (tokenAccounts || [])\r\n    .map((account) => account.effectiveMint)\r\n    .concat(\r\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\r\n    )\r\n    .concat(\r\n      (allMarkets || []).map(\r\n        (marketInfo) => marketInfo.market.quoteMintAddress,\r\n      ),\r\n    );\r\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\r\n    (stringMint) => new PublicKey(stringMint),\r\n  );\r\n\r\n  const getAllMintInfo = async () => {\r\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\r\n    return Object.fromEntries(\r\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\r\n        key,\r\n        accountInfo && parseTokenMintData(accountInfo.data),\r\n      ]),\r\n    );\r\n  };\r\n\r\n  return useAsyncData(\r\n    getAllMintInfo,\r\n    tuple(\r\n      'getAllMintInfo',\r\n      connection,\r\n      (tokenAccounts || []).length,\r\n      (allMarkets || []).length,\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport interface Tokens {\r\n  [key: string]: any;\r\n  [index: number]: any;\r\n}\r\n\r\nexport interface TokenInfo {\r\n  symbol: string;\r\n  name: string;\r\n\r\n  mintAddress: string;\r\n  decimals: number;\r\n\r\n  referrer?: string;\r\n}\r\n\r\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\r\n  if (mintAddress === NATIVE_SOL.mintAddress) {\r\n    return cloneDeep(NATIVE_SOL);\r\n  }\r\n\r\n  let token = null;\r\n\r\n  for (const symbol of Object.keys(TOKENS)) {\r\n    const info = cloneDeep(TOKENS[symbol]);\r\n\r\n    if (info.mintAddress === mintAddress) {\r\n      token = info;\r\n    }\r\n  }\r\n\r\n  return token;\r\n}\r\n\r\nexport const NATIVE_SOL: TokenInfo = {\r\n  symbol: 'SOL',\r\n  name: 'Native Solana',\r\n  mintAddress: '11111111111111111111111111111111',\r\n  decimals: 9,\r\n};\r\n\r\nexport const TOKENS: Tokens = {\r\n  NORA: {\r\n    symbol: 'WSOL',\r\n    mintAddress: '1C2EYVrwmoXAGbiKirFFBeDFDYUBHPhDeg9trhibTND',\r\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg',\r\n  },\r\n  USDC: {\r\n    symbol: 'USDC',\r\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\r\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg',\r\n  }\r\n};\r\n","import { TradeLayout } from './types';\r\n\r\nexport default class RaydiumApi {\r\n  static URL: string = 'https://api.raydium.io/v1/dex/';\r\n\r\n  static async get(path: string) {\r\n    try {\r\n      const response = await fetch(this.URL + path);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success ? responseJson.data.reverse() : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Raydium API ${path}: ${err}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static async getRecentTrades(\r\n    marketAddress: string,\r\n  ): Promise<TradeLayout[] | null> {\r\n    return RaydiumApi.get(`trade/address?market=${marketAddress}`);\r\n  }\r\n}\r\n","import {\r\n  Balances,\r\n  CustomMarketInfo,\r\n  DeprecatedOpenOrdersBalances,\r\n  FullMarketInfo,\r\n  MarketContextValues,\r\n  MarketInfo,\r\n  OrderWithMarketAndMarketName,\r\n  SelectedTokenAccounts,\r\n  TokenAccount,\r\n} from './types';\r\nimport {\r\n  // MARKETS,\r\n  Market,\r\n  OpenOrders,\r\n  Orderbook,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { getCache, setCache } from './fetch-loop';\r\nimport {\r\n  divideBnToNumber,\r\n  floorToDecimal,\r\n  getTokenMultiplierFromDecimals,\r\n  useLocalStorageState,\r\n} from './utils';\r\nimport {\r\n  getTokenAccountInfo,\r\n  parseTokenAccountData,\r\n  TOKENS,\r\n  useMintInfos,\r\n} from './tokens';\r\nimport { refreshCache, useAsyncData } from './fetch-loop';\r\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\r\n\r\nimport BN from 'bn.js';\r\nimport RaydiumApi from './raydiumConnector';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport { PublicKey, Connection } from '@solana/web3.js';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { notify } from './notifications';\r\nimport { sleep } from './utils';\r\nimport tuple from 'immutable-tuple';\r\nimport { useWallet } from './wallet';\r\n\r\n//import {_MARKETS} from '../consts/markets';\r\nimport TOKEN_MINTS from '../consts/token_mints.json'\r\nimport market_addresses from '../consts/markets.json'\r\nimport { IToken } from 'models';\r\n// Used in debugging, should be false in production\r\nconst _IGNORE_DEPRECATED = false;\r\n\r\nconst tokens: IToken[] = []\r\nTOKEN_MINTS.map((value, idx) => {\r\n  const x: IToken = {\r\n    address: new PublicKey(value.address),\r\n    name: value.name\r\n  }\r\n  tokens.push(x)\r\n})\r\n\r\nconst _MARKETS = [\r\n  {\r\n    name: 'NORA/USDC',\r\n    deprecated: false,\r\n    address: new PublicKey('5JC2kckdehvq8k2JMZE9gJzdiyhGyg5CH4HN8gxwWSyo'),\r\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\r\n  }\r\n  // ...MARKETS,\r\n];\r\n\r\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\r\n  ? _MARKETS.map((m) => ({ ...m, deprecated: false }))\r\n  : _MARKETS;\r\n\r\nexport function useMarketsList() {\r\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\r\n}\r\n\r\nexport function useAllMarkets() {\r\n  const connection = useConnection();\r\n  const { customMarkets } = useCustomMarkets();\r\n\r\n  const getAllMarkets = async () => {\r\n    const markets: Array<{\r\n      market: Market;\r\n      marketName: string;\r\n      programId: PublicKey;\r\n    } | null> = await Promise.all(\r\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\r\n        try {\r\n          const market = await Market.load(\r\n            connection,\r\n            marketInfo.address,\r\n            {},\r\n            marketInfo.programId,\r\n          );\r\n          return {\r\n            market,\r\n            marketName: marketInfo.name,\r\n            programId: marketInfo.programId,\r\n          };\r\n        } catch (e) {\r\n          notify({\r\n            message: 'Error loading all market',\r\n            description: 'error',\r\n            type: 'error',\r\n          });\r\n          return null;\r\n        }\r\n      }),\r\n    );\r\n    return markets.filter(\r\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\r\n        !!m,\r\n    );\r\n  };\r\n  return useAsyncData(\r\n    getAllMarkets,\r\n    tuple('getAllMarkets', customMarkets.length, connection),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useUnmigratedOpenOrdersAccounts() {\r\n  const connection = useConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\r\n    if (!wallet || !connection || !wallet.publicKey) {\r\n      return [];\r\n    }\r\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\r\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\r\n    const deprecatedProgramIds = Array.from(\r\n      new Set(\r\n        USE_MARKETS.filter(({ deprecated }) => deprecated).map(\r\n          ({ programId }) => programId.toBase58(),\r\n        ),\r\n      ),\r\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\r\n    let programId: PublicKey;\r\n    for (programId of deprecatedProgramIds) {\r\n      try {\r\n        const openOrdersAccounts = await OpenOrders.findForOwner(\r\n          connection,\r\n          wallet.publicKey,\r\n          programId,\r\n        );\r\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\r\n          openOrdersAccounts\r\n            .filter(\r\n              (openOrders) =>\r\n                openOrders.baseTokenTotal.toNumber() ||\r\n                openOrders.quoteTokenTotal.toNumber(),\r\n            )\r\n            .filter((openOrders) =>\r\n              USE_MARKETS.some(\r\n                (market) =>\r\n                  market.deprecated && market.address.equals(openOrders.market),\r\n              ),\r\n            ),\r\n        );\r\n      } catch (e) {\r\n        console.log(\r\n          'Error loading deprecated markets',\r\n          programId?.toBase58(),\r\n          'error',\r\n        );\r\n      }\r\n    }\r\n    // Maybe sort\r\n    return deprecatedOpenOrdersAccounts;\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getUnmigratedOpenOrdersAccounts',\r\n    connection,\r\n    wallet?.publicKey?.toBase58(),\r\n  );\r\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n\r\n  return {\r\n    accounts,\r\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\r\n  };\r\n}\r\n\r\nconst MarketContext: React.Context<null | MarketContextValues> =\r\n  React.createContext<null | MarketContextValues>(null);\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\n// For things that don't really change\r\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\r\nconst _SLOW_REFRESH_INTERVAL_NEW = 60 * 1000;\r\n\r\n// For things that change frequently\r\nconst _FAST_REFRESH_INTERVAL = 1000;\r\n\r\nexport const DEFAULT_MARKET = USE_MARKETS.find(\r\n  ({ name, deprecated }) => name === 'NORA/USDC' && !deprecated,\r\n);\r\n\r\nexport function getMarketDetails(\r\n  market: Market | undefined | null,\r\n  customMarkets: CustomMarketInfo[],\r\n): FullMarketInfo {\r\n  if (!market) {\r\n    return {};\r\n  }\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo = marketInfos.find((otherMarket) =>\r\n    otherMarket.address.equals(market.address),\r\n  );\r\n\r\n  Object.values(TOKENS).forEach((itemToken) => {\r\n    if (\r\n      !tokens.find(\r\n        (item) => item.address.toString === itemToken.mintAddress,\r\n      )\r\n    ) {\r\n      tokens.push({\r\n        address: new PublicKey(itemToken.mintAddress),\r\n        name: itemToken.symbol,\r\n      });\r\n    }\r\n  });\r\n\r\n  const baseCurrency =\r\n    (market?.baseMintAddress &&\r\n      tokens.find((token) => token.address.equals(market.baseMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\r\n    'UNKNOWN';\r\n  const quoteCurrency =\r\n    (market?.quoteMintAddress &&\r\n      tokens.find((token) => token.address.equals(market.quoteMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\r\n    'UNKNOWN';\r\n  return {\r\n    ...marketInfo,\r\n    marketName: marketInfo?.name,\r\n    baseCurrency,\r\n    quoteCurrency,\r\n    marketInfo,\r\n  };\r\n}\r\n\r\nexport function useCustomMarkets() {\r\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\r\n    CustomMarketInfo[]\r\n  >('customMarkets', []);\r\n  return { customMarkets, setCustomMarkets };\r\n}\r\n\r\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\r\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\r\n\r\n  const address = marketAddress && new PublicKey(marketAddress);\r\n  const connection = useConnection();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo =\r\n    address && marketInfos.find((market) => market.address.equals(address));\r\n\r\n  const [market, setMarket] = useState<Market | null>();\r\n\r\n  const [marketName, setMarketName] = useState('NORA/USDC');\r\n\r\n  const [localToken, setLocalToken] = useState(false);\r\n  const [localMarket, setLocalMarket] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const json = market_addresses;\r\n\r\n    window.localStorage.setItem('apiMarket', JSON.stringify(json));\r\n    const marketData: { [programId: string]: { [market: string]: string } } =\r\n      (json ?? {}).data ?? {};\r\n    for (const [programId, marketDict] of Object.entries(marketData)) {\r\n      for (const [itemMarket, marketName] of Object.entries(marketDict)) {\r\n        if (!_MARKETS.find((item) => item.address.toString() === itemMarket)) {\r\n          _MARKETS.push({\r\n            name: marketName,\r\n            deprecated: false,\r\n            address: new PublicKey(itemMarket),\r\n            programId: new PublicKey(programId),\r\n          });\r\n        }\r\n      }\r\n    }\r\n    console.log('load market over');\r\n    setLocalMarket(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const localMarket = window.localStorage.getItem('apiMarket');\r\n    try {\r\n      if (localMarket === null) {\r\n        console.log('no local market');\r\n        return;\r\n      }\r\n      const marketData: { [programId: string]: { [market: string]: string } } =\r\n        (JSON.parse(localMarket) ?? {}).data ?? {};\r\n      for (const [programId, marketDict] of Object.entries(marketData)) {\r\n        for (const [itemMarket, marketName] of Object.entries(marketDict)) {\r\n          if (\r\n            !_MARKETS.find((item) => item.address.toString() === itemMarket)\r\n          ) {\r\n            _MARKETS.push({\r\n              name: marketName,\r\n              deprecated: false,\r\n              address: new PublicKey(itemMarket),\r\n              programId: new PublicKey(programId),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      console.log('local market over');\r\n      setLocalMarket(true);\r\n    } catch (e) {\r\n      console.error('local market error', e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      const data = await fetch('https://api.raydium.io/v1/dex/token');\r\n      const json = await data.json();\r\n      return json;\r\n    };\r\n\r\n    fetchToken().then((json) => {\r\n      window.localStorage.setItem('apiToken', JSON.stringify(json));\r\n      const tokenData: { [programId: string]: { [market: string]: string } } =\r\n        (json ?? {}).data ?? {};\r\n      for (const [mint, symbol] of Object.entries(tokenData)) {\r\n        if (\r\n          TOKENS[mint] === undefined ||\r\n          !Object.values(TOKENS).find((item) => item.mintAddress === mint)\r\n        ) {\r\n          TOKENS[mint] = {\r\n            symbol,\r\n            mintAddress: mint,\r\n          };\r\n        }\r\n      }\r\n      setLocalToken(true);\r\n      console.log('load token over');\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const localToken = window.localStorage.getItem('apiToken');\r\n    try {\r\n      if (localToken === null) {\r\n        console.log('no local token');\r\n        return;\r\n      }\r\n      const json = JSON.parse(localToken);\r\n      const tokenData: { [programId: string]: { [market: string]: string } } =\r\n        (json ?? {}).data ?? {};\r\n      for (const [mint, symbol] of Object.entries(tokenData)) {\r\n        if (\r\n          TOKENS[mint] === undefined ||\r\n          !Object.values(TOKENS).find((item) => item.mintAddress === mint)\r\n        ) {\r\n          TOKENS[mint] = {\r\n            symbol,\r\n            mintAddress: mint,\r\n          };\r\n        }\r\n      }\r\n      setLocalToken(true);\r\n      console.log('local token over');\r\n    } catch (e) {\r\n      console.error('local token error', e);\r\n    }\r\n  }, []);\r\n\r\n  // Replace existing market with a non-deprecated one on first load\r\n  useEffect(() => {\r\n    if (marketInfo) {\r\n      if (marketInfo.deprecated) {\r\n        console.log('Switching markets from deprecated', marketInfo);\r\n        if (DEFAULT_MARKET) {\r\n          setMarketAddress(\r\n            DEFAULT_MARKET?.address?.toBase58() ||\r\n              '5JC2kckdehvq8k2JMZE9gJzdiyhGyg5CH4HN8gxwWSyo',\r\n          );\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      market &&\r\n      marketInfo &&\r\n      // @ts-ignore\r\n      market._decoded.ownAddress?.equals(marketInfo?.address)\r\n    ) {\r\n      return;\r\n    }\r\n    if (!localMarket || !localToken) return;\r\n    setMarket(null);\r\n    if (!marketInfo || !marketInfo.address) {\r\n      notify({\r\n        message: 'Error loading market',\r\n        description: 'Please select a market from the dropdown',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else {\r\n      setMarketName(marketInfo.name);\r\n    }\r\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\r\n      .then(setMarket)\r\n      .catch((e) =>\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: 'error',\r\n          type: 'error',\r\n        }),\r\n      );\r\n    // eslint-disable-next-line\r\n  }, [connection, marketInfo, USE_MARKETS, localMarket, localToken]);\r\n\r\n  return (\r\n    <MarketContext.Provider\r\n      value={{\r\n        market,\r\n        ...getMarketDetails(market, customMarkets),\r\n        setMarketAddress,\r\n        customMarkets,\r\n        setCustomMarkets,\r\n        marketName,\r\n      }}\r\n    >\r\n      {children}\r\n    </MarketContext.Provider>\r\n  );\r\n}\r\n\r\nexport function getTradePageUrl(marketAddress?: string) {\r\n  if (!marketAddress) {\r\n    const saved = localStorage.getItem('marketAddress');\r\n    if (saved) {\r\n      marketAddress = JSON.parse(saved);\r\n    }\r\n    marketAddress =\r\n      marketAddress ||\r\n      DEFAULT_MARKET?.address.toBase58() ||\r\n      '5JC2kckdehvq8k2JMZE9gJzdiyhGyg5CH4HN8gxwWSyo';\r\n  }\r\n  return `/trade/market/${marketAddress}`;\r\n}\r\n\r\nexport function useSelectedTokenAccounts(): [\r\n  SelectedTokenAccounts,\r\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\r\n] {\r\n  const [selectedTokenAccounts, setSelectedTokenAccounts] =\r\n    useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\r\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\r\n}\r\n\r\nexport function useMarket() {\r\n  const context = useContext(MarketContext);\r\n  if (!context) {\r\n    throw new Error('Missing market context');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useMarkPrice() {\r\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\r\n\r\n  const [orderbook] = useOrderbook();\r\n  const trades = useTrades();\r\n\r\n  useEffect(() => {\r\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\r\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\r\n    let last = trades && trades.length > 0 && trades[0].price;\r\n\r\n    let markPrice =\r\n      bb && ba\r\n        ? last\r\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\r\n          : (bb + ba) / 2\r\n        : null;\r\n\r\n    setMarkPrice(markPrice);\r\n  }, [orderbook, trades]);\r\n\r\n  return markPrice;\r\n}\r\n\r\nexport function _useUnfilteredTrades(limit = 10000) {\r\n  const { market } = useMarket();\r\n  const connection = useConnection();\r\n  async function getUnfilteredTrades(): Promise<any[] | null> {\r\n    if (!market || !connection) {\r\n      return null;\r\n    }\r\n    return await market.loadFills(connection, limit);\r\n  }\r\n  const [trades] = useAsyncData(\r\n    getUnfilteredTrades,\r\n    tuple('getUnfilteredTrades', market, connection),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n  return trades;\r\n  // NOTE: For now, websocket is too expensive since the event queue is large\r\n  // and updates very frequently\r\n\r\n  // let data = useAccountData(market && market._decoded.eventQueue);\r\n  // if (!data) {\r\n  //   return null;\r\n  // }\r\n  // const events = decodeEventQueue(data, limit);\r\n  // return events\r\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\r\n  //   .map(market.parseFillEvent.bind(market));\r\n}\r\n\r\nexport function useRaydiumTrades() {\r\n  const { market } = useMarket();\r\n  const marketAddress = market?.address.toBase58();\r\n\r\n  async function getRaydiumTrades() {\r\n    if (!marketAddress) {\r\n      return null;\r\n    }\r\n    return await RaydiumApi.getRecentTrades(marketAddress);\r\n  }\r\n\r\n  return useAsyncData(\r\n    getRaydiumTrades,\r\n    tuple('getRaydiumTrades', marketAddress),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL_NEW },\r\n    false,\r\n  );\r\n}\r\n\r\nexport function useOrderbookAccounts() {\r\n  const { market } = useMarket();\r\n  // @ts-ignore\r\n  let bidData = useAccountData(market && market._decoded.bids);\r\n  // @ts-ignore\r\n  let askData = useAccountData(market && market._decoded.asks);\r\n  return {\r\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\r\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\r\n  };\r\n}\r\n\r\nexport function useOrderbook(\r\n  depth = 20,\r\n): [{ bids: number[][]; asks: number[][] }, boolean] {\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  const { market } = useMarket();\r\n  const bids =\r\n    !bidOrderbook || !market\r\n      ? []\r\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  const asks =\r\n    !askOrderbook || !market\r\n      ? []\r\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  return [{ bids, asks }, !!bids || !!asks];\r\n}\r\n\r\n// Want the balances table to be fast-updating, dont want open orders to flicker\r\n// TODO: Update to use websocket\r\nexport function useOpenOrdersAccounts(fast = false) {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getOpenOrdersAccounts() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n  }\r\n  return useAsyncData<OpenOrders[] | null>(\r\n    getOpenOrdersAccounts,\r\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\r\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\n// todo: refresh cache after some time?\r\nexport async function getCachedMarket(\r\n  connection: Connection,\r\n  address: PublicKey,\r\n  programId: PublicKey,\r\n) {\r\n  let market;\r\n  const cacheKey = tuple(\r\n    'getCachedMarket',\r\n    'market',\r\n    address.toString(),\r\n    connection,\r\n  );\r\n  if (!getCache(cacheKey)) {\r\n    market = await Market.load(connection, address, {}, programId);\r\n    setCache(cacheKey, market);\r\n  } else {\r\n    market = getCache(cacheKey);\r\n  }\r\n  return market;\r\n}\r\n\r\nexport async function getCachedOpenOrderAccounts(\r\n  connection: Connection,\r\n  market: Market,\r\n  owner: PublicKey,\r\n) {\r\n  let accounts;\r\n  const cacheKey = tuple(\r\n    'getCachedOpenOrderAccounts',\r\n    market.address.toString(),\r\n    owner.toString(),\r\n    connection,\r\n  );\r\n  if (!getCache(cacheKey)) {\r\n    accounts = await market.findOpenOrdersAccountsForOwner(connection, owner);\r\n    setCache(cacheKey, accounts);\r\n  } else {\r\n    accounts = getCache(cacheKey);\r\n  }\r\n  return accounts;\r\n}\r\n\r\nexport function useSelectedOpenOrdersAccount(fast = false) {\r\n  const [accounts] = useOpenOrdersAccounts(fast);\r\n  if (!accounts) {\r\n    return null;\r\n  }\r\n  return accounts[0];\r\n}\r\n\r\nexport function useTokenAccounts(): [\r\n  TokenAccount[] | null | undefined,\r\n  boolean,\r\n] {\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getTokenAccounts() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    return await getTokenAccountInfo(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getTokenAccounts,\r\n    tuple('getTokenAccounts', wallet, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function getSelectedTokenAccountForMint(\r\n  accounts: TokenAccount[] | undefined | null,\r\n  mint: PublicKey | undefined,\r\n  selectedPubKey?: string | PublicKey | null,\r\n) {\r\n  if (!accounts || !mint) {\r\n    return null;\r\n  }\r\n  const filtered = accounts.filter(\r\n    ({ effectiveMint, pubkey }) =>\r\n      mint.equals(effectiveMint) &&\r\n      (!selectedPubKey ||\r\n        (typeof selectedPubKey === 'string'\r\n          ? selectedPubKey\r\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\r\n  );\r\n  return filtered && filtered[0];\r\n}\r\n\r\nexport function useSelectedQuoteCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.quoteMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\nexport function useSelectedBaseCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.baseMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedQuoteCurrencyBalances() {\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\r\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.quoteSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedBaseCurrencyBalances() {\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\r\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.baseSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\nexport function useOpenOrders() {\r\n  const { market, marketName } = useMarket();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\r\n    return null;\r\n  }\r\n  return market\r\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\r\n    .map((order) => ({ ...order, marketName, market }));\r\n}\r\n\r\nexport function useTrades(limit = 100) {\r\n  const trades = _useUnfilteredTrades(limit);\r\n  if (!trades) {\r\n    return null;\r\n  }\r\n  // Until partial fills are each given their own fill, use maker fills\r\n  return trades\r\n    .filter(({ eventFlags }) => eventFlags.maker)\r\n    .map((trade) => ({\r\n      ...trade,\r\n      side: trade.side === 'buy' ? 'sell' : 'buy',\r\n    }));\r\n}\r\n\r\nexport function useLocallyStoredFeeDiscountKey(): {\r\n  storedFeeDiscountKey: PublicKey | undefined;\r\n  setStoredFeeDiscountKey: (key: string) => void;\r\n} {\r\n  const [storedFeeDiscountKey, setStoredFeeDiscountKey] =\r\n    useLocalStorageState<string>(`feeDiscountKey`, undefined);\r\n  return {\r\n    storedFeeDiscountKey: storedFeeDiscountKey\r\n      ? new PublicKey(storedFeeDiscountKey)\r\n      : undefined,\r\n    setStoredFeeDiscountKey,\r\n  };\r\n}\r\n\r\nexport function useFeeDiscountKeys(): [\r\n  (\r\n    | {\r\n        pubkey: PublicKey;\r\n        feeTier: number;\r\n        balance: number;\r\n        mint: PublicKey;\r\n      }[]\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\r\n  let getFeeDiscountKeys = async () => {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    const feeDiscountKey = await market.findFeeDiscountKeys(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n    if (feeDiscountKey) {\r\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\r\n    }\r\n    return feeDiscountKey;\r\n  };\r\n  return useAsyncData(\r\n    getFeeDiscountKeys,\r\n    tuple('getFeeDiscountKeys', wallet, market, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useFills(limit = 100) {\r\n  const { marketName } = useMarket();\r\n  const fills = _useUnfilteredTrades(limit);\r\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\r\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\r\n    return null;\r\n  }\r\n  if (!fills) {\r\n    return null;\r\n  }\r\n  return fills\r\n    .filter((fill) =>\r\n      openOrdersAccounts.some((openOrdersAccount) =>\r\n        fill.openOrders.equals(openOrdersAccount.publicKey),\r\n      ),\r\n    )\r\n    .map((fill) => ({ ...fill, marketName }));\r\n}\r\n\r\nexport function useAllOpenOrdersAccounts() {\r\n  const { wallet, connected } = useWallet();\r\n  const connection = useConnection();\r\n  const marketInfos = useMarketInfos();\r\n  const programIds = [\r\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\r\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\r\n\r\n  const getAllOpenOrdersAccounts = async () => {\r\n    if (!connected || !wallet) {\r\n      return [];\r\n    }\r\n    return (\r\n      await Promise.all(\r\n        programIds.map((programId) =>\r\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\r\n        ),\r\n      )\r\n    ).flat();\r\n  };\r\n  return useAsyncData(\r\n    getAllOpenOrdersAccounts,\r\n    tuple(\r\n      'getAllOpenOrdersAccounts',\r\n      connection,\r\n      connected,\r\n      wallet?.publicKey?.toBase58(),\r\n      marketInfos.length,\r\n      (programIds || []).length,\r\n    ),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersBalances() {\r\n  const [openOrdersAccounts, loadedOpenOrdersAccounts] =\r\n    useAllOpenOrdersAccounts();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n  const [allMarkets] = useAllMarkets();\r\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\r\n    return {};\r\n  }\r\n\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\r\n  );\r\n  const openOrdersBalances: {\r\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketInfo = marketsByAddress[account.market.toBase58()];\r\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\r\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\r\n    if (!(baseMint in openOrdersBalances)) {\r\n      openOrdersBalances[baseMint] = [];\r\n    }\r\n    if (!(quoteMint in openOrdersBalances)) {\r\n      openOrdersBalances[quoteMint] = [];\r\n    }\r\n\r\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\r\n    const baseFree = divideBnToNumber(\r\n      new BN(account.baseTokenFree),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const baseTotal = divideBnToNumber(\r\n      new BN(account.baseTokenTotal),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\r\n    const quoteFree = divideBnToNumber(\r\n      new BN(account.quoteTokenFree),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n    const quoteTotal = divideBnToNumber(\r\n      new BN(account.quoteTokenTotal),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n\r\n    openOrdersBalances[baseMint].push({\r\n      market: account.market,\r\n      free: baseFree,\r\n      total: baseTotal,\r\n    });\r\n    openOrdersBalances[quoteMint].push({\r\n      market: account.market,\r\n      free: quoteFree,\r\n      total: quoteTotal,\r\n    });\r\n  }\r\n  return openOrdersBalances;\r\n}\r\n\r\nexport const useAllOpenOrders = (): {\r\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} => {\r\n  const connection = useConnection();\r\n  const { connected, wallet } = useWallet();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [refresh, setRefresh] = useState(0);\r\n  const [openOrders, setOpenOrders] = useState<\r\n    { orders: Order[]; marketAddress: string }[] | null | undefined\r\n  >(null);\r\n  const [lastRefresh, setLastRefresh] = useState(0);\r\n\r\n  const refreshOpenOrders = () => {\r\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\r\n      setRefresh((prev) => prev + 1);\r\n    } else {\r\n      console.log('not refreshing');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (connected && wallet) {\r\n      const getAllOpenOrders = async () => {\r\n        setLoaded(false);\r\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\r\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\r\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\r\n          try {\r\n            const market = await Market.load(\r\n              connection,\r\n              marketInfo.address,\r\n              undefined,\r\n              marketInfo.programId,\r\n            );\r\n            const orders = await market.loadOrdersForOwner(\r\n              connection,\r\n              wallet?.publicKey,\r\n              30000,\r\n            );\r\n            _openOrders.push({\r\n              orders: orders,\r\n              marketAddress: marketInfo.address.toBase58(),\r\n            });\r\n          } catch (e) {\r\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\r\n          }\r\n        };\r\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\r\n        setOpenOrders(_openOrders);\r\n        setLastRefresh(new Date().getTime());\r\n        setLoaded(true);\r\n      };\r\n      getAllOpenOrders();\r\n    }\r\n  }, [connection, connected, wallet, refresh]);\r\n  return {\r\n    openOrders: openOrders,\r\n    loaded: loaded,\r\n    refreshOpenOrders: refreshOpenOrders,\r\n  };\r\n};\r\n\r\nexport function useBalances(): Balances[] {\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const openOrders = useSelectedOpenOrdersAccount(true);\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseExists =\r\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\r\n  const quoteExists =\r\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\r\n  if (\r\n    baseCurrency === 'UNKNOWN' ||\r\n    quoteCurrency === 'UNKNOWN' ||\r\n    !baseCurrency ||\r\n    !quoteCurrency\r\n  ) {\r\n    return [];\r\n  }\r\n  return [\r\n    {\r\n      market,\r\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\r\n      coin: baseCurrency,\r\n      wallet: baseCurrencyBalances,\r\n      orders:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(\r\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n            )\r\n          : null,\r\n      openOrders,\r\n      unsettled:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\r\n          : null,\r\n    },\r\n    {\r\n      market,\r\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\r\n      coin: quoteCurrency,\r\n      wallet: quoteCurrencyBalances,\r\n      openOrders,\r\n      orders:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(\r\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n            )\r\n          : null,\r\n      unsettled:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\r\n          : null,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useWalletBalancesForAllMarkets(): {\r\n  mint: string;\r\n  balance: number;\r\n}[] {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected } = useWallet();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n\r\n  if (!connected || !mintInfosConnected) {\r\n    return [];\r\n  }\r\n\r\n  let balances: { [mint: string]: number } = {};\r\n  for (let account of tokenAccounts || []) {\r\n    if (!account.account) {\r\n      continue;\r\n    }\r\n    let parsedAccount;\r\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\r\n      parsedAccount = {\r\n        mint: WRAPPED_SOL_MINT,\r\n        owner: account.pubkey,\r\n        amount: account.account.lamports,\r\n      };\r\n    } else {\r\n      parsedAccount = parseTokenAccountData(account.account.data);\r\n    }\r\n    if (!(parsedAccount.mint.toBase58() in balances)) {\r\n      balances[parsedAccount.mint.toBase58()] = 0;\r\n    }\r\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\r\n    const additionalAmount = divideBnToNumber(\r\n      new BN(parsedAccount.amount),\r\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\r\n    );\r\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\r\n  }\r\n  return Object.entries(balances).map(([mint, balance]) => {\r\n    return { mint, balance };\r\n  });\r\n}\r\n\r\nexport function useUnmigratedDeprecatedMarkets() {\r\n  const connection = useConnection();\r\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\r\n  const marketsList =\r\n    accounts &&\r\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\r\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\r\n\r\n  const useUnmigratedDeprecatedMarketsInner = async () => {\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    const getMarket = async (address) => {\r\n      const marketInfo = USE_MARKETS.find((market) =>\r\n        market.address.equals(address),\r\n      );\r\n      if (!marketInfo) {\r\n        console.log('Failed loading market');\r\n        notify({\r\n          message: 'Error loading market',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n      try {\r\n        console.log('Loading market', marketInfo.name);\r\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\r\n        return await Market.load(\r\n          connection,\r\n          marketInfo.address,\r\n          {},\r\n          marketInfo.programId,\r\n        );\r\n      } catch (e) {\r\n        console.log('Failed loading market', marketInfo.name, e);\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: 'error',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\r\n  };\r\n  const [markets] = useAsyncData(\r\n    useUnmigratedDeprecatedMarketsInner,\r\n    tuple(\r\n      'useUnmigratedDeprecatedMarketsInner',\r\n      connection,\r\n      deps && deps.toString(),\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n  return markets.map((market) => ({\r\n    market,\r\n    openOrdersList: accounts?.filter(\r\n      (openOrders) => market && openOrders.market.equals(market.address),\r\n    ),\r\n  }));\r\n}\r\n\r\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useCustomMarkets();\r\n  const connection = useConnection();\r\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\r\n  const marketsList =\r\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\r\n\r\n  // This isn't quite right: open order balances could change\r\n  const deps =\r\n    marketsList &&\r\n    marketsList\r\n      .filter((market): market is Market => !!market)\r\n      .map((market) => market.address.toBase58());\r\n\r\n  async function getOpenOrdersForDeprecatedMarkets() {\r\n    if (!connected || !wallet) {\r\n      return null;\r\n    }\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\r\n    const getOrders = async (market: Market | null) => {\r\n      if (!market) {\r\n        return null;\r\n      }\r\n      const { marketName } = getMarketDetails(market, customMarkets);\r\n      try {\r\n        console.log('Fetching open orders for', marketName);\r\n        // Can do better than this, we have the open orders accounts already\r\n        return (\r\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\r\n        ).map((order) => ({ marketName, market, ...order }));\r\n      } catch (e) {\r\n        console.log('Failed loading open orders', market.address.toBase58(), e);\r\n        notify({\r\n          message: `Error loading open orders for deprecated ${marketName}`,\r\n          description: 'error',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getOrders)))\r\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\r\n      .flat();\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getOpenOrdersForDeprecatedMarkets',\r\n    connected,\r\n    connection,\r\n    wallet,\r\n    deps && deps.toString(),\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(\r\n    getOpenOrdersForDeprecatedMarkets,\r\n    cacheKey,\r\n    {\r\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n    },\r\n  );\r\n  console.log('openOrders', openOrders);\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalancesForDeprecatedMarkets() {\r\n  const markets = useUnmigratedDeprecatedMarkets();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n\r\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\r\n  markets.forEach(({ market, openOrdersList }) => {\r\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\r\n      market,\r\n      customMarkets,\r\n    );\r\n    if (!baseCurrency || !quoteCurrency || !market) {\r\n      return;\r\n    }\r\n    (openOrdersList || []).forEach((openOrders) => {\r\n      const inOrdersBase =\r\n        openOrders?.baseTokenTotal &&\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n        );\r\n      const inOrdersQuote =\r\n        openOrders?.quoteTokenTotal &&\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n        );\r\n      const unsettledBase =\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\r\n      const unsettledQuote =\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\r\n\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: baseCurrency,\r\n        key: `${marketName}${baseCurrency}`,\r\n        orders: inOrdersBase,\r\n        unsettled: unsettledBase,\r\n        openOrders,\r\n      });\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: quoteCurrency,\r\n        key: `${marketName}${quoteCurrency}`,\r\n        orders: inOrdersQuote,\r\n        unsettled: unsettledQuote,\r\n        openOrders,\r\n      });\r\n    });\r\n  });\r\n  return openOrderAccountBalances;\r\n}\r\n\r\nexport function getMarketInfos(\r\n  customMarkets: CustomMarketInfo[],\r\n): MarketInfo[] {\r\n  const customMarketsInfo = customMarkets\r\n    .filter(\r\n      (item) =>\r\n        !USE_MARKETS.find(\r\n          (itemNew) =>\r\n            itemNew.address.toString() === item.address &&\r\n            itemNew.deprecated === true,\r\n        ),\r\n    )\r\n    .map((m) => ({\r\n      ...m,\r\n      address: new PublicKey(m.address),\r\n      programId: new PublicKey(m.programId),\r\n      deprecated: false,\r\n    }));\r\n\r\n  return [...customMarketsInfo, ...USE_MARKETS];\r\n}\r\n\r\nexport function useMarketInfos() {\r\n  const { customMarkets } = useCustomMarkets();\r\n  return getMarketInfos(customMarkets);\r\n}\r\n\r\n/**\r\n * If selling, choose min tick size. If buying choose a price\r\n * s.t. given the state of the orderbook, the order will spend\r\n * `cost` cost currency.\r\n *\r\n * @param orderbook serum Orderbook object\r\n * @param cost quantity to spend. Base currency if selling,\r\n *  quote currency if buying.\r\n * @param tickSizeDecimals size of price increment of the market\r\n */\r\nexport function getMarketOrderPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  if (orderbook.isBids) {\r\n    return orderbook.market.tickSize;\r\n  }\r\n  let spentCost = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  const asks = orderbook.getL2(1000);\r\n  for ([price, sizeAtLevel] of asks) {\r\n    costAtLevel = price * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      break;\r\n    }\r\n    spentCost += costAtLevel;\r\n  }\r\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = sendPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function getExpectedFillPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  let spentCost = 0;\r\n  let avgPrice = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\r\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      avgPrice += (cost - spentCost) * price;\r\n      spentCost = cost;\r\n      break;\r\n    }\r\n    avgPrice += costAtLevel * price;\r\n    spentCost += costAtLevel;\r\n  }\r\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = totalAvgPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function useCurrentlyAutoSettling(): [\r\n  boolean,\r\n  (currentlyAutoSettling: boolean) => void,\r\n] {\r\n  const [currentlyAutoSettling, setCurrentlyAutosettling] =\r\n    useState<boolean>(false);\r\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nexport default function FloatingElement({\r\n  style = undefined,\r\n  children,\r\n  stretchVertical = false,\r\n}) {\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { Button, Col, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  useTokenAccounts,\r\n  getSelectedTokenAccountForMint,\r\n} from '../../utils/markets';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { settleFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport default function BalancesTable({\r\n  balances,\r\n  showMarket,\r\n  hideWalletBalance,\r\n  onSettleSuccess,\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const connection = useSendConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function onSettleFunds(market, openOrders) {\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.baseMintAddress,\r\n        ),\r\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.quoteMintAddress,\r\n        ),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    onSettleSuccess && onSettleSuccess();\r\n  }\r\n  const [rowItem, setRowItem] = useState(4);\r\n  if (showMarket) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  if (hideWalletBalance) {\r\n    setRowItem(rowItem + 1);\r\n  }\r\n  // setRowItem(Math.floor(24 / rowItem));\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          fontSize: 14,\r\n          color: 'rgba(241, 241, 242, 0.5)',\r\n          paddingBottom: 16,\r\n        }}\r\n      >\r\n        {showMarket ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n            Market\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Coin\r\n        </Col>\r\n        {hideWalletBalance ? (\r\n          <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n            Wallet Balance\r\n          </Col>\r\n        ) : null}\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Orders\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Unsettled\r\n        </Col>\r\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n          Action\r\n        </Col>\r\n      </Row>\r\n      <div style={{ height: 350, overflowX: 'hidden' }}>\r\n        {balances.map(\r\n          (\r\n            { marketName, coin, wallet, orders, unsettled, market, openOrders },\r\n            i,\r\n          ) => (\r\n            <Row\r\n              key={i}\r\n              style={{\r\n                fontSize: 14,\r\n                color: 'rgba(241, 241, 242, 1)',\r\n                paddingBottom: 16,\r\n              }}\r\n            >\r\n              {showMarket ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\r\n                  {marketName}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {coin}\r\n              </Col>\r\n              {hideWalletBalance ? (\r\n                <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                  {wallet}\r\n                </Col>\r\n              ) : null}\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {orders}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                {unsettled}\r\n              </Col>\r\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\r\n                <Button\r\n                  ghost\r\n                  style={{ marginRight: 12 }}\r\n                  onClick={() => onSettleFunds(market, openOrders)}\r\n                >\r\n                  Settle {marketName}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ),\r\n        )}\r\n      </div>\r\n    </>\r\n    // <DataTable\r\n    //   emptyLabel=\"No balances\"\r\n    //   dataSource={balances}\r\n    //   columns={columns}\r\n    //   pagination={false}\r\n    // />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { cancelOrder } from '../../utils/send';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { notify } from '../../utils/notifications';\r\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: rgba(241, 241, 242, 1);\r\n  // border: 1px solid rgba(194, 0, 251, 0.1);\r\n  border: 1px solid #C200FB;\r\n  border-radius: 4px;\r\n  width: 65px;\r\n  height: 20px;\r\n  font-size: 10;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport default function OpenOrderTable({\r\n  openOrders,\r\n  onCancelSuccess,\r\n  pageSize,\r\n  loading,\r\n  marketFilter,\r\n}: {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      if (wallet) {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } else {\r\n      throw Error('Error cancelling order')\r\n    }\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const dataSource = (openOrders || []).map((order) => ({\r\n    ...order,\r\n    key: order.orderId,\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\r\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\r\n          <Col span={5} style={{ textAlign: 'right' }}>Price</Col>\r\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\r\n        </Row>\r\n        <div style={{ height: 350, overflowX: 'hidden' }}>\r\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\r\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\r\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\r\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\r\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\r\n              <Col span={4} style={{ textAlign: 'right' }}>\r\n                <CancelButton\r\n                  onClick={() => cancel(dataSource[i])}\r\n                  loading={cancelId + '' === orderId + ''}\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n        {/*<DataTable*/}\r\n        {/*  emptyLabel=\"No open orders\"*/}\r\n        {/*  dataSource={dataSource}*/}\r\n        {/*  columns={columns}*/}\r\n        {/*  pagination={true}*/}\r\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\r\n        {/*  loading={loading !== undefined && loading}*/}\r\n        {/*/>*/}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Button, Divider, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useGetOpenOrdersForDeprecatedMarkets,\r\n  useBalancesForDeprecatedMarkets,\r\n  useUnmigratedOpenOrdersAccounts,\r\n} from '../utils/markets';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\r\nimport BalancesTable from './UserInfoTable/BalancesTable';\r\nimport Link from './Link';\r\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\r\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\r\n  const balances = useBalancesForDeprecatedMarkets();\r\n  const { openOrders, loaded, refreshOpenOrders } =\r\n    useGetOpenOrdersForDeprecatedMarkets();\r\n\r\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\r\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\r\n  const filteredBalances =\r\n    balances &&\r\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\r\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\r\n  return (\r\n    <FloatingElement>\r\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\r\n        Migrate to new USDC markets\r\n      </Title>\r\n      <Typography>\r\n        <Link\r\n          external\r\n          to={\r\n            'https://solscan.io/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\r\n          }\r\n        >\r\n          Native USDC\r\n        </Link>{' '}\r\n        has arrived on Solana! See{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\r\n          }\r\n        >\r\n          Circle's announcement\r\n        </Link>{' '}\r\n        for more information.\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Serum is transitioning from the previous{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://solscan.io/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\r\n          }\r\n        >\r\n          Wrapped USDC\r\n        </Link>\r\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\r\n        directly on{' '}\r\n        <Link external to={'https://sollet.io'}>\r\n          sollet.io\r\n        </Link>\r\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\r\n        <Link external to={'https://ftx.com'}>\r\n          FTX\r\n        </Link>\r\n        .\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\r\n        over to the new USDC markets, please cancel your orders and settle your\r\n        funds on old markets.\r\n      </Typography>\r\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\r\n        <Button onClick={() => refresh(true)}>\r\n          <SyncOutlined /> Refresh data\r\n        </Button>\r\n      </div>\r\n      {!balances ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <>\r\n          <Divider>\r\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\r\n          </Divider>\r\n          {needToCancelOrders ? (\r\n            loaded ? (\r\n              <OpenOrderTable\r\n                openOrders={openOrders}\r\n                onCancelSuccess={() => {\r\n                  setTimeout(() => {\r\n                    refresh();\r\n                    refreshOpenOrders();\r\n                  }, 1000); // Wait so that on-chain account state reflects the update\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin size=\"large\" />\r\n            )\r\n          ) : null}\r\n          <Divider>\r\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\r\n          </Divider>\r\n          {needToSettleFunds && (\r\n            <BalancesTable\r\n              balances={filteredBalances}\r\n              hideWalletBalance\r\n              showMarket\r\n              onSettleSuccess={() => {\r\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\r\n              }}\r\n            />\r\n          )}\r\n          <Divider>Switch to upgraded markets</Divider>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              onClick={switchToLiveMarkets}\r\n              disabled={needToSettleFunds || needToCancelOrders}\r\n            >\r\n              Switch to new markets\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\r\nimport { isEqual, getDecimalCount } from '../utils/utils';\r\nimport { useInterval } from '../utils/useInterval';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport usePrevious from '../utils/usePrevious';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst Title = styled.div``;\r\n\r\nconst SizeTitle = styled(Row)`\r\n  padding: 16px 0 12px;\r\n  color: #434a59;\r\n`;\r\n\r\nconst MarkPriceTitle = styled(Row)`\r\n  padding: 15px 0 12px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  text-align: right;\r\n  float: right;\r\n  height: 100%;\r\n  ${(props) =>\r\n    props['data-width'] &&\r\n    css`\r\n      width: ${props['data-width']};\r\n    `}\r\n  ${(props) =>\r\n    props['data-bgcolor'] &&\r\n    css`\r\n      background-color: ${props['data-bgcolor']};\r\n    `}\r\n`;\r\n\r\nconst Price = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\r\n  const markPrice = useMarkPrice();\r\n  const [orderbook] = useOrderbook();\r\n  const { baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const currentOrderbookData = useRef(null);\r\n  const lastOrderbookData = useRef(null);\r\n\r\n  const [orderbookData, setOrderbookData] = useState(null);\r\n\r\n  useInterval(() => {\r\n    if (\r\n      !currentOrderbookData.current ||\r\n      JSON.stringify(currentOrderbookData.current) !==\r\n        JSON.stringify(lastOrderbookData.current)\r\n    ) {\r\n      let bids = orderbook?.bids || [];\r\n      let asks = orderbook?.asks || [];\r\n\r\n      let sum = (total, [, size], index) =>\r\n        index < depth ? total + size : total;\r\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\r\n\r\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\r\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\r\n\r\n      currentOrderbookData.current = {\r\n        bids: orderbook?.bids,\r\n        asks: orderbook?.asks,\r\n      };\r\n\r\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\r\n    }\r\n  }, 250);\r\n\r\n  useEffect(() => {\r\n    lastOrderbookData.current = {\r\n      bids: orderbook?.bids,\r\n      asks: orderbook?.asks,\r\n    };\r\n  }, [orderbook]);\r\n\r\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\r\n    let cumulative = orders\r\n      .slice(0, depth)\r\n      .reduce((cumulative, [price, size], i) => {\r\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\r\n        cumulative.push({\r\n          price,\r\n          size,\r\n          cumulativeSize,\r\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\r\n        });\r\n        return cumulative;\r\n      }, []);\r\n    if (backwards) {\r\n      cumulative = cumulative.reverse();\r\n    }\r\n    return cumulative;\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={{\r\n        ...(smallScreen\r\n          ? { flex: 1 }\r\n          : { height: '500px', overflow: 'hidden' }),\r\n        height: 500,\r\n      }}\r\n    >\r\n      <Title\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        Order book\r\n      </Title>\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'white',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'white',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      <div style={{ paddingBottom: 16 }}>\r\n        {orderbookData?.asks.map(({ price, size, sizePercent }) => (\r\n          <OrderbookRow\r\n            key={price + ''}\r\n            price={price}\r\n            size={size}\r\n            side={'sell'}\r\n            sizePercent={sizePercent}\r\n            onPriceClick={() => onPrice(price)}\r\n            onSizeClick={() => onSize(size)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <MarkPriceComponent markPrice={markPrice} />\r\n      <SizeTitle>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            color: 'white',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col\r\n          span={12}\r\n          style={{\r\n            textAlign: 'right',\r\n            paddingRight: 20,\r\n            color: 'white',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'buy'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OrderbookRow = React.memo(\r\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\r\n    const element = useRef();\r\n\r\n    const { market } = useMarket();\r\n\r\n    useEffect(() => {\r\n      // eslint-disable-next-line\r\n      !element.current?.classList.contains('flash') &&\r\n        element.current?.classList.add('flash');\r\n      const id = setTimeout(\r\n        () =>\r\n          element.current?.classList.contains('flash') &&\r\n          element.current?.classList.remove('flash'),\r\n        250,\r\n      );\r\n      return () => clearTimeout(id);\r\n    }, [price, size]);\r\n\r\n    let formattedSize =\r\n      market?.minOrderSize && !isNaN(size)\r\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\r\n        : size;\r\n\r\n    let formattedPrice =\r\n      market?.tickSize && !isNaN(price)\r\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\r\n        : price;\r\n\r\n    return (\r\n      <Row\r\n        ref={element}\r\n        style={{ marginBottom: 3, fontSize: 12 }}\r\n        onClick={onSizeClick}\r\n      >\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          {formattedSize}\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          <Line\r\n            data-width={sizePercent + '%'}\r\n            data-bgcolor={\r\n              side === 'buy'\r\n                ? 'rgba(65, 199, 122, 0.6)'\r\n                : 'rgba(242, 60, 105, 0.6)'\r\n            }\r\n          />\r\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  },\r\n  (prevProps, nextProps) =>\r\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\r\n);\r\n\r\nconst MarkPriceComponent = React.memo(\r\n  ({ markPrice }) => {\r\n    const { market } = useMarket();\r\n    const previousMarkPrice = usePrevious(markPrice);\r\n\r\n    let markPriceColor =\r\n      markPrice > previousMarkPrice\r\n        ? '#41C77A'\r\n        : markPrice < previousMarkPrice\r\n        ? '#F23B69'\r\n        : 'white';\r\n\r\n    let formattedMarkPrice =\r\n      markPrice &&\r\n      market?.tickSize &&\r\n      markPrice.toFixed(getDecimalCount(market.tickSize));\r\n\r\n    return (\r\n      <MarkPriceTitle\r\n        justify=\"center\"\r\n        style={{\r\n          borderTop: '1px solid #1C274F',\r\n          borderBottom: '1px solid #1C274F',\r\n          fontSize: 16,\r\n        }}\r\n      >\r\n        <Col style={{ color: markPriceColor }}>\r\n          {markPrice > previousMarkPrice && (\r\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {markPrice < previousMarkPrice && (\r\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {formattedMarkPrice || '----'}\r\n        </Col>\r\n      </MarkPriceTitle>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\r\n);\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef<() => void>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current && savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  useSelectedBaseCurrencyAccount,\r\n  useMarket,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\n\r\nexport default function DepositDialog({ onClose, baseOrQuote }) {\r\n  const { market, baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const { providerName, providerUrl } = useWallet();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  let coinMint;\r\n  let account;\r\n  let depositCoin;\r\n  if (baseOrQuote === 'base') {\r\n    coinMint = market?.baseMintAddress;\r\n    account = baseCurrencyAccount;\r\n    depositCoin = baseCurrency;\r\n  } else if (baseOrQuote === 'quote') {\r\n    coinMint = market?.quoteMintAddress;\r\n    account = quoteCurrencyAccount;\r\n    depositCoin = quoteCurrency;\r\n  } else {\r\n    account = null;\r\n  }\r\n  if (!coinMint) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={depositCoin}\r\n      visible={!!coinMint}\r\n      onOk={onClose}\r\n      onCancel={onClose}\r\n    >\r\n      <div style={{ paddingTop: '20px' }}>\r\n        <p style={{ color: 'white' }}>Mint address:</p>\r\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\r\n        <div>\r\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\r\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n            {account ? (\r\n              account.pubkey.toBase58()\r\n            ) : (\r\n              <>\r\n                Visit{' '}\r\n                <Link external to={providerUrl}>\r\n                  {providerName}\r\n                </Link>{' '}\r\n                to create an account for this mint\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Col, Select, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { useSelectedTokenAccounts } from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { TokenAccount } from '../utils/types';\r\nimport { abbreviateAddress } from '../utils/utils';\r\n\r\nexport default function StandaloneTokenAccountsSelect({\r\n  accounts,\r\n  mint,\r\n  label,\r\n}: {\r\n  accounts: TokenAccount[] | null | undefined;\r\n  mint: string | undefined;\r\n  label?: boolean;\r\n}) {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useSelectedTokenAccounts();\r\n\r\n  let selectedValue: string | undefined;\r\n  if (mint && mint in selectedTokenAccounts) {\r\n    selectedValue = selectedTokenAccounts[mint];\r\n  } else if (accounts && accounts?.length > 0) {\r\n    selectedValue = accounts[0].pubkey.toBase58();\r\n  } else {\r\n    selectedValue = undefined;\r\n  }\r\n\r\n  const setTokenAccountForCoin = (value) => {\r\n    if (!mint) {\r\n      notify({\r\n        message: 'Error selecting token account',\r\n        description: 'Mint is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\r\n    newSelectedTokenAccounts[mint] = value;\r\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label && <Col span={8}>Token account:</Col>}\r\n      <Col span={label ? 13 : 21}>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          value={selectedValue}\r\n          onSelect={setTokenAccountForCoin}\r\n        >\r\n          {accounts?.map((account) => (\r\n            <Select.Option\r\n              key={account.pubkey.toBase58()}\r\n              value={account.pubkey.toBase58()}\r\n            >\r\n              <Typography.Text code>\r\n                {label\r\n                  ? abbreviateAddress(account.pubkey, 8)\r\n                  : account.pubkey.toBase58()}\r\n              </Typography.Text>\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Button, Col, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport {\r\n  useBalances,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useTokenAccounts\r\n} from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { settleFunds } from '../utils/send';\r\nimport { Balances } from '../utils/types';\r\nimport { useWallet } from '../utils/wallet';\r\nimport DepositDialog from './DepositDialog';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\r\n\r\nconst RowBox = styled(Row)`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  font-size: 12px;\r\n  display: 'inline-block';\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default function StandaloneBalancesDisplay() {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const balances = useBalances();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const connection = useSendConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseOrQuote, setBaseOrQuote] = useState('');\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const baseCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === baseCurrency);\r\n  const quoteCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === quoteCurrency);\r\n  \r\n  async function onSettleFunds() {\r\n    if (!wallet) {\r\n      notify({\r\n        message: 'Wallet not connected',\r\n        description: 'wallet is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!market) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'market is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!openOrdersAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined 1',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!baseCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined 2',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!quoteCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined 3',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders: openOrdersAccount,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount,\r\n        quoteCurrencyAccount,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  const formattedBalances: [\r\n    string | undefined,\r\n    Balances | undefined,\r\n    string,\r\n    string | undefined,\r\n  ][] = [\r\n    [\r\n      baseCurrency,\r\n      baseCurrencyBalances,\r\n      'base',\r\n      market?.baseMintAddress.toBase58(),\r\n    ],\r\n    [\r\n      quoteCurrency,\r\n      quoteCurrencyBalances,\r\n      'quote',\r\n      market?.quoteMintAddress.toBase58(),\r\n    ],\r\n  ];\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 9 }}>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          borderBottom: '1px solid #1C274F',\r\n          fontSize: 14,\r\n          paddingBottom: 12,\r\n        }}\r\n      >\r\n        Wallet Balance\r\n      </div>\r\n      <div style={{ paddingRight: 10 }}>\r\n        <Row\r\n          style={{\r\n            marginTop: 16,\r\n            color: 'rgba(241, 241, 242, 0.5)',\r\n            fontSize: 12,\r\n            textAlign: 'right',\r\n          }}\r\n        >\r\n          <Col span={6} style={{ textAlign: 'left' }}>\r\n            Asset\r\n          </Col>\r\n          <Col span={9}>Wallet balance</Col>\r\n        </Row>\r\n        {formattedBalances.map(\r\n          ([currency, balances, baseOrQuote, mint], index) => (\r\n            <React.Fragment key={index}>\r\n              <Row\r\n                style={{\r\n                  marginTop: 16,\r\n                  fontSize: 12,\r\n                  color: 'rgba(241, 241, 242, 1)',\r\n                  textAlign: 'right',\r\n                  paddingBottom: 18,\r\n                }}\r\n              >\r\n                <Col\r\n                  span={6}\r\n                  style={{\r\n                    color: 'rgba(241, 241, 242, 0.5)',\r\n                    textAlign: 'left',\r\n                  }}\r\n                >\r\n                  {currency}\r\n                </Col>\r\n                <Col span={9}>{balances && balances.wallet}</Col>\r\n                <Col span={6} style={{ paddingTop: 8 }}></Col>\r\n                <Col span={9} style={{ paddingTop: 8 }}>\r\n                  {/* <ActionButton\r\n                    size=\"small\"\r\n                    onClick={() => setBaseOrQuote(baseOrQuote)}\r\n                  >\r\n                    Deposit\r\n                  </ActionButton> */}\r\n                </Col>\r\n              </Row>\r\n\r\n              {connected && (\r\n                <RowBox\r\n                  align=\"middle\"\r\n                  style={{\r\n                    paddingBottom: 10,\r\n                    borderBottom: '1px solid #1C274F',\r\n                  }}\r\n                >\r\n                  <StandaloneTokenAccountsSelect\r\n                    accounts={tokenAccounts\r\n                      ?.filter(\r\n                        (account) => account.effectiveMint.toBase58() === mint,\r\n                      )\r\n                      .sort((a, b) =>\r\n                        a.pubkey.toString() === wallet?.publicKey.toString()\r\n                          ? -1\r\n                          : 1,\r\n                      )}\r\n                    mint={mint}\r\n                    label\r\n                  />\r\n                </RowBox>\r\n              )}\r\n            </React.Fragment>\r\n          ),\r\n        )}\r\n      </div>\r\n      <DepositDialog\r\n        baseOrQuote={baseOrQuote}\r\n        onClose={() => setBaseOrQuote('')}\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Button, Col, Input, Row, Select, Slider, Switch } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  useFeeDiscountKeys,\r\n  useLocallyStoredFeeDiscountKey,\r\n  useMarkPrice,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useSelectedQuoteCurrencyBalances,\r\n} from '../utils/markets';\r\n\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\r\nimport { notify } from '../utils/notifications';\r\nimport { refreshCache } from '../utils/fetch-loop';\r\nimport styled from 'styled-components';\r\nimport tuple from 'immutable-tuple';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { useWallet } from '../utils/wallet';\r\nimport {\r\n  floorToDecimal,\r\n  getDecimalCount,\r\n  roundToDecimal,\r\n} from '../utils/utils';\r\nimport { getUnixTs, placeOrder } from '../utils/send';\r\nimport { PRIMARY_PINK } from 'consts/colors.consts';\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({\r\n  style,\r\n  setChangeOrderRef,\r\n}: {\r\n  style?: any;\r\n  setChangeOrderRef?: (\r\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\r\n  ) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet, connected } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n  useFeeDiscountKeys();\r\n  const { storedFeeDiscountKey: feeDiscountKey } =\r\n    useLocallyStoredFeeDiscountKey();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n\r\n  const availableQuote =\r\n    openOrdersAccount && market\r\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n      : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  const walletPubkey = wallet?.publicKey;\r\n  useEffect(() => {\r\n    const warmUpCache = async () => {\r\n      try {\r\n        if (!wallet || !wallet.publicKey || !market) {\r\n          console.log(`Skipping refreshing accounts`);\r\n          return;\r\n        }\r\n        const startTime = getUnixTs();\r\n        console.log(`Refreshing accounts for ${market.address}`);\r\n        await market?.findOpenOrdersAccountsForOwner(\r\n          sendConnection,\r\n          wallet.publicKey,\r\n        );\r\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\r\n        const endTime = getUnixTs();\r\n        console.log(\r\n          `Finished refreshing accounts for ${market.address} after ${\r\n            endTime - startTime\r\n          }`,\r\n        );\r\n      } catch (e) {\r\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\r\n      }\r\n    };\r\n    warmUpCache();\r\n    const id = setInterval(warmUpCache, 30_000);\r\n    return () => clearInterval(id);\r\n  }, [market, sendConnection, wallet, walletPubkey]);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({\r\n    size,\r\n    price,\r\n  }: {\r\n    size?: number;\r\n    price?: number;\r\n  }) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize =\r\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(\r\n        typeof formattedMarkPrice === 'number'\r\n          ? formattedMarkPrice\r\n          : parseFloat(formattedMarkPrice),\r\n      );\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      if (wallet) {\r\n        await placeOrder({\r\n          side,\r\n          price,\r\n          size: baseSize,\r\n          orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n          market,\r\n          connection: sendConnection,\r\n          wallet,\r\n          baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n          quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n          feeDiscountPubkey: feeDiscountKey,\r\n        });\r\n        refreshCache(tuple('getTokenAccounts', wallet, connected));\r\n        setPrice(undefined);\r\n        onSetBaseSize(undefined);\r\n      } else {\r\n        throw Error('Error placing order');\r\n      }\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Row>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('buy')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                side === 'buy' ? `2px solid ${PRIMARY_PINK}` : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'buy' ? '#02bf76' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0',\r\n            }}\r\n          >\r\n            BUY\r\n          </Col>\r\n          <Col\r\n            span={12}\r\n            onClick={() => setSide('sell')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                side === 'sell' ? `2px solid ${PRIMARY_PINK}` : '2px solid #1C274F',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color: side === 'sell' ? '#F23B69' : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 0 0',\r\n            }}\r\n          >\r\n            SELL\r\n          </Col>\r\n        </Row>\r\n        <div\r\n          style={{\r\n            padding: '24px 24px 15px',\r\n          }}\r\n        >\r\n          <div style={{ marginTop: 5 }}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12 }}>\r\n              Price\r\n            </div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{\r\n                textAlign: 'right',\r\n                paddingBottom: 8,\r\n                height: 47,\r\n                background: '#1C274F',\r\n                borderRadius: 4,\r\n              }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>\r\n                  {quoteCurrency}\r\n                </span>\r\n              }\r\n              value={price}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25 }}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12 }}>\r\n              Amount\r\n            </div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{\r\n                textAlign: 'right',\r\n                paddingBottom: 8,\r\n                height: 47,\r\n                background: '#1C274F',\r\n                borderRadius: 4,\r\n              }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>\r\n                  {baseCurrency}\r\n                </span>\r\n              }\r\n              value={baseSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginTop: 25 }}>\r\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12 }}>\r\n              Total\r\n            </div>\r\n            <Input\r\n              type=\"number\"\r\n              bordered={false}\r\n              style={{\r\n                textAlign: 'right',\r\n                paddingBottom: 8,\r\n                height: 47,\r\n                background: '#1C274F',\r\n                borderRadius: 4,\r\n              }}\r\n              suffix={\r\n                <span style={{ fontSize: 10, opacity: 0.5 }}>\r\n                  {quoteCurrency}\r\n                </span>\r\n              }\r\n              value={quoteSize}\r\n              step={market?.tickSize || 1}\r\n              onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          <Row style={{ paddingTop: 8 }}>\r\n            <Col span={24}>\r\n              <Slider\r\n                style={{ width: '80%' }}\r\n                value={sizeFraction}\r\n                tipFormatter={(value) => `${value}%`}\r\n                marks={sliderMarks}\r\n                onChange={onSliderChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row style={{ paddingTop: 8 }}>\r\n            <Col\r\n              span={12}\r\n              style={{\r\n                paddingTop: 10,\r\n                paddingLeft: 10,\r\n              }}\r\n            >\r\n              <Switch\r\n                size=\"small\"\r\n                checked={postOnly}\r\n                style={{ width: 32 }}\r\n                onChange={postOnChange}\r\n              />\r\n              <div\r\n                style={{\r\n                  display: 'inline-block',\r\n                  fontSize: 10,\r\n                  color: '#BEBEBE',\r\n                  paddingLeft: 4,\r\n                }}\r\n              >\r\n                POST\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              span={12}\r\n              style={{\r\n                paddingTop: 10,\r\n                paddingLeft: 10,\r\n              }}\r\n            >\r\n              <Switch\r\n                size=\"small\"\r\n                checked={ioc}\r\n                style={{ width: 32 }}\r\n                onChange={iocOnChange}\r\n              />\r\n              <div\r\n                style={{\r\n                  display: 'inline-block',\r\n                  fontSize: 10,\r\n                  color: '#BEBEBE',\r\n                  paddingLeft: 4,\r\n                }}\r\n              >\r\n                IOC\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <BuyButton\r\n            disabled={!price || !baseSize}\r\n            onClick={onSubmit}\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={submitting}\r\n            style={{\r\n              marginTop: 20,\r\n              height: 41,\r\n              background: 'rgba(90, 196, 190, 0.1)',\r\n              border: `1px solid ${PRIMARY_PINK}`,\r\n              borderRadius: 4,\r\n            }}\r\n          >\r\n            {side.toUpperCase()} {baseCurrency}\r\n          </BuyButton>\r\n        </div>\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMarket, useRaydiumTrades } from '../utils/markets';\r\nimport { getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { TradeLayout } from '../utils/types';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nexport default function PublicTrades({ smallScreen }) {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const [trades, loaded] = useRaydiumTrades();\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        {\r\n          ...(smallScreen\r\n            ? { flex: 1 }\r\n            : {\r\n              // marginTop: '10px',\r\n              minHeight: '400px'            }),\r\n        }\r\n      }\r\n    >\r\n      <Title\r\n        style={{\r\n          color: 'rgba(241, 241, 242, 0.75)',\r\n          fontSize: 14,\r\n          borderBottom: '1px solid #1C274F',\r\n          padding: '12px 0 12px 16px',\r\n        }}\r\n      >Recent Market trades</Title>\r\n      <SizeTitle>\r\n        <Col span={8} style={{ textAlign: 'left', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>Price ({quoteCurrency}) </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\r\n          Time\r\n        </Col>\r\n      </SizeTitle>\r\n      {!!trades && loaded && (\r\n        <div\r\n          style={{\r\n            marginRight: '-10px',\r\n            paddingRight: '5px',\r\n            overflowY: 'scroll',\r\n            // maxHeight: smallScreen\r\n            //   ? 'calc(100% - 75px)'\r\n            //   : 'calc(100vh - 800px)',\r\n            height: 350\r\n          }}\r\n        >\r\n          {trades.map((trade: TradeLayout, i: number) => (\r\n            <Row key={i} style={{ marginBottom: 4 }}>\r\n              <Col\r\n                span={8}\r\n                style={{\r\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {market?.tickSize && !isNaN(trade.price)\r\n                  ? Number(trade.price).toFixed(\r\n                      getDecimalCount(market.tickSize),\r\n                    )\r\n                  : trade.price}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', fontSize: 12, }}>\r\n                {market?.minOrderSize && !isNaN(trade.size)\r\n                  ? Number(trade.size).toFixed(\r\n                      getDecimalCount(market.minOrderSize),\r\n                    )\r\n                  : trade.size}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59', fontSize: 12, }}>\r\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nvar t = function () {\r\n  return (t =\r\n    Object.assign ||\r\n    function (t) {\r\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\r\n        for (var r in (e = o[n]))\r\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\r\n      return t;\r\n    }).apply(this, arguments);\r\n};\r\nfunction e(o, n) {\r\n  var i = t({}, o);\r\n  for (var r in n)\r\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\r\n      ? void 0 !== n[r] && (i[r] = n[r])\r\n      : (i[r] = e(o[r], n[r]));\r\n  return i;\r\n}\r\nvar o = {\r\n    mobile: {\r\n      disabled_features: [\r\n        'left_toolbar',\r\n        'header_widget',\r\n        'timeframes_toolbar',\r\n        'edit_buttons_in_legend',\r\n        'context_menus',\r\n        'control_bar',\r\n        'border_around_the_chart',\r\n      ],\r\n      enabled_features: [],\r\n    },\r\n  },\r\n  n = {\r\n    width: 800,\r\n    height: 500,\r\n    interval: '1D',\r\n    timezone: 'Etc/UTC',\r\n    container_id: '',\r\n    library_path: '',\r\n    locale: 'en',\r\n    widgetbar: {\r\n      details: !1,\r\n      watchlist: !1,\r\n      watchlist_settings: { default_symbols: [] },\r\n    },\r\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\r\n    studies_overrides: {},\r\n    trading_customization: { position: {}, order: {} },\r\n    brokerConfig: { configFlags: {} },\r\n    fullscreen: !1,\r\n    autosize: !1,\r\n    disabled_features: [],\r\n    enabled_features: [],\r\n    debug: !1,\r\n    logo: {},\r\n    time_frames: [\r\n      { text: '5y', resolution: '1W' },\r\n      { text: '1y', resolution: '1W' },\r\n      { text: '6m', resolution: '120' },\r\n      { text: '3m', resolution: '60' },\r\n      { text: '1m', resolution: '30' },\r\n      { text: '5d', resolution: '5' },\r\n      { text: '1d', resolution: '1' },\r\n    ],\r\n    client_id: '0',\r\n    user_id: '0',\r\n    charts_storage_api_version: '1.0',\r\n    favorites: { intervals: [], chartTypes: [] },\r\n  };\r\nfunction i() {\r\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\r\n}\r\nvar r = (function () {\r\n  function t(t) {\r\n    if (\r\n      ((this._id =\r\n        'tradingview_' +\r\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\r\n      (this._ready = !1),\r\n      (this._readyHandlers = []),\r\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\r\n      !t.datafeed)\r\n    )\r\n      throw new Error('Datafeed is not defined');\r\n    if (((this._options = e(n, t)), t.preset)) {\r\n      var i = o[t.preset];\r\n      i\r\n        ? (void 0 !== this._options.disabled_features\r\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\r\n                i.disabled_features,\r\n              ))\r\n            : (this._options.disabled_features = i.disabled_features),\r\n          void 0 !== this._options.enabled_features\r\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\r\n                i.enabled_features,\r\n              ))\r\n            : (this._options.enabled_features = i.enabled_features))\r\n        : console.warn('Unknown preset: `' + t.preset + '`');\r\n    }\r\n    'Dark' === this._options.theme &&\r\n      void 0 === this._options.loading_screen &&\r\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\r\n      this._create();\r\n  }\r\n  return (\r\n    (t.prototype.onChartReady = function (t) {\r\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\r\n    }),\r\n    (t.prototype.headerReady = function () {\r\n      var t = this;\r\n      return this._innerWindowLoaded.then(function () {\r\n        return t._innerWindow().headerReady();\r\n      });\r\n    }),\r\n    (t.prototype.onGrayedObjectClicked = function (t) {\r\n      this._innerAPI().onGrayedObjectClicked(t);\r\n    }),\r\n    (t.prototype.onShortcut = function (t, e) {\r\n      this._innerWindow().createShortcutAction(t, e);\r\n    }),\r\n    (t.prototype.subscribe = function (t, e) {\r\n      this._innerAPI().subscribe(t, e);\r\n    }),\r\n    (t.prototype.unsubscribe = function (t, e) {\r\n      this._innerAPI().unsubscribe(t, e);\r\n    }),\r\n    (t.prototype.chart = function (t) {\r\n      return this._innerAPI().chart(t);\r\n    }),\r\n    (t.prototype.getLanguage = function () {\r\n      return this._options.locale;\r\n    }),\r\n    (t.prototype.setSymbol = function (t, e, o) {\r\n      this._innerAPI().changeSymbol(t, e, o);\r\n    }),\r\n    (t.prototype.remove = function () {\r\n      window.removeEventListener('resize', this._onWindowResize),\r\n        this._readyHandlers.splice(0, this._readyHandlers.length),\r\n        delete window[this._id],\r\n        this._iFrame.parentNode &&\r\n          this._iFrame.parentNode.removeChild(this._iFrame);\r\n    }),\r\n    (t.prototype.closePopupsAndDialogs = function () {\r\n      this._innerAPI().closePopupsAndDialogs();\r\n    }),\r\n    (t.prototype.selectLineTool = function (t) {\r\n      this._innerAPI().selectLineTool(t);\r\n    }),\r\n    (t.prototype.selectedLineTool = function () {\r\n      return this._innerAPI().selectedLineTool();\r\n    }),\r\n    (t.prototype.save = function (t) {\r\n      this._innerAPI().saveChart(t);\r\n    }),\r\n    (t.prototype.load = function (t, e) {\r\n      this._innerAPI().loadChart({ json: t, extendedData: e });\r\n    }),\r\n    (t.prototype.getSavedCharts = function (t) {\r\n      this._innerAPI().getSavedCharts(t);\r\n    }),\r\n    (t.prototype.loadChartFromServer = function (t) {\r\n      this._innerAPI().loadChartFromServer(t);\r\n    }),\r\n    (t.prototype.saveChartToServer = function (t, e, o) {\r\n      this._innerAPI().saveChartToServer(t, e, o);\r\n    }),\r\n    (t.prototype.removeChartFromServer = function (t, e) {\r\n      this._innerAPI().removeChartFromServer(t, e);\r\n    }),\r\n    (t.prototype.onContextMenu = function (t) {\r\n      this._innerAPI().onContextMenu(t);\r\n    }),\r\n    (t.prototype.createButton = function (t) {\r\n      return this._innerWindow().createButton(t);\r\n    }),\r\n    (t.prototype.showNoticeDialog = function (t) {\r\n      this._innerAPI().showNoticeDialog(t);\r\n    }),\r\n    (t.prototype.showConfirmDialog = function (t) {\r\n      this._innerAPI().showConfirmDialog(t);\r\n    }),\r\n    (t.prototype.showLoadChartDialog = function () {\r\n      this._innerAPI().showLoadChartDialog();\r\n    }),\r\n    (t.prototype.showSaveAsChartDialog = function () {\r\n      this._innerAPI().showSaveAsChartDialog();\r\n    }),\r\n    (t.prototype.symbolInterval = function () {\r\n      return this._innerAPI().getSymbolInterval();\r\n    }),\r\n    (t.prototype.mainSeriesPriceFormatter = function () {\r\n      return this._innerAPI().mainSeriesPriceFormatter();\r\n    }),\r\n    (t.prototype.getIntervals = function () {\r\n      return this._innerAPI().getIntervals();\r\n    }),\r\n    (t.prototype.getStudiesList = function () {\r\n      return this._innerAPI().getStudiesList();\r\n    }),\r\n    (t.prototype.addCustomCSSFile = function (t) {\r\n      this._innerWindow().addCustomCSSFile(t);\r\n    }),\r\n    (t.prototype.applyOverrides = function (t) {\r\n      (this._options = e(this._options, { overrides: t })),\r\n        this._innerWindow().applyOverrides(t);\r\n    }),\r\n    (t.prototype.applyStudiesOverrides = function (t) {\r\n      this._innerWindow().applyStudiesOverrides(t);\r\n    }),\r\n    (t.prototype.watchList = function () {\r\n      return this._innerAPI().watchlist();\r\n    }),\r\n    (t.prototype.activeChart = function () {\r\n      return this._innerAPI().activeChart();\r\n    }),\r\n    (t.prototype.chartsCount = function () {\r\n      return this._innerAPI().chartsCount();\r\n    }),\r\n    (t.prototype.layout = function () {\r\n      return this._innerAPI().layout();\r\n    }),\r\n    (t.prototype.setLayout = function (t) {\r\n      this._innerAPI().setLayout(t);\r\n    }),\r\n    (t.prototype.layoutName = function () {\r\n      return this._innerAPI().layoutName();\r\n    }),\r\n    (t.prototype.changeTheme = function (t, e) {\r\n      this._innerWindow().changeTheme(t, e);\r\n    }),\r\n    (t.prototype.getTheme = function () {\r\n      return this._innerWindow().getTheme();\r\n    }),\r\n    (t.prototype.takeScreenshot = function () {\r\n      this._innerAPI().takeScreenshot();\r\n    }),\r\n    (t.prototype.lockAllDrawingTools = function () {\r\n      return this._innerAPI().lockAllDrawingTools();\r\n    }),\r\n    (t.prototype.hideAllDrawingTools = function () {\r\n      return this._innerAPI().hideAllDrawingTools();\r\n    }),\r\n    (t.prototype.drawOnAllCharts = function (t) {\r\n      this._innerAPI().drawOnAllCharts(t);\r\n    }),\r\n    (t.prototype.magnetEnabled = function () {\r\n      return this._innerAPI().magnetEnabled();\r\n    }),\r\n    (t.prototype.magnetMode = function () {\r\n      return this._innerAPI().magnetMode();\r\n    }),\r\n    (t.prototype.undoRedoState = function () {\r\n      return this._innerAPI().undoRedoState();\r\n    }),\r\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\r\n      this._innerAPI().setIntervalLinkingEnabled(t);\r\n    }),\r\n    (t.prototype.setTimeFrame = function (t) {\r\n      this._innerAPI().setTimeFrame(t);\r\n    }),\r\n    (t.prototype.symbolSync = function () {\r\n      return this._innerAPI().symbolSync();\r\n    }),\r\n    (t.prototype.intervalSync = function () {\r\n      return this._innerAPI().intervalSync();\r\n    }),\r\n    (t.prototype.crosshairSync = function () {\r\n      return this._innerAPI().crosshairSync();\r\n    }),\r\n    (t.prototype.timeSync = function () {\r\n      return this._innerAPI().timeSync();\r\n    }),\r\n    (t.prototype.getAllFeatures = function () {\r\n      return this._innerWindow().getAllFeatures();\r\n    }),\r\n    (t.prototype.takeClientScreenshot = function () {\r\n      return this._innerAPI().takeClientScreenshot();\r\n    }),\r\n    (t.prototype._innerAPI = function () {\r\n      return this._innerWindow().tradingViewApi;\r\n    }),\r\n    (t.prototype._innerWindow = function () {\r\n      return this._iFrame.contentWindow;\r\n    }),\r\n    (t.prototype._autoResizeChart = function () {\r\n      this._options.fullscreen &&\r\n        (this._iFrame.style.height = window.innerHeight + 'px');\r\n    }),\r\n    (t.prototype._create = function () {\r\n      var t = this,\r\n        e = this._render(),\r\n        o = document.getElementById(this._options.container_id);\r\n      if (null === o)\r\n        throw new Error(\r\n          'There is no such element - #' + this._options.container_id,\r\n        );\r\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\r\n      var n = this._iFrame;\r\n      (this._options.autosize || this._options.fullscreen) &&\r\n        ((n.style.width = '100%'),\r\n        this._options.fullscreen || (n.style.height = '100%')),\r\n        window.addEventListener('resize', this._onWindowResize),\r\n        this._onWindowResize(),\r\n        (this._innerWindowLoaded = new Promise(function (t) {\r\n          var e = function () {\r\n            n.removeEventListener('load', e, !1), t();\r\n          };\r\n          n.addEventListener('load', e, !1);\r\n        })),\r\n        this._innerWindowLoaded.then(function () {\r\n          t._innerWindow().widgetReady(function () {\r\n            t._ready = !0;\r\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\r\n              var n = o[e];\r\n              try {\r\n                n.call(t);\r\n              } catch (i) {\r\n                console.error(i);\r\n              }\r\n            }\r\n            t._innerWindow().initializationFinished();\r\n          });\r\n        });\r\n    }),\r\n    (t.prototype._render = function () {\r\n      var t = window;\r\n      if (\r\n        ((t[this._id] = {\r\n          datafeed: this._options.datafeed,\r\n          customFormatters:\r\n            this._options.custom_formatters || this._options.customFormatters,\r\n          brokerFactory:\r\n            this._options.broker_factory || this._options.brokerFactory,\r\n          overrides: this._options.overrides,\r\n          studiesOverrides: this._options.studies_overrides,\r\n          tradingCustomization: this._options.trading_customization,\r\n          disabledFeatures: this._options.disabled_features,\r\n          enabledFeatures: this._options.enabled_features,\r\n          brokerConfig:\r\n            this._options.broker_config || this._options.brokerConfig,\r\n          restConfig: this._options.restConfig,\r\n          favorites: this._options.favorites,\r\n          logo: this._options.logo,\r\n          numeric_formatting: this._options.numeric_formatting,\r\n          rss_news_feed: this._options.rss_news_feed,\r\n          newsProvider: this._options.news_provider,\r\n          loadLastChart: this._options.load_last_chart,\r\n          saveLoadAdapter: this._options.save_load_adapter,\r\n          loading_screen: this._options.loading_screen,\r\n          settingsAdapter: this._options.settings_adapter,\r\n          getCustomIndicators: this._options.custom_indicators_getter,\r\n        }),\r\n        this._options.saved_data)\r\n      )\r\n        t[this._id].chartContent = { json: this._options.saved_data };\r\n      else if (!this._options.load_last_chart && !this._options.symbol)\r\n        throw new Error(\r\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\r\n        );\r\n      var e =\r\n        (this._options.library_path || '') +\r\n        (encodeURIComponent(this._options.locale) +\r\n          '-tv-chart.cbd3ae28.html#symbol=') +\r\n        encodeURIComponent(this._options.symbol || '') +\r\n        '&interval=' +\r\n        encodeURIComponent(this._options.interval) +\r\n        (this._options.timeframe\r\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\r\n          : '') +\r\n        (this._options.toolbar_bg\r\n          ? '&toolbarbg=' +\r\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\r\n          : '') +\r\n        (this._options.studies_access\r\n          ? '&studiesAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\r\n          : '') +\r\n        '&widgetbar=' +\r\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\r\n        (this._options.drawings_access\r\n          ? '&drawingsAccess=' +\r\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\r\n          : '') +\r\n        '&timeFrames=' +\r\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\r\n        '&locale=' +\r\n        encodeURIComponent(this._options.locale) +\r\n        '&uid=' +\r\n        encodeURIComponent(this._id) +\r\n        '&clientId=' +\r\n        encodeURIComponent(String(this._options.client_id)) +\r\n        '&userId=' +\r\n        encodeURIComponent(String(this._options.user_id)) +\r\n        (this._options.charts_storage_url\r\n          ? '&chartsStorageUrl=' +\r\n            encodeURIComponent(this._options.charts_storage_url)\r\n          : '') +\r\n        (this._options.charts_storage_api_version\r\n          ? '&chartsStorageVer=' +\r\n            encodeURIComponent(this._options.charts_storage_api_version)\r\n          : '') +\r\n        (this._options.custom_css_url\r\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\r\n          : '') +\r\n        (this._options.auto_save_delay\r\n          ? '&autoSaveDelay=' +\r\n            encodeURIComponent(String(this._options.auto_save_delay))\r\n          : '') +\r\n        '&debug=' +\r\n        encodeURIComponent(String(this._options.debug)) +\r\n        (this._options.snapshot_url\r\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\r\n          : '') +\r\n        (this._options.timezone\r\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\r\n          : '') +\r\n        (this._options.study_count_limit\r\n          ? '&studyCountLimit=' +\r\n            encodeURIComponent(String(this._options.study_count_limit))\r\n          : '') +\r\n        (this._options.symbol_search_request_delay\r\n          ? '&ssreqdelay=' +\r\n            encodeURIComponent(\r\n              String(this._options.symbol_search_request_delay),\r\n            )\r\n          : '') +\r\n        (this._options.compare_symbols\r\n          ? '&compareSymbols=' +\r\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\r\n          : '') +\r\n        (this._options.theme\r\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\r\n          : '');\r\n      return (\r\n        '<iframe id=\"' +\r\n        this._id +\r\n        '\" name=\"' +\r\n        this._id +\r\n        '\"  src=\"' +\r\n        e +\r\n        '\"' +\r\n        (this._options.autosize || this._options.fullscreen\r\n          ? ''\r\n          : ' width=\"' +\r\n            this._options.width +\r\n            '\" height=\"' +\r\n            this._options.height +\r\n            '\"') +\r\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\r\n      );\r\n    }),\r\n    t\r\n  );\r\n})();\r\n(window.TradingView = window.TradingView || {}),\r\n  (window.TradingView.version = i);\r\nexport { i as version, r as widget };\r\n","// @ts-nocheck\r\nimport { useMemo } from 'react';\r\nimport { USE_MARKETS } from './markets';\r\nimport { sleep } from './utils';\r\n\r\nconst URL_SERVER = 'https://api.raydium.io/v1/dex/tv/';\r\n\r\nexport const useTvDataFeed = () => {\r\n  return useMemo(() => makeDataFeed(), []);\r\n};\r\n\r\nconst makeDataFeed = () => {\r\n  let subscriptions = {};\r\n  const overTime = {};\r\n  const lastReqTime = {};\r\n\r\n  const getApi = async (url: string) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success\r\n          ? responseJson.data\r\n          : responseJson\r\n          ? responseJson\r\n          : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Chart API ${url}: ${err}`);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return {\r\n    onReady(callback) {\r\n      setTimeout(\r\n        () =>\r\n          callback({\r\n            supported_resolutions: [\r\n              '5',\r\n              '15',\r\n              '60',\r\n              '120',\r\n              '240',\r\n              '1D',\r\n              //  '2D', '3D', '5D', '1W', '1M', '2M', '3M', '6M', '12M'\r\n            ],\r\n            supports_group_request: false,\r\n            supports_marks: false,\r\n            supports_search: false,\r\n            supports_timescale_marks: false,\r\n          }),\r\n        0,\r\n      );\r\n    },\r\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\r\n      // const result = await apiGet(`${URL_SERVER}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${1}`);\r\n      // onResult(result);\r\n    },\r\n    async resolveSymbol(\r\n      symbolName,\r\n      onSymboleResolvedCallback,\r\n      onResolveErrorCallback,\r\n      extension?,\r\n    ) {\r\n      let fromCustomMarket = false;\r\n      let customMarket = [];\r\n      try {\r\n        const customMarketStr = localStorage.getItem('customMarkets');\r\n        customMarket =\r\n          customMarketStr !== null ? JSON.parse(customMarketStr) : [];\r\n      } catch (e) {\r\n        console.log('error', e);\r\n      }\r\n      let marketInfo = USE_MARKETS.find(\r\n        (item) => item.name === symbolName && !item.deprecated,\r\n      );\r\n\r\n      if (!marketInfo) {\r\n        marketInfo = customMarket.find(\r\n          (item) => item.name === symbolName || item.userName === symbolName,\r\n        );\r\n        fromCustomMarket = true;\r\n      }\r\n\r\n      if (!marketInfo) {\r\n        return;\r\n      }\r\n\r\n      const result = await getApi(\r\n        `${URL_SERVER}symbols?market=${marketInfo.address.toString()}`,\r\n      );\r\n      if (!result) {\r\n        onResolveErrorCallback();\r\n        return;\r\n      }\r\n\r\n      if (result.name !== marketInfo.name) {\r\n        if (result.name.includes('unknown')) {\r\n          result.name = marketInfo.name;\r\n          result.ticker = marketInfo.name;\r\n          result.description = marketInfo.name;\r\n        } else {\r\n          if (fromCustomMarket) {\r\n            for (let index = 0; index < customMarket.length; index++) {\r\n              if (customMarket[index].name === symbolName) {\r\n                customMarket[index].userName = customMarket[index].name;\r\n                customMarket[index].name = result.name;\r\n              }\r\n            }\r\n            localStorage.setItem('customMarkets', JSON.stringify(customMarket));\r\n          } else {\r\n            result.name = marketInfo.name;\r\n          }\r\n        }\r\n      }\r\n      onSymboleResolvedCallback(result);\r\n    },\r\n    async getBars(\r\n      symbolInfo,\r\n      resolution,\r\n      from,\r\n      to,\r\n      onHistoryCallback,\r\n      onErrorCallback,\r\n      firstDataRequest,\r\n    ) {\r\n      from = Math.floor(from);\r\n      to = Math.ceil(to);\r\n\r\n      window.localStorage.setItem('resolution', resolution);\r\n      resolution = convertResolutionToApi(resolution);\r\n\r\n      if (from < minTs(symbolInfo.out_count, resolution)) {\r\n        onHistoryCallback([], { nodeData: false });\r\n        return;\r\n      }\r\n\r\n      const key = `${symbolInfo.market}--${resolution}`;\r\n\r\n      if (overTime[key] && overTime[key] > from) {\r\n        onHistoryCallback([], { nodeData: false });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const result = await getApi(\r\n          `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolution}&from_time=${from}&to_time=${to}`,\r\n        );\r\n        /* resolution = String(resolution).substring(0,1)\r\n        const result = await getApi(\r\n          `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolution}&from_time=${from}&to_time=${to}`\r\n        )  */\r\n\r\n        if (result.c.length === 0) {\r\n          overTime[key] = to;\r\n        }\r\n\r\n        onHistoryCallback(parseCandles(result), {\r\n          nodeData: result.length === 0,\r\n        });\r\n      } catch (err) {\r\n        onErrorCallback(err);\r\n      }\r\n    },\r\n    async subscribeBars(\r\n      symbolInfo,\r\n      resolution,\r\n      onRealtimeCallback,\r\n      subscriberUID,\r\n      onResetCacheNeededCallback,\r\n    ) {\r\n      if (subscriptions[subscriberUID]) {\r\n        subscriptions[subscriberUID].stop();\r\n        delete subscriptions[subscriberUID];\r\n      }\r\n\r\n      let stopped = false;\r\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\r\n\r\n      while (!stopped) {\r\n        await sleep(20000);\r\n        for (let i = 0; i < 10; ++i) {\r\n          if (document.visibilityState !== 'visible') {\r\n            await sleep(20000);\r\n          }\r\n        }\r\n        if (stopped) {\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const to = Math.ceil(new Date().getTime() / 1000);\r\n          const from = reduceTs(to, resolution);\r\n\r\n          const resolutionApi = convertResolutionToApi(resolution);\r\n\r\n          if (\r\n            lastReqTime[subscriberUID] &&\r\n            lastReqTime[subscriberUID] + 1000 * 60 > new Date().getTime()\r\n          ) {\r\n            continue;\r\n          }\r\n          lastReqTime[subscriberUID] = new Date().getTime();\r\n\r\n          const candle = await getApi(\r\n            `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolutionApi}&from_time=${from}&to_time=${to}`,\r\n          );\r\n\r\n          for (const item of parseCandles(candle)) {\r\n            onRealtimeCallback(item);\r\n          }\r\n          continue;\r\n        } catch (e) {\r\n          console.warn(e);\r\n          await sleep(100000);\r\n          continue;\r\n        }\r\n      }\r\n    },\r\n    unsubscribeBars(subscriberUID) {\r\n      subscriptions[subscriberUID].stop();\r\n      delete subscriptions[subscriberUID];\r\n    },\r\n    async searchSymbols(\r\n      userInput: string,\r\n      exchange: string,\r\n      symbolType: string,\r\n      onResult: SearchSymbolsCallback,\r\n    ) {\r\n      const marketList: any[] = USE_MARKETS.filter(\r\n        (item) => item.name.includes(userInput) && !item.deprecated,\r\n      );\r\n      const reList = [];\r\n      marketList.forEach((item) => {\r\n        reList.push({\r\n          symbol: item.name,\r\n          full_name: item.name,\r\n          description: item.name,\r\n          exchange: 'Raydium',\r\n          params: [],\r\n          type: 'spot',\r\n          ticker: item.name,\r\n        });\r\n      });\r\n      if (onResult) {\r\n        onResult(reList);\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nconst minTs = (minCount: number, resolutionTv: string) => {\r\n  const ts = new Date().getTime() / 1000;\r\n  switch (resolutionTv) {\r\n    case '1min':\r\n      return ts - 60 * 1 * minCount;\r\n    case '3min':\r\n      return ts - 60 * 3 * minCount;\r\n    case '5min':\r\n      return ts - 60 * 5 * minCount;\r\n    case '15min':\r\n      return ts - 60 * 15 * minCount;\r\n    case '30min':\r\n      return ts - 60 * 30 * minCount;\r\n    case '45min':\r\n      return ts - 60 * 45 * minCount;\r\n    case '1h':\r\n      return ts - 60 * 60 * minCount;\r\n    case '2h':\r\n      return ts - 60 * 120 * minCount;\r\n    case '4h':\r\n      return ts - 60 * 240 * minCount;\r\n    case '12h':\r\n      return ts - 60 * 720 * minCount;\r\n    case '1d':\r\n      return ts - 3600 * 24 * minCount;\r\n    case '2d':\r\n      return ts - 3600 * 24 * 2 * minCount;\r\n    case '3d':\r\n      return ts - 3600 * 24 * 3 * minCount;\r\n    case '5d':\r\n      return ts - 3600 * 24 * 5 * minCount;\r\n    case '7d':\r\n      return ts - 3600 * 24 * 7 * minCount;\r\n    case '1m':\r\n      return ts - 3600 * 24 * 31 * 1 * minCount;\r\n    case '2m':\r\n      return ts - 3600 * 24 * 31 * 2 * minCount;\r\n    case '3m':\r\n      return ts - 3600 * 24 * 31 * 3 * minCount;\r\n    case '6m':\r\n      return ts - 3600 * 24 * 31 * 6 * minCount;\r\n    case '1y':\r\n      return ts - 3600 * 24 * 31 * 12 * minCount;\r\n    default:\r\n      throw Error(`minTs resolution error: ${resolutionTv}`);\r\n  }\r\n};\r\n\r\nconst reduceTs = (ts: number, resolutionTv: string) => {\r\n  switch (resolutionTv) {\r\n    case '1':\r\n      return ts - 60 * 1;\r\n    case '3':\r\n      return ts - 60 * 3;\r\n    case '5':\r\n      return ts - 60 * 5;\r\n    case '15':\r\n      return ts - 60 * 15;\r\n    case '30':\r\n      return ts - 60 * 30;\r\n    case '45':\r\n      return ts - 60 * 45;\r\n    case '60':\r\n      return ts - 60 * 60;\r\n    case '120':\r\n      return ts - 60 * 120;\r\n    case '240':\r\n      return ts - 60 * 240;\r\n    case '720':\r\n      return ts - 60 * 720;\r\n    case '1D':\r\n      return ts - 3600 * 24;\r\n    case '2D':\r\n      return ts - 3600 * 24 * 2;\r\n    case '3D':\r\n      return ts - 3600 * 24 * 3;\r\n    case '5D':\r\n      return ts - 3600 * 24 * 5;\r\n    case '7D':\r\n      return ts - 3600 * 24 * 7;\r\n    case '1M':\r\n      return ts - 3600 * 24 * 31 * 1;\r\n    case '2M':\r\n      return ts - 3600 * 24 * 31 * 2;\r\n    case '3M':\r\n      return ts - 3600 * 24 * 31 * 3;\r\n    case '6M':\r\n      return ts - 3600 * 24 * 31 * 6;\r\n    case '1Y':\r\n      return ts - 3600 * 24 * 31 * 12;\r\n    default:\r\n      throw Error(`reduceTs resolution error: ${resolutionTv}`);\r\n  }\r\n};\r\n\r\nexport const convertResolutionToApi = (resolution: string) => {\r\n  switch (resolution) {\r\n    case '1':\r\n      return '1min';\r\n    case '3':\r\n      return '3min';\r\n    case '5':\r\n      return '5min';\r\n    case '15':\r\n      return '15min';\r\n    case '30':\r\n      return '30min';\r\n    case '45':\r\n      return '45min';\r\n    case '60':\r\n      return '1h';\r\n    case '120':\r\n      return '2h';\r\n    case '240':\r\n      return '4h';\r\n    case '720':\r\n      return '12h';\r\n    case '1D':\r\n      return '1d';\r\n    case '2D':\r\n      return '2d';\r\n    case '3D':\r\n      return '3d';\r\n    case '5D':\r\n      return '5d';\r\n    case '7D':\r\n      return '7d';\r\n    case '1M':\r\n      return '1m';\r\n    case '2M':\r\n      return '2m';\r\n    case '3M':\r\n      return '3m';\r\n    case '6M':\r\n      return '6m';\r\n    case '1Y':\r\n      return '1y';\r\n    default:\r\n      throw Error(`convertResolutionToApi resolution error: ${resolution}`);\r\n  }\r\n};\r\n\r\ninterface rawCandles {\r\n  s: string;\r\n  c: Array<number>;\r\n  o: Array<number>;\r\n  l: Array<number>;\r\n  h: Array<number>;\r\n  t: Array<number>;\r\n  v: Array<number>;\r\n}\r\n\r\ninterface bar {\r\n  time: number;\r\n  close: number;\r\n  open: number;\r\n  low: number;\r\n  high: number;\r\n  volume: number;\r\n}\r\n\r\nconst parseCandles = (candles: rawCandles) => {\r\n  const result: Array<bar> = [];\r\n  for (let i = 0; i < candles.t.length; i++) {\r\n    result.push({\r\n      time: candles.t[i] * 1000,\r\n      close: candles.c[i],\r\n      open: candles.o[i],\r\n      high: candles.h[i],\r\n      low: candles.l[i],\r\n      volume: candles.v[i],\r\n    });\r\n  }\r\n  return result;\r\n};\r\n","const CHARTS_KEY = 'tradingviewCharts';\r\nconst STUDIES_KEY = 'tradingviewStudies';\r\n\r\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\r\n\r\nexport function getAllCharts() {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  return new Promise((resolve) => resolve(charts));\r\n}\r\n\r\nexport function removeChart(chartId) {\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== chartId);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveChart(chartData) {\r\n  let { content, ...info } = chartData;\r\n  if (!info.id) {\r\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\r\n  }\r\n  // @ts-ignore\r\n  info.timestamp = new Date() - 0;\r\n  content = JSON.parse(content);\r\n  content['content'] = JSON.parse(content['content']);\r\n  // Remove \"study_Overlay\" i.e the indexes\r\n  try {\r\n    for (\r\n      var i = 0;\r\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\r\n      i++\r\n    ) {\r\n      if (\r\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\r\n        'study_Overlay'\r\n      ) {\r\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  content['content'] = JSON.stringify(content['content']);\r\n  content = JSON.stringify(content);\r\n  // @ts-ignore\r\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\r\n  charts = charts.filter((chart) => chart.id !== info.id);\r\n  charts.push(info);\r\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\r\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\r\n\r\n  return new Promise((resolve) => resolve(info.id));\r\n}\r\n\r\nexport function getChartContent(chartId) {\r\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n\r\nexport function getAllStudyTemplates() {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  return new Promise((resolve) => resolve(studies));\r\n}\r\n\r\nexport function removeStudyTemplate({ name }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== name);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function saveStudyTemplate({ content, ...info }) {\r\n  // @ts-ignore\r\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\r\n  studies = studies.filter((study) => study.name !== info.name);\r\n  studies.push(info);\r\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\r\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\r\n  return new Promise((resolve) => resolve());\r\n}\r\n\r\nexport function getStudyTemplateContent({ name }) {\r\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\r\n  return new Promise((resolve) => resolve(content));\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  ChartingLibraryWidgetOptions,\r\n  IChartingLibraryWidget,\r\n  widget\r\n} from '../../charting_library';\r\nimport { useTvDataFeed } from '../../utils/Datafeed';\r\nimport { useMarket } from '../../utils/markets';\r\nimport { flatten } from '../../utils/utils';\r\nimport './index.css';\r\nimport * as saveLoadAdapter from './saveLoadAdapter';\r\n\r\n\r\n\r\n\r\nexport interface ChartContainerProps {\r\n  symbol: ChartingLibraryWidgetOptions['symbol'];\r\n  interval: ChartingLibraryWidgetOptions['interval'];\r\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\r\n\r\n  // BEWARE: no trailing slash is expected in feed URL\r\n  datafeedUrl: string;\r\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\r\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\r\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\r\n  clientId: ChartingLibraryWidgetOptions['client_id'];\r\n  userId: ChartingLibraryWidgetOptions['user_id'];\r\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\r\n  autosize: ChartingLibraryWidgetOptions['autosize'];\r\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\r\n  containerId: ChartingLibraryWidgetOptions['container_id'];\r\n  theme: string;\r\n  timeframe: ChartingLibraryWidgetOptions['timeframe'];\r\n}\r\n\r\nexport interface ChartContainerState {}\r\n\r\nexport const TVChartContainer = () => {\r\n  let datafeed = useTvDataFeed();\r\n  let resolution = window.localStorage.getItem('resolution') ?? '60'\r\n  \r\n  const defaultProps: ChartContainerProps = {\r\n    symbol: 'RAY/USDT',\r\n    // @ts-ignore\r\n    interval: '60',\r\n    auto_save_delay: 5,\r\n    theme: 'Dark',\r\n    containerId: 'tv_chart_container',\r\n    libraryPath: '/charting_library/',\r\n    chartsStorageUrl: 'https://saveload.tradingview.com',\r\n    chartsStorageApiVersion: '1.1',\r\n    clientId: 'tradingview.com',\r\n    userId: 'public_user_id',\r\n    fullscreen: false,\r\n    autosize: true,\r\n    studiesOverrides: {},\r\n    timeframe: '1D'\r\n  };\r\n\r\n  const tvWidgetRef = useRef<IChartingLibraryWidget | null>(null);\r\n  const { marketName } = useMarket();\r\n\r\n  const chartProperties = JSON.parse(\r\n    localStorage.getItem('chartproperties') || '{}',\r\n  );\r\n\r\n  useEffect(() => {\r\n    const savedProperties = flatten(chartProperties, {\r\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\r\n    });\r\n\r\n    const widgetOptions: ChartingLibraryWidgetOptions = {\r\n      symbol: marketName as string,\r\n      datafeed: datafeed,\r\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\r\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\r\n      library_path: defaultProps.libraryPath as string,\r\n      auto_save_delay: 5,\r\n\r\n      locale: 'en',\r\n      disabled_features: ['use_localstorage_for_settings'],\r\n      enabled_features: ['study_templates'],\r\n      load_last_chart: true,\r\n      client_id: defaultProps.clientId,\r\n      user_id: defaultProps.userId,\r\n      fullscreen: defaultProps.fullscreen,\r\n      autosize: defaultProps.autosize,\r\n      studies_overrides: defaultProps.studiesOverrides,\r\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\r\n      overrides: {\r\n        ...savedProperties,\r\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\r\n        // 'mainSeriesProperties.candleStyle.borderColor': '#378658',\r\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\r\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\r\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\r\n      },\r\n      // @ts-ignore\r\n      save_load_adapter: saveLoadAdapter,\r\n      settings_adapter: {\r\n        initialSettings: {\r\n          'trading.orderPanelSettingsBroker': JSON.stringify({\r\n            showRelativePriceControl: false,\r\n            showCurrencyRiskInQty: false,\r\n            showPercentRiskInQty: false,\r\n            showBracketsInCurrency: false,\r\n            showBracketsInPercent: false,\r\n          }),\r\n          // \"proterty\"\r\n          'trading.chart.proterty':\r\n            localStorage.getItem('trading.chart.proterty') ||\r\n            JSON.stringify({\r\n              hideFloatingPanel: 1,\r\n            }),\r\n          'chart.favoriteDrawings':\r\n            localStorage.getItem('chart.favoriteDrawings') ||\r\n            JSON.stringify([]),\r\n          'chart.favoriteDrawingsPosition':\r\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\r\n            JSON.stringify({}),\r\n        },\r\n        setValue: (key, value) => {\r\n          localStorage.setItem(key, value);\r\n        },\r\n        removeValue: (key) => {\r\n          localStorage.removeItem(key);\r\n        },\r\n      },\r\n    };\r\n\r\n    const tvWidget = new widget(widgetOptions);\r\n\r\n    tvWidget.onChartReady(() => {\r\n      tvWidgetRef.current = tvWidget;\r\n      tvWidget\r\n        // @ts-ignore\r\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\r\n    });\r\n  }, [marketName]);\r\n  return <div style={{ height: window.innerWidth < 1000 ? '50vh' : 540 }} id={defaultProps.containerId} className={'TVChartContainer'} />;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  //  Tag\r\n} from 'antd';\r\nimport { useFeeDiscountKeys } from '../../utils/markets';\r\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\r\nimport { percentFormat } from '../../utils/utils';\r\n\r\nexport default function FeesTable() {\r\n  const [feeAccounts] = useFeeDiscountKeys();\r\n\r\n  const dataSource = (feeAccounts || []).map((account, index) => ({\r\n    ...account,\r\n    index,\r\n    key: account.pubkey.toBase58(),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={5} style={{ textAlign: 'left' }}>\r\n              Fee Tier\r\n            </Col>\r\n            <Col span={5} style={{ textAlign: 'left' }}>\r\n              Taker\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Maker\r\n            </Col>\r\n            <Col span={5} style={{ textAlign: 'left' }}>\r\n              Balance\r\n            </Col>\r\n            <Col span={5} style={{ textAlign: 'left' }}>\r\n              Mint\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(({ mint, balance, pubkey, feeTier }, index) => (\r\n              <Row\r\n                key={index}\r\n                style={{\r\n                  fontSize: 14,\r\n                  color: 'rgba(241, 241, 242, 1)',\r\n                  paddingBottom: 16,\r\n                }}\r\n              >\r\n                <Col span={5} style={{ textAlign: 'left' }}>\r\n                  <Typography>{feeTier}</Typography>\r\n                  {/* {index === 0 ? (\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                        Selected\r\n                      </Tag>\r\n                    </div>\r\n                  ) : null} */}\r\n                </Col>\r\n                <Col span={5} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).taker)}\r\n                </Col>\r\n                <Col span={4} style={{ textAlign: 'left' }}>\r\n                  {percentFormat.format(getFeeRates(feeTier).maker)}\r\n                </Col>\r\n                <Col span={5} style={{ textAlign: 'left' }}>\r\n                  {balance}\r\n                </Col>\r\n                <Col span={5} style={{ textAlign: 'left' }}>\r\n                  {mint.equals(TokenInstructions.SRM_MINT)\r\n                    ? 'SRM'\r\n                    : mint.equals(TokenInstructions.MSRM_MINT)\r\n                    ? 'MSRM'\r\n                    : 'UNKNOWN'}\r\n                </Col>\r\n\r\n                <Col span={24} style={{ textAlign: 'left' }}>\r\n                  Public key: {pubkey.toBase58()}\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No (M)SRM accounts\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n      {/*<Row style={{ marginTop: 8 }}>*/}\r\n      {/*  <Col>*/}\r\n      {/*    <Typography>*/}\r\n      {/*      Holding SRM or MSRM makes you eligible for fee discounts:*/}\r\n      {/*    </Typography>*/}\r\n      {/*    <FeeScheduleTable />*/}\r\n      {/*  </Col>*/}\r\n      {/*</Row>*/}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { useFills, useMarket } from '../../utils/markets';\r\n\r\nexport default function FillsTable() {\r\n  const fills = useFills();\r\n\r\n  const { quoteCurrency } = useMarket();\r\n\r\n  const dataSource = (fills || []).map((fill) => ({\r\n    ...fill,\r\n    key: `${fill.orderId}${fill.side}`,\r\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row\r\n            style={{\r\n              fontSize: 14,\r\n              color: 'rgba(241, 241, 242, 0.5)',\r\n              paddingBottom: 16,\r\n            }}\r\n          >\r\n            <Col span={4} style={{ textAlign: 'left' }}>\r\n              Market\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Side\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Size\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Price\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              Liquidity\r\n            </Col>\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n              {quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees'}\r\n            </Col>\r\n          </Row>\r\n          <div style={{ height: 350, overflowX: 'hidden' }}>\r\n            {dataSource.map(\r\n              ({ marketName, side, size, price, liquidity, feeCost }, i) => (\r\n                <Row\r\n                  key={i}\r\n                  style={{\r\n                    fontSize: 14,\r\n                    color: 'rgba(241, 241, 242, 1)',\r\n                    paddingBottom: 16,\r\n                  }}\r\n                >\r\n                  <Col span={4} style={{ textAlign: 'left' }}>\r\n                    {marketName}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {side}\r\n                  </Col>\r\n                  <Col\r\n                    span={4}\r\n                    style={{\r\n                      textAlign: 'right',\r\n                      color: 'rgba(90, 196, 190, 1)',\r\n                    }}\r\n                  >\r\n                    {size}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {price}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {liquidity}\r\n                  </Col>\r\n                  <Col span={4} style={{ textAlign: 'right' }}>\r\n                    {feeCost}\r\n                  </Col>\r\n                </Row>\r\n              ),\r\n            )}\r\n          </div>\r\n          {/*<DataTable*/}\r\n          {/*  dataSource={dataSource}*/}\r\n          {/*  columns={columns}*/}\r\n          {/*  pagination={true}*/}\r\n          {/*  pageSize={5}*/}\r\n          {/*  emptyLabel=\"No fills\"*/}\r\n          {/*/>*/}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useBalances, useOpenOrders } from '../../utils/markets';\r\nimport FloatingElement from '../layout/FloatingElement';\r\nimport BalancesTable from './BalancesTable';\r\nimport FeesTable from './FeesTable';\r\nimport FillsTable from './FillsTable';\r\nimport OpenOrderTable from './OpenOrderTable';\r\nimport { PRIMARY_PINK } from 'consts/colors.consts';\r\n\r\nexport default function Index({ smallScreen, market }) {\r\n  const [activeKeyStr, setActiveKeyStr] = useState('orders');\r\n  if (smallScreen) {\r\n    return (\r\n      <FloatingElement style={{ flex: 1, paddingTop: 40 }}>\r\n        <Row>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('orders')}\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'orders' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'orders'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Open Orders\r\n          </Col>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('fills')}\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'fills' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'fills'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Recent Trade History\r\n          </Col>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('balances')}\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'balances' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'balances'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Balances\r\n          </Col>\r\n          {market && market.supportsSrmFeeDiscounts ? (\r\n            <Col\r\n              span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n              onClick={() => setActiveKeyStr('fees')}\r\n              style={{\r\n                width: '50%',\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                borderBottom:\r\n                  activeKeyStr === 'fees' ? `2px solid ${PRIMARY_PINK}` : '',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color:\r\n                  activeKeyStr === 'fees'\r\n                    ? '#F1F1F2'\r\n                    : 'rgba(241, 241, 242, 0.5)',\r\n                padding: '12px 0 12px',\r\n              }}\r\n            >\r\n              Fee Discounts\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <div\r\n          style={{\r\n            border: '1px solid #1C274F',\r\n            minHeight: 50,\r\n            borderBottom: '',\r\n            padding: 16,\r\n          }}\r\n        >\r\n          {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\r\n          {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\r\n          {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\r\n          {activeKeyStr && activeKeyStr === 'fees' ? <FeesTable /> : null}\r\n        </div>\r\n      </FloatingElement>\r\n    );\r\n  } else {\r\n    return (\r\n      <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\r\n        <Row>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('orders')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'orders' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'orders'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Open Orders\r\n          </Col>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('fills')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'fills' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'fills'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Recent Trade History\r\n          </Col>\r\n          <Col\r\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n            onClick={() => setActiveKeyStr('balances')}\r\n            style={{\r\n              height: 42,\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              border: 'transparent',\r\n              borderBottom:\r\n                activeKeyStr === 'balances' ? `2px solid ${PRIMARY_PINK}` : '',\r\n              background: 'transparent',\r\n              fontSize: 14,\r\n              fontStyle: 'normal',\r\n              fontWeight: 600,\r\n              color:\r\n                activeKeyStr === 'balances'\r\n                  ? '#F1F1F2'\r\n                  : 'rgba(241, 241, 242, 0.5)',\r\n              padding: '12px 0 12px',\r\n            }}\r\n          >\r\n            Balances\r\n          </Col>\r\n          {market && market.supportsSrmFeeDiscounts ? (\r\n            <Col\r\n              span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\r\n              onClick={() => setActiveKeyStr('fees')}\r\n              style={{\r\n                height: 42,\r\n                width: '50%',\r\n                textAlign: 'center',\r\n                border: 'transparent',\r\n                borderBottom:\r\n                  activeKeyStr === 'fees' ? `2px solid ${PRIMARY_PINK}` : '',\r\n                background: 'transparent',\r\n                fontSize: 14,\r\n                fontStyle: 'normal',\r\n                fontWeight: 600,\r\n                color:\r\n                  activeKeyStr === 'fees'\r\n                    ? '#F1F1F2'\r\n                    : 'rgba(241, 241, 242, 0.5)',\r\n                padding: '12px 0 12px',\r\n              }}\r\n            >\r\n              Fee Discounts\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n        <div\r\n          style={{\r\n            border: '1px solid #1C274F',\r\n            height: 400,\r\n            borderBottom: '',\r\n            padding: 16,\r\n          }}\r\n        >\r\n          {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\r\n          {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\r\n          {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\r\n          {activeKeyStr && activeKeyStr === 'fees' ? <FeesTable /> : null}\r\n        </div>\r\n      </FloatingElement>\r\n    );\r\n  }\r\n}\r\n\r\nconst OpenOrdersTab = () => {\r\n  const openOrders = useOpenOrders();\r\n\r\n  return <OpenOrderTable openOrders={openOrders} />;\r\n};\r\n\r\nconst BalancesTab = () => {\r\n  const balances = useBalances();\r\n\r\n  return <BalancesTable balances={balances} />;\r\n};\r\n","import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Col, Row, Select } from 'antd';\r\nimport { nanoid } from 'nanoid';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport CustomMarketDialog from '../components/CustomMarketDialog';\r\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\r\nimport Orderbook from '../components/Orderbook';\r\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\r\nimport TradeForm from '../components/TradeForm';\r\nimport TradesTable from '../components/TradesTable';\r\nimport { TVChartContainer } from '../components/TradingView';\r\nimport UserInfoTable from '../components/UserInfoTable';\r\nimport {\r\n  getMarketInfos,\r\n  getTradePageUrl,\r\n  MarketProvider,\r\n  useMarket,\r\n  useMarketsList,\r\n  useMarkPrice,\r\n  useUnmigratedDeprecatedMarkets,\r\n} from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { MarketInfo } from '../utils/types';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function TradePage() {\r\n  const { marketAddress } = useParams();\r\n  useEffect(() => {\r\n    if (marketAddress) {\r\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\r\n    }\r\n  }, [marketAddress]);\r\n  const history = useHistory();\r\n  function setMarketAddress(address) {\r\n    history.push(getTradePageUrl(address));\r\n  }\r\n\r\n  return (\r\n    <MarketProvider\r\n      marketAddress={marketAddress}\r\n      setMarketAddress={setMarketAddress}\r\n    >\r\n      <TradePageInner />\r\n    </MarketProvider>\r\n  );\r\n}\r\n\r\nfunction TradePageInner() {\r\n  const {\r\n    market,\r\n    marketName,\r\n    customMarkets,\r\n    setCustomMarkets,\r\n    setMarketAddress,\r\n  } = useMarket();\r\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\r\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\r\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\r\n  const markPrice = useMarkPrice();\r\n\r\n  const [dimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = marketName ? `${marketName} ` : 'DEX';\r\n  }, [marketName]);\r\n\r\n  const changeOrderRef =\r\n    useRef<({ size, price }: { size?: number; price?: number }) => void>();\r\n\r\n\r\n  const width = dimensions?.width;\r\n\r\n  const componentProps = {\r\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\r\n    onPrice: useCallback(\r\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\r\n      [],\r\n    ),\r\n    onSize: useCallback(\r\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\r\n      [],\r\n    ),\r\n    market: market,\r\n  };\r\n  const component = (() => {\r\n    if (handleDeprecated) {\r\n      return (\r\n        <DeprecatedMarketsPage\r\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\r\n        />\r\n      );\r\n    } else if (width < 1000) {\r\n      return <RenderSmaller {...componentProps} />;\r\n    } else {\r\n      return <RenderNormal {...componentProps} />;\r\n    }\r\n  })();\r\n\r\n  const onAddCustomMarket = (customMarket) => {\r\n    const marketInfo = getMarketInfos(customMarkets).some(\r\n      (m) => m.address.toBase58() === customMarket.address,\r\n    );\r\n    if (marketInfo) {\r\n      notify({\r\n        message: `A market with the given ID already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newCustomMarkets = [...customMarkets, customMarket];\r\n    setCustomMarkets(newCustomMarkets);\r\n    setMarketAddress(customMarket.address);\r\n  };\r\n\r\n  const onDeleteCustomMarket = (address) => {\r\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\r\n    setCustomMarkets(newCustomMarkets);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomMarketDialog\r\n        visible={addMarketVisible}\r\n        onClose={() => setAddMarketVisible(false)}\r\n        onAddCustomMarket={onAddCustomMarket}\r\n      />\r\n      <Wrapper>\r\n        <Row\r\n          align=\"middle\"\r\n          style={{ paddingLeft: 5, paddingRight: 5, height: 64 }}\r\n          gutter={16}\r\n        >\r\n          <Col>\r\n            <MarketSelector\r\n              markets={useMarketsList()}\r\n              setHandleDeprecated={setHandleDeprecated}\r\n              placeholder={'Select market'}\r\n              customMarkets={customMarkets}\r\n              onDeleteCustomMarket={onDeleteCustomMarket}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Row>Price</Row>\r\n            <Row>{markPrice != null ? '$ ' + markPrice : ''}</Row>\r\n          </Col>\r\n        </Row>\r\n        {component}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarketSelector({\r\n  markets,\r\n  placeholder,\r\n  setHandleDeprecated,\r\n  customMarkets,\r\n  onDeleteCustomMarket,\r\n}) {\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const onSetMarketAddress = (marketAddress) => {\r\n    setHandleDeprecated(false);\r\n    setMarketAddress(marketAddress);\r\n  };\r\n\r\n  const selectedMarket = getMarketInfos(customMarkets)\r\n    .find(\r\n      (proposedMarket) =>\r\n        market?.address && proposedMarket.address.equals(market.address),\r\n    )\r\n    ?.address?.toBase58();\r\n\r\n  const uniqueArray = (arr) => {\r\n    let addList: string[] = [];\r\n    let reList: MarketInfo[] = [];\r\n    for (let index = 0; index < arr.length; index += 1) {\r\n      if (addList.indexOf(arr[index].address.toBase58()) === -1) {\r\n        reList.push(arr[index]);\r\n        addList.push(arr[index].address.toBase58());\r\n      }\r\n    }\r\n    return reList;\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      size={'large'}\r\n      bordered={false}\r\n      style={{ width: 360, border: 1 }}\r\n      placeholder={placeholder || 'Select a market'}\r\n      optionFilterProp=\"name\"\r\n      onSelect={onSetMarketAddress}\r\n      listHeight={400}\r\n      value={selectedMarket}\r\n      filterOption={(input, option) =>\r\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {customMarkets && customMarkets.length > 0 && (\r\n        <OptGroup label=\"Custom\">\r\n          {customMarkets.map(({ address, name }, i) => (\r\n            <Option\r\n              value={address}\r\n              key={nanoid()}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col flex=\"auto\">{name}</Col>\r\n                {selectedMarket !== address && (\r\n                  <Col>\r\n                    <DeleteOutlined\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.nativeEvent.stopImmediatePropagation();\r\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Option>\r\n          ))}\r\n        </OptGroup>\r\n      )}\r\n      <OptGroup label=\"Markets\">\r\n        {uniqueArray(markets).map(({ address, name, deprecated }, i) => (\r\n          <Option\r\n            value={address.toBase58()}\r\n            key={nanoid()}\r\n            name={name}\r\n            style={{\r\n              padding: '10px',\r\n              // @ts-ignore\r\n              backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n            }}\r\n          >\r\n            {name} {deprecated ? ' (Deprecated)' : null}\r\n          </Option>\r\n        ))}\r\n      </OptGroup>\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <DeprecatedMarketsInstructions\r\n            switchToLiveMarkets={switchToLiveMarkets}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize, market }) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        minHeight: '900px',\r\n        flexWrap: 'nowrap',\r\n      }}\r\n    >\r\n      <Col\r\n        flex=\"15%\"\r\n        style={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          minWidth: '280px',\r\n        }}\r\n      >\r\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        <StandaloneBalancesDisplay />\r\n      </Col>\r\n\r\n      <Col\r\n        flex=\"auto\"\r\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <TVChartContainer />\r\n        <UserInfoTable smallScreen={false} market={market} />\r\n      </Col>\r\n\r\n      <Col flex=\"15%\" style={{ height: '100%', minWidth: '280px' }}>\r\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\r\n        <TradesTable smallScreen={false} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize, market }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n           <TVChartContainer /> \r\n        </Col>\r\n\r\n        <Col span={16}>\r\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        </Col>\r\n        <Col span={8}>\r\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <UserInfoTable smallScreen={true} market={market} />\r\n        </Col>\r\n\r\n        <Col xs={24} sm={12}>\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <TradesTable smallScreen={false} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\n\r\nexport default function LinkAddress({\r\n  title,\r\n  address,\r\n  shorten = false,\r\n}: {\r\n  title?: undefined | any;\r\n  address: string;\r\n  shorten?: boolean;\r\n}) {\r\n  return (\r\n    <div>\r\n      {title && <p style={{ color: 'white' }}>{title}</p>}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://solscan.io/address/' + address}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { useWallet } from '../utils/wallet';\r\nimport LinkAddress from './LinkAddress';\r\n\r\nexport default function WalletConnect() {\r\n  const { connected, wallet, select, connect, disconnect } = useWallet();\r\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\r\n\r\n  const menu = (\r\n    <Menu>\r\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\r\n      <Menu.Item key=\"3\" onClick={select}>\r\n        Change Wallet\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\r\n      {connected ? 'Disconnect' : 'Connect'}\r\n    </Dropdown.Button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport {\r\n  useAllMarkets,\r\n  useAllOpenOrders,\r\n  useMarketInfos,\r\n} from '../utils/markets';\r\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\r\nimport { Button, Row } from 'antd';\r\nimport { OrderWithMarketAndMarketName } from '../utils/types';\r\nimport { useWallet } from '../utils/wallet';\r\nimport WalletConnect from '../components/WalletConnect';\r\n\r\nexport default function OpenOrdersPage() {\r\n  const { connected } = useWallet();\r\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\r\n  let marketInfos = useMarketInfos();\r\n  let marketAddressesToNames = Object.fromEntries(\r\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\r\n  );\r\n  let [allMarkets] = useAllMarkets();\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((marketInfo) => [\r\n      marketInfo.market.address.toBase58(),\r\n      marketInfo.market,\r\n    ]),\r\n  );\r\n\r\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\r\n    .map((orderInfos) =>\r\n      orderInfos.orders.map((order) => {\r\n        return {\r\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\r\n          market: marketsByAddress[orderInfos.marketAddress],\r\n          ...order,\r\n        };\r\n      }),\r\n    )\r\n    .flat();\r\n\r\n  if (!connected) {\r\n    return (\r\n      <Row\r\n        justify=\"center\"\r\n        style={{\r\n          marginTop: '10%',\r\n        }}\r\n      >\r\n        <WalletConnect />\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\r\n        Refresh\r\n      </Button>\r\n      <OpenOrderTable\r\n        openOrders={dataSource}\r\n        pageSize={25}\r\n        loading={!loaded}\r\n        onCancelSuccess={refreshOpenOrders}\r\n        marketFilter\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConfigProvider, Table } from 'antd';\r\n\r\nexport default function DataTable({\r\n  dataSource,\r\n  columns,\r\n  emptyLabel = 'No data',\r\n  pagination = false,\r\n  loading = false,\r\n  pageSize = 10,\r\n}) {\r\n  const customizeRenderEmpty = () => (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {emptyLabel}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={pagination ? { pagination: true, pageSize } : false}\r\n        loading={loading}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\nimport { Button, Row } from 'antd';\r\nimport { settleAllFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\nimport { useConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useSelectedTokenAccounts,\r\n  useTokenAccounts,\r\n} from '../../utils/markets';\r\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\r\nimport { abbreviateAddress } from '../../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport default function WalletBalancesTable({\r\n  walletBalances,\r\n}: {\r\n  walletBalances: {\r\n    coin: string;\r\n    mint: string;\r\n    walletBalance: number;\r\n    openOrdersFree: number;\r\n    openOrdersTotal: number;\r\n  }[];\r\n}) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\r\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\r\n  const [settlingFunds, setSettlingFunds] = useState(false);\r\n\r\n  async function onSettleFunds() {\r\n    setSettlingFunds(true);\r\n    try {\r\n      if (!wallet) {\r\n        notify({\r\n          message: 'Wallet not connected',\r\n          description: 'Wallet not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      \r\n      if (!tokenAccounts || !tokenAccountsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'TokenAccounts not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      if (!allMarkets || !allMarketsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'Markets not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      await settleAllFunds({\r\n        connection,\r\n        tokenAccounts,\r\n        selectedTokenAccounts,\r\n        wallet,\r\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSettlingFunds(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Coin',\r\n      key: 'coin',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\">\r\n          <a\r\n            href={`https://solscan.io/address/${walletBalance.mint}`}\r\n            target={'_blank'}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {walletBalance.coin ||\r\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\r\n          </a>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Wallet Balance',\r\n      dataIndex: 'walletBalance',\r\n      key: 'walletBalance',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Open orders total balances',\r\n      dataIndex: 'openOrdersTotal',\r\n      key: 'openOrdersTotal',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Unsettled balances',\r\n      dataIndex: 'openOrdersFree',\r\n      key: 'openOrdersFree',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Selected token account',\r\n      key: 'selectTokenAccount',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\" style={{ width: '430px' }}>\r\n          <StandaloneTokenAccountsSelect\r\n            accounts={tokenAccounts?.filter(\r\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\r\n            )}\r\n            mint={walletBalance.mint}\r\n          />\r\n        </Row>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <DataTable\r\n        emptyLabel=\"No balances\"\r\n        dataSource={walletBalances}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n      {connected && (\r\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\r\n          Settle all funds\r\n        </Button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  useAllOpenOrdersBalances,\r\n  useWalletBalancesForAllMarkets,\r\n} from '../utils/markets';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\r\nimport { useMintToTickers } from '../utils/tokens';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function BalancesPage() {\r\n  const walletBalances = useWalletBalancesForAllMarkets();\r\n  const mintToTickers = useMintToTickers();\r\n  const openOrdersBalances = useAllOpenOrdersBalances();\r\n\r\n  const data = (walletBalances || []).map((balance) => {\r\n    const balances = {\r\n      coin: mintToTickers[balance.mint],\r\n      mint: balance.mint,\r\n      walletBalance: balance.balance,\r\n      openOrdersFree: 0,\r\n      openOrdersTotal: 0,\r\n    };\r\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\r\n      balances['openOrdersFree'] += openOrdersAccount.free;\r\n      balances['openOrdersTotal'] += openOrdersAccount.total;\r\n    }\r\n    return balances;\r\n  });\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Tabs defaultActiveKey=\"walletBalances\">\r\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\r\n          <WalletBalancesTable walletBalances={data} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { Children, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\r\nimport { useLocalStorageState } from '../utils/utils';\r\nimport { ConnectionProvider, useConnection } from 'utils/connection';\r\nimport { Connection } from '@solana/web3.js';\r\nimport { useWallet, WalletProvider } from 'utils/wallet';\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function ConvertPage() { \r\n\r\n  const JupiterWrapper: React.FC = ({ children }) => {\r\n    const connection = useConnection()\r\n    const wallet = useWallet()\r\n    return (\r\nnull\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\r\n    \r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Col, Input, Modal, Row } from 'antd';\r\nimport { EndpointInfo } from '../utils/types';\r\n\r\nexport default function CustomClusterEndpointDialog({\r\n  visible,\r\n  testingConnection,\r\n  onAddCustomEndpoint,\r\n  onClose,\r\n}: {\r\n  visible: boolean;\r\n  testingConnection: boolean;\r\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\r\n  onClose?: () => void;\r\n}) {\r\n  const [customEndpoint, setCustomEndpoint] = useState('');\r\n  const [customEndpointName, setCustomEndpointName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const fullEndpoint = 'https://' + customEndpoint;\r\n    const params = {\r\n      name: customEndpointName,\r\n      endpoint: fullEndpoint,\r\n      custom: true,\r\n    };\r\n    onAddCustomEndpoint(params);\r\n    onDoClose();\r\n  };\r\n  const onDoClose = () => {\r\n    setCustomEndpoint('');\r\n    setCustomEndpointName('');\r\n    onClose && onClose();\r\n  };\r\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom endpoint'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\r\n    >\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Name\"\r\n            value={customEndpointName}\r\n            onChange={(e) => setCustomEndpointName(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Endpoint\"\r\n            value={customEndpoint}\r\n            addonBefore={'https://'}\r\n            onChange={(e) => setCustomEndpoint(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Col, Row, Menu } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport logo_white_text from '../assets/logo_white_text.png';\r\nimport styled from 'styled-components';\r\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\r\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\r\nimport { EndpointInfo } from '../utils/types';\r\nimport { notify } from '../utils/notifications';\r\nimport { Connection } from '@solana/web3.js';\r\nimport WalletConnect from './WalletConnect';\r\nimport { getTradePageUrl } from '../utils/markets';\r\nimport { PRIMARY_PINK } from 'consts/colors.consts';\r\n\r\nconst Wrapper = styled.div`\r\n  background: transparent;\r\n  font-weight: 700;\r\n\r\n  // flex-direction: row;\r\n  // justify-content: flex-end;\r\n  // flex-wrap: wrap;\r\n`;\r\nconst LogoWrapper = styled.div`\r\n  display: block;\r\n  align-items: center;\r\n  color: ${PRIMARY_PINK};\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  img {\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst MENU = [\r\n  {\r\n    title: 'Dashboard',\r\n    link: '/#/dashboard',\r\n  },\r\n  {\r\n    title: 'Trading',\r\n    link: '/',\r\n  },\r\n  {\r\n    title: 'Swap',\r\n    link: '/#/swap',\r\n  },\r\n];\r\n\r\nexport default function TopBar() {\r\n  const { endpointInfo, setEndpoint, availableEndpoints, setCustomEndpoints } =\r\n    useConnectionConfig();\r\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\r\n  const [testingConnection, setTestingConnection] = useState(false);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\r\n    const existingEndpoint = availableEndpoints.some(\r\n      (e) => e.endpoint === info.endpoint,\r\n    );\r\n    if (existingEndpoint) {\r\n      notify({\r\n        message: `An endpoint with the given url already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const handleError = (e) => {\r\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\r\n      notify({\r\n        message: `Failed to connect to ${info.endpoint}`,\r\n        type: 'error',\r\n      });\r\n    };\r\n\r\n    try {\r\n      const connection = new Connection(info.endpoint, 'recent');\r\n      connection\r\n        .getEpochInfo()\r\n        .then((result) => {\r\n          setTestingConnection(true);\r\n          console.log(`testing connection to ${info.endpoint}`);\r\n          const newCustomEndpoints = [\r\n            ...availableEndpoints.filter((e) => e.custom),\r\n            info,\r\n          ];\r\n          setEndpoint(info.endpoint);\r\n          setCustomEndpoints(newCustomEndpoints);\r\n        })\r\n        .catch(handleError);\r\n    } catch (e) {\r\n      handleError(e);\r\n    } finally {\r\n      setTestingConnection(false);\r\n    }\r\n  };\r\n\r\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      if (endpointInfoCustom) {\r\n        setEndpoint(ENDPOINTS[0].endpoint);\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handler);\r\n    return () => window.removeEventListener('beforeunload', handler);\r\n  }, [endpointInfoCustom, setEndpoint]);\r\n\r\n  const tradePageUrl = location.pathname.startsWith('/market/')\r\n    ? location.pathname\r\n    : getTradePageUrl();\r\n\r\n  const { SubMenu } = Menu;\r\n\r\n  const menuDiv = (\r\n    <Menu\r\n      mode=\"horizontal\"\r\n      defaultSelectedKeys={['Trading']}\r\n      selectedKeys={[location.pathname]}\r\n      style={{\r\n        fontSize: '16px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        background: 'transparent',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {MENU.map((item) => {\r\n        return (\r\n          <Menu.Item key={item.title}>\r\n            <a\r\n              href={item.link}\r\n              target={item.link.startsWith('/') ? '_self' : '_blank'}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {item.title}\r\n            </a>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <CustomClusterEndpointDialog\r\n        visible={addEndpointVisible}\r\n        testingConnection={testingConnection}\r\n        onAddCustomEndpoint={onAddCustomEndpoint}\r\n        onClose={() => setAddEndpointVisible(false)}\r\n      />\r\n      <Wrapper>\r\n        <Row wrap={false} style={{ paddingTop: 25, height: 70 }}>\r\n          <Col flex=\"none\">\r\n            <LogoWrapper onClick={() => history.push(tradePageUrl)}>\r\n              <img\r\n                src={logo_white_text}\r\n                alt=\"\"\r\n                style={{ paddingLeft: '5px' }}\r\n              />\r\n            </LogoWrapper>\r\n          </Col>\r\n          <Col flex=\"auto\" style={{ alignContent: 'center' }}>\r\n            {menuDiv}\r\n          </Col>\r\n          <Col flex=\"none\" style={{ paddingRight: 20 }}>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","export const helpUrls = {\r\n  contactEmail: 'mailto:i@x.com',\r\n  discord: 'https://discord.com/invite/YYmbtvan2K',\r\n  telegram: 'https://t.me/ProjectSerum',\r\n  github: 'https://github.com/project-serum',\r\n  projectSerum: 'https://projectserum.com/',\r\n  website: 'https://solananora.com',\r\n  twitter: 'https://twitter.com/',\r\n  solanaBeach: 'https://solanabeach.io',\r\n};","import React from 'react';\r\nimport { Layout, Row, Col, Grid } from 'antd';\r\nimport Link from './Link';\r\nimport { helpUrls } from '../consts/HelpUrls';\r\nconst { Footer } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst footerElements = [\r\n  {\r\n    description: 'Website',\r\n    link: helpUrls.website,\r\n  },\r\n  { description: 'Discord', link: helpUrls.discord },\r\n  { description: 'Twitter', link: helpUrls.twitter },\r\n  { description: 'GitHub', link: helpUrls.github },\r\n  { description: 'Project Serum', link: helpUrls.projectSerum },\r\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\r\n];\r\n\r\nexport const CustomFooter = () => {\r\n  const smallScreen = !useBreakpoint().lg;\r\n\r\n  return (\r\n    <>\r\n      {!smallScreen && (\r\n        <Footer\r\n          style={{\r\n            height: '45px',\r\n            paddingBottom: 10,\r\n            paddingTop: 10,\r\n          }}\r\n        >\r\n          <Row align=\"middle\" gutter={[16, 4]}>\r\n            <>\r\n              <Col flex=\"auto\" />\r\n              {footerElements.map((elem, index) => {\r\n                return (\r\n                  <Col key={index + ''}>\r\n                    <Link external to={elem.link}>\r\n                      {elem.description}\r\n                    </Link>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </>\r\n            <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\r\n          </Row>\r\n        </Footer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport TopBa1r from './TopBar';\r\nimport { CustomFooter as Footer } from './Footer';\r\nconst { Header, Content } = Layout;\r\n\r\nexport default function BasicLayout({ children }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout\r\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\r\n      >\r\n        <Header\r\n          style={{\r\n            padding: 0,\r\n            minHeight: 90,\r\n            height: 'unset',\r\n            backgroundColor: '#0d1017',\r\n          }}\r\n        >\r\n          <TopBa1r />\r\n        </Header>\r\n        <Content style={{ flex: 1 }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport React, { ReactElement, useMemo, useState } from 'react';\r\nimport { useAccountInfo } from '../utils/connection';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\r\nimport { AutoComplete, Form, Tooltip } from 'antd';\r\nimport Link from './Link';\r\n\r\nexport interface MintInfo {\r\n  address: PublicKey;\r\n  decimals: number;\r\n}\r\n\r\nexport function useMintInput(\r\n  name,\r\n  label: string | ReactElement,\r\n  tooltip?: string | ReactElement,\r\n): [ReactElement, MintInfo | null] {\r\n  const [address, setAddress] = useState('');\r\n  const [accountInfo, loaded] = useAccountInfo(\r\n    isValidPublicKey(address) ? new PublicKey(address) : null,\r\n  );\r\n\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(address) ||\r\n          ticker.toLowerCase().includes(address.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, address]);\r\n\r\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\r\n    let validateStatus: ValidateStatus = '';\r\n    let hasFeedback = false;\r\n    let help: string | null = null;\r\n    let mintInfo: MintInfo | null = null;\r\n    if (address) {\r\n      hasFeedback = true;\r\n      if (accountInfo) {\r\n        if (\r\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\r\n          accountInfo.data.length === 82\r\n        ) {\r\n          let parsed = parseTokenMintData(accountInfo.data);\r\n          if (parsed.initialized) {\r\n            validateStatus = 'success';\r\n            mintInfo = {\r\n              address: new PublicKey(address),\r\n              decimals: parsed.decimals,\r\n            };\r\n          } else {\r\n            validateStatus = 'error';\r\n            help = 'Invalid SPL mint';\r\n          }\r\n        } else {\r\n          validateStatus = 'error';\r\n          help = 'Invalid SPL mint address';\r\n        }\r\n      } else if (isValidPublicKey(address) && !loaded) {\r\n        validateStatus = 'validating';\r\n      } else {\r\n        validateStatus = 'error';\r\n        help = 'Invalid Solana address';\r\n      }\r\n    }\r\n    return { validateStatus, hasFeedback, help, mintInfo };\r\n  }, [address, accountInfo, loaded]);\r\n\r\n  const input = (\r\n    <Form.Item\r\n      label={\r\n        <Tooltip\r\n          title={\r\n            <>\r\n              {tooltip} You can look up token mint addresses on{' '}\r\n              <Link external to=\"https://sollet.io\">\r\n                sollet.io\r\n              </Link>\r\n              .\r\n            </>\r\n          }\r\n        >\r\n          {label}\r\n        </Tooltip>\r\n      }\r\n      name={name}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={hasFeedback}\r\n      help={help}\r\n    >\r\n      <AutoComplete\r\n        options={options}\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n      />\r\n    </Form.Item>\r\n  );\r\n\r\n  return [input, mintInfo];\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { MARKETS } from '@project-serum/serum';\r\nimport { useConnection } from '../utils/connection';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { listMarket } from '../utils/send';\r\nimport { useMintInput } from '../components/useMintInput';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default function ListNewMarketPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseMintInput, baseMintInfo] = useMintInput(\r\n    'baseMint',\r\n    <Text>\r\n      Base Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. BTC solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\r\n  );\r\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\r\n    'quoteMint',\r\n    <Text>\r\n      Quote Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. USDT solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\r\n  );\r\n  const [lotSize, setLotSize] = useState('1');\r\n  const [tickSize, setTickSize] = useState('0.01');\r\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [listedMarket, setListedMarket] = useState(null);\r\n\r\n  let baseLotSize;\r\n  let quoteLotSize;\r\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\r\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\r\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\r\n      quoteLotSize = Math.round(\r\n        parseFloat(lotSize) *\r\n          10 ** quoteMintInfo.decimals *\r\n          parseFloat(tickSize),\r\n      );\r\n    }\r\n  }\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    !!baseMintInfo &&\r\n    !!quoteMintInfo &&\r\n    !!baseLotSize &&\r\n    !!quoteLotSize;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const marketAddress = await listMarket({\r\n        connection,\r\n        wallet,\r\n        baseMint: baseMintInfo.address,\r\n        quoteMint: quoteMintInfo.address,\r\n        baseLotSize,\r\n        quoteLotSize,\r\n        dexProgramId,\r\n      });\r\n      setListedMarket(marketAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error listing new market',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>List New Market</Title>\r\n        <Form\r\n          labelCol={{ span: 24 }}\r\n          wrapperCol={{ span: 24 }}\r\n          layout={'vertical'}\r\n          onFinish={onSubmit}\r\n        >\r\n          {baseMintInput}\r\n          {quoteMintInput}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\r\n                Minimum Order Size{' '}\r\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"lotSize\"\r\n            initialValue=\"1\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? baseLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={lotSize}\r\n              onChange={(e) => setLotSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\r\n                Tick Size{' '}\r\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"tickSize\"\r\n            initialValue=\"0.01\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? quoteLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={tickSize}\r\n              onChange={(e) => setTickSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {listedMarket ? (\r\n        <FloatingElement>\r\n          <Text>New market address: {listedMarket.toBase58()}</Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  AutoComplete,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Switch,\r\n  Tooltip,\r\n  Typography,\r\n} from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useConnection } from '../../utils/connection';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\r\nimport { useMintInput } from '../../components/useMintInput';\r\nimport { PoolTransactions } from '@project-serum/pool';\r\nimport { useTokenAccounts } from '../../utils/markets';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst AddRemoveTokenButtons = styled.div`\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\r\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\r\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\r\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\r\nconst PROGRAM_ID_OPTIONS = [\r\n  {\r\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\r\n    value: SIMPLE_POOL_PROGRAM_ID,\r\n  },\r\n  {\r\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\r\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\r\n  },\r\n];\r\n\r\nexport default function NewPoolPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [poolName, setPoolName] = useState('');\r\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\r\n  const [initialSupply, setInitialSupply] = useState('1');\r\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\r\n    { valid: false },\r\n    { valid: false },\r\n  ]);\r\n  const [adminControlled, setAdminControlled] = useState(false);\r\n  const [adminAddress, setAdminAddress] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\r\n      setAdminControlled(false);\r\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\r\n      setAdminControlled(true);\r\n    }\r\n  }, [programId]);\r\n\r\n  useEffect(() => {\r\n    if (connected && wallet) {\r\n      setAdminAddress(wallet.publicKey.toBase58());\r\n    }\r\n  }, [wallet, connected]);\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    poolName.trim() &&\r\n    programId &&\r\n    parseFloat(initialSupply) > 0 &&\r\n    initialAssets.every((asset) => asset.valid) &&\r\n    tokenAccounts &&\r\n    (adminAddress || !adminControlled);\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const assets = initialAssets as ValidInitialAsset[];\r\n      const [\r\n        poolAddress,\r\n        transactionsAndSigners,\r\n      ] = await PoolTransactions.initializeSimplePool({\r\n        connection,\r\n        programId: new PublicKey(programId),\r\n        poolName,\r\n        poolStateSpace: 1024,\r\n        poolMintDecimals: 6,\r\n        initialPoolMintSupply: new BN(\r\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\r\n        ),\r\n        assetMints: assets.map((asset) => asset.mint),\r\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\r\n        creator: wallet.publicKey,\r\n        creatorAssets: assets.map((asset) => {\r\n          const found = tokenAccounts?.find((tokenAccount) =>\r\n            tokenAccount.effectiveMint.equals(asset.mint),\r\n          );\r\n          if (!found) {\r\n            throw new Error('No token account for ' + asset.mint.toBase58());\r\n          }\r\n          return found.pubkey;\r\n        }),\r\n        additionalAccounts: adminControlled\r\n          ? [\r\n              {\r\n                pubkey: new PublicKey(adminAddress),\r\n                isSigner: false,\r\n                isWritable: false,\r\n              },\r\n            ]\r\n          : [],\r\n      });\r\n      const signed = await signTransactions({\r\n        transactionsAndSigners,\r\n        wallet,\r\n        connection,\r\n      });\r\n      for (let signedTransaction of signed) {\r\n        await sendSignedTransaction({ signedTransaction, connection });\r\n      }\r\n      setNewPoolAddress(poolAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error creating new pool',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>Create new pool</Title>\r\n        <Form layout=\"vertical\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\r\n            }\r\n            name=\"name\"\r\n          >\r\n            <Input\r\n              value={poolName}\r\n              onChange={(e) => setPoolName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Address of the pool program.\">\r\n                Program ID{' '}\r\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"programId\"\r\n            initialValue={DEFAULT_PROGRAM_ID}\r\n          >\r\n            <AutoComplete\r\n              value={programId}\r\n              onChange={(value) => setProgramId(value)}\r\n              options={PROGRAM_ID_OPTIONS}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\r\n                Initial Pool Token Supply\r\n              </Tooltip>\r\n            }\r\n            name=\"initialSupply\"\r\n            initialValue=\"1\"\r\n          >\r\n            <Input\r\n              value={initialSupply}\r\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <AddRemoveTokenButtons>\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.concat({ valid: false }))\r\n              }\r\n            >\r\n              Add token\r\n            </Button>{' '}\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\r\n              }\r\n              disabled={initialAssets.length <= 1}\r\n            >\r\n              Remove token\r\n            </Button>\r\n          </AddRemoveTokenButtons>\r\n          {initialAssets.map((asset, i) => (\r\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\r\n          ))}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\r\n                Admin Controlled\r\n              </Tooltip>\r\n            }\r\n            name=\"adminControlled\"\r\n          >\r\n            <Switch\r\n              checked={adminControlled}\r\n              onChange={(checked) => setAdminControlled(checked)}\r\n              disabled={\r\n                programId === SIMPLE_POOL_PROGRAM_ID ||\r\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\r\n              }\r\n            />\r\n          </Form.Item>\r\n          {adminControlled ? (\r\n            <Form.Item\r\n              label={\r\n                <Tooltip title=\"Address of the pool admin account.\">\r\n                  Admin Address\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Input\r\n                value={adminAddress}\r\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\r\n              />\r\n            </Form.Item>\r\n          ) : null}\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {newPoolAddress ? (\r\n        <FloatingElement>\r\n          <Text>\r\n            New pool address:{' '}\r\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\r\n              {newPoolAddress.toBase58()}\r\n            </Link>\r\n          </Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\ntype InitialAsset = { valid: false } | ValidInitialAsset;\r\ninterface ValidInitialAsset {\r\n  valid: true;\r\n  mint: PublicKey;\r\n  quantity: number;\r\n}\r\n\r\nfunction AssetInput({ setInitialAssets, index }) {\r\n  const [mintInput, mintInfo] = useMintInput(\r\n    `mint${index}`,\r\n    <Text>Token {index + 1} Mint Address</Text>,\r\n    <>Token mint address for token {index + 1}.</>,\r\n  );\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  useEffect(() => {\r\n    let change: InitialAsset;\r\n    if (mintInfo && parseFloat(quantity) >= 0) {\r\n      let parsedQuantity = Math.round(\r\n        10 ** mintInfo.decimals * parseFloat(quantity),\r\n      );\r\n      change = {\r\n        mint: mintInfo.address,\r\n        quantity: parsedQuantity,\r\n        valid: true,\r\n      };\r\n    } else {\r\n      change = { valid: false };\r\n    }\r\n    setInitialAssets((assets: InitialAsset[]) =>\r\n      assets.map((old, i) => (i === index ? change : old)),\r\n    );\r\n  }, [setInitialAssets, index, mintInfo, quantity]);\r\n\r\n  return (\r\n    <>\r\n      {mintInput}\r\n      <Form.Item\r\n        label={\r\n          <Tooltip\r\n            title={\r\n              <>\r\n                Initial quantity of token {index + 1} to deposit into the pool.\r\n              </>\r\n            }\r\n          >\r\n            Token {index + 1} Initial Quantity\r\n          </Tooltip>\r\n        }\r\n        name={`quantity${index}`}\r\n        validateStatus={'success'}\r\n      >\r\n        <Input\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value.trim())}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"any\"\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { useMintToTickers } from '../utils/tokens';\r\nimport { Popover } from 'antd';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport { PRIMARY_PINK } from 'consts/colors.consts';\r\n\r\nexport function MintName({\r\n  mint,\r\n  showAddress = false,\r\n}: {\r\n  mint: string | PublicKey | null | undefined;\r\n  showAddress?: boolean;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  if (!mint) {\r\n    return null;\r\n  }\r\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\r\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\r\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\r\n\r\n  return (\r\n    <>\r\n      {ticker}\r\n      {showAddress ? (\r\n        <>\r\n          {' '}\r\n          <Popover\r\n            content={<LinkAddress address={mintAddress} />}\r\n            placement=\"bottomRight\"\r\n            title=\"Token mint\"\r\n            trigger=\"hover\"\r\n          >\r\n            <InfoCircleOutlined style={{ color: PRIMARY_PINK}} />\r\n          </Popover>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { Basket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport BN from 'bn.js';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport { Spin } from 'antd';\r\nimport { MintName } from '../../../components/MintName';\r\n\r\ninterface BasketDisplayProps {\r\n  poolInfo: PoolInfo;\r\n  basket?: Basket | null | undefined;\r\n}\r\n\r\nexport default function PoolBasketDisplay({\r\n  poolInfo,\r\n  basket,\r\n}: BasketDisplayProps) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => (\r\n        <BasketItem\r\n          key={index}\r\n          mint={asset.mint}\r\n          quantity={basket?.quantities[index]}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BasketItemProps {\r\n  mint: PublicKey;\r\n  quantity?: BN;\r\n}\r\n\r\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && quantity) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} <MintName mint={mint} showAddress />\r\n    </li>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\ninterface PoolInfoProps {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nconst feeFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 6,\r\n});\r\n\r\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\r\n  const connection = useConnection();\r\n\r\n  const [totalBasket] = useAsyncData(\r\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\r\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\r\n  );\r\n\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\r\n      <Paragraph>\r\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Pool token mint address:{' '}\r\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\r\n      </Paragraph>\r\n      {poolInfo.state.adminKey ? (\r\n        <Paragraph>\r\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\r\n        </Paragraph>\r\n      ) : null}\r\n      <Paragraph>\r\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\r\n      </Paragraph>\r\n      <Text>Total assets:</Text>\r\n      <div>\r\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\r\nimport React, { useMemo, useState } from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../../utils/notifications';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\ninterface PoolCreateRedeemPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nexport default function PoolCreateRedeemPanel({\r\n  poolInfo,\r\n  mintInfo,\r\n}: PoolCreateRedeemPanel) {\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Tabs>\r\n        <TabPane tab=\"Create\" key=\"create\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"create\"\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Redeem\" key=\"redeem\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"redeem\"\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface CreateRedeemInnerPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n  tab: string;\r\n}\r\n\r\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const action = useMemo(() => {\r\n    const parsedQuantity = Math.round(\r\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\r\n    );\r\n    if (parsedQuantity > 0) {\r\n      if (tab === 'create') {\r\n        return { create: new BN(parsedQuantity) };\r\n      } else {\r\n        return { redeem: new BN(parsedQuantity) };\r\n      }\r\n    }\r\n    return null;\r\n  }, [mintInfo.decimals, quantity, tab]);\r\n\r\n  const [basket, basketLoaded] = useAsyncData(\r\n    async () =>\r\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\r\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\r\n  );\r\n\r\n  function findTokenAccount(mint: PublicKey): PublicKey {\r\n    const account = tokenAccounts?.find((account) =>\r\n      account.effectiveMint.equals(mint),\r\n    );\r\n    if (account) {\r\n      return account.pubkey;\r\n    }\r\n    throw new Error('No token account for ' + mint.toBase58());\r\n  }\r\n\r\n  const canSubmit = connected && action && basket;\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const { transaction, signers } = PoolTransactions.execute(\r\n        poolInfo,\r\n        action,\r\n        {\r\n          owner: wallet.publicKey,\r\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\r\n          assetAccounts: poolInfo.state.assets.map((asset) =>\r\n            findTokenAccount(asset.mint),\r\n          ),\r\n        },\r\n        basket,\r\n      );\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message:\r\n          'Error ' +\r\n          (tab === 'create' ? 'creating' : 'redeeming') +\r\n          ' pool tokens',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <div>\r\n        {!basket ? (\r\n          basketLoaded ? null : (\r\n            <Spin />\r\n          )\r\n        ) : (\r\n          <>\r\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\r\n            <Text type=\"secondary\">(indicative only)</Text>\r\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        type=\"primary\"\r\n        disabled={!canSubmit || submitting}\r\n      >\r\n        {!connected ? 'Wallet not connected' : 'Submit'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import { PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport {\r\n  parseTokenAccountData,\r\n  parseTokenMintData,\r\n} from '../../../utils/tokens';\r\nimport { Button, Spin, Tabs } from 'antd';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { MintName } from '../../../components/MintName';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function PoolBalancesPanel({\r\n  poolInfo,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n}) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\r\n          <WalletBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\r\n          <PoolBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  return (\r\n    <ul>\r\n      {[\r\n        poolInfo.state.poolTokenMint,\r\n        ...poolInfo.state.assets.map((asset) => asset.mint),\r\n      ].map((mint, index) => {\r\n        const tokenAccount = tokenAccounts?.find((account) =>\r\n          account.effectiveMint.equals(mint),\r\n        );\r\n        if (!tokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={mint}\r\n            publicKey={tokenAccount.pubkey}\r\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => {\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={asset.mint}\r\n            publicKey={asset.vaultAddress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BalanceItemProps {\r\n  mint: PublicKey;\r\n  publicKey: PublicKey;\r\n  isPoolToken?: boolean;\r\n}\r\n\r\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && balanceAccountInfo) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    if (mint.equals(WRAPPED_SOL_MINT)) {\r\n      quantityDisplay = (\r\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\r\n      );\r\n    } else {\r\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\r\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay}{' '}\r\n      {isPoolToken ? (\r\n        <>\r\n          Pool Token (<MintName mint={mint} />)\r\n        </>\r\n      ) : (\r\n        <MintName mint={mint} />\r\n      )}{' '}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://solscan.io/address/' + publicKey.toBase58()}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React, { FormEvent, useMemo, useState } from 'react';\r\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport {\r\n  getSelectedTokenAccountForMint,\r\n  useTokenAccounts,\r\n} from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\nimport { notify } from '../../../utils/notifications';\r\nimport {\r\n  Account,\r\n  PublicKey,\r\n  SystemProgram,\r\n  Transaction,\r\n} from '@solana/web3.js';\r\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\r\nimport {\r\n  createAssociatedTokenAccount,\r\n  getAssociatedTokenAddress,\r\n} from '@project-serum/associated-token';\r\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\r\nimport BN from 'bn.js';\r\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\r\n          <PauseUnpauseTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\r\n          <AddAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\r\n          <RemoveAssetTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Deposit\" key=\"deposit\">\r\n          <DepositTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\r\n          <WithdrawTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\r\n          <UpdateFeeTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface TabParams {\r\n  poolInfo: PoolInfo;\r\n}\r\n\r\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function sendPause() {\r\n    if (!connected || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error pausing pool',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function sendUnpause() {\r\n    if (!connected || !wallet) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const transaction = new Transaction();\r\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\r\n      await sendTransaction({ connection, wallet, transaction });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error unpausing pool',\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={sendPause} disabled={submitting}>\r\n        Pause\r\n      </Button>{' '}\r\n      <Button onClick={sendUnpause} disabled={submitting}>\r\n        Unpause\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AddAssetTab({ poolInfo }: TabParams) {\r\n  const connection = useConnection();\r\n  const [address, setAddress] = useState('');\r\n  const { wallet, connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'adding asset to pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = await getAssociatedTokenAddress(\r\n        poolInfo.state.vaultSigner,\r\n        mintAddress,\r\n      );\r\n      const transaction = new Transaction();\r\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\r\n        transaction.add(\r\n          await createAssociatedTokenAccount(\r\n            wallet.publicKey,\r\n            poolInfo.state.vaultSigner,\r\n            mintAddress,\r\n          ),\r\n        );\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintSelector\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const { connected } = useWallet();\r\n  const canSubmit = connected && address;\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'removing asset from pool',\r\n    async () => {\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction DepositTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'depositing to pool',\r\n    async () => {\r\n      if (!wallet) {\r\n        throw new Error('Wallet is not connected');\r\n      }\r\n\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: parsedQuantity + 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.transfer({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: walletTokenAccount.pubkey,\r\n            destination: vaultAddress,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n    true,\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction WithdrawTab({ poolInfo }: TabParams) {\r\n  const [address, setAddress] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit =\r\n    connected && address && tokenAccounts && parseFloat(quantity);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'withdrawing from pool',\r\n    async () => {\r\n      if (!wallet) {\r\n        throw new Error('Wallet is not connected');\r\n      }\r\n\r\n      const mintAddress = new PublicKey(address);\r\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\r\n        asset.mint.equals(mintAddress),\r\n      )?.vaultAddress;\r\n      if (!vaultAddress) {\r\n        throw new Error('Asset not in pool');\r\n      }\r\n\r\n      const walletTokenAccount = getSelectedTokenAccountForMint(\r\n        tokenAccounts,\r\n        mintAddress,\r\n      );\r\n      if (!walletTokenAccount) {\r\n        throw new Error('Asset not in wallet');\r\n      }\r\n\r\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\r\n      if (!mintAccountInfo) {\r\n        throw new Error('Mint not found');\r\n      }\r\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\r\n      const parsedQuantity = Math.round(\r\n        parseFloat(quantity) * 10 ** mintDecimals,\r\n      );\r\n\r\n      const wrappedSolAccount =\r\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\r\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\r\n          ? new Account()\r\n          : null;\r\n\r\n      const transaction = new Transaction();\r\n      const signers: Account[] = [];\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          SystemProgram.createAccount({\r\n            fromPubkey: wallet.publicKey,\r\n            lamports: 2.04e6,\r\n            newAccountPubkey: wrappedSolAccount.publicKey,\r\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n            space: 165,\r\n          }),\r\n          TokenInstructions.initializeAccount({\r\n            account: wrappedSolAccount.publicKey,\r\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n        signers.push(wrappedSolAccount);\r\n      }\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.approveDelegate(\r\n          poolInfo,\r\n          vaultAddress,\r\n          wallet.publicKey,\r\n          new BN(parsedQuantity),\r\n        ),\r\n      );\r\n      if (wrappedSolAccount) {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: wrappedSolAccount.publicKey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n          TokenInstructions.closeAccount({\r\n            source: wrappedSolAccount.publicKey,\r\n            destination: walletTokenAccount.pubkey,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      } else {\r\n        transaction.add(\r\n          TokenInstructions.transfer({\r\n            source: vaultAddress,\r\n            destination: walletTokenAccount.pubkey,\r\n            amount: parsedQuantity,\r\n            owner: wallet.publicKey,\r\n          }),\r\n        );\r\n      }\r\n      return [transaction, signers];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <MintInPoolSelector\r\n        poolInfo={poolInfo}\r\n        label=\"Token Mint Address\"\r\n        value={address}\r\n        onChange={(value) => setAddress(value)}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\r\n  const [feeRate, setFeeRate] = useState('');\r\n\r\n  const { connected } = useWallet();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\r\n\r\n  const [onSubmit, submitting] = useOnSubmitHandler(\r\n    'changing pool fee',\r\n    async () => {\r\n      const transaction = new Transaction();\r\n      transaction.add(\r\n        AdminControlledPoolInstructions.updateFee(\r\n          poolInfo,\r\n          Math.round(parseFloat(feeRate) * 1_000_000),\r\n        ),\r\n      );\r\n      return [transaction, []];\r\n    },\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Fee Rate</>}\r\n        value={feeRate}\r\n        onChange={(e) => setFeeRate(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction useOnSubmitHandler(\r\n  description: string,\r\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\r\n  refresh = false,\r\n): [(FormEvent) => void, boolean] {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  async function onSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    if (submitting) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      if (!connected || !wallet) {\r\n        throw new Error('Wallet not connected');\r\n      }\r\n      const [transaction, signers] = await makeTransaction();\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n      if (refresh) {\r\n        refreshAllCaches();\r\n      }\r\n    } catch (e) {\r\n      notify({\r\n        message: `Error ${description}`,\r\n        description: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return [onSubmit, submitting];\r\n}\r\n\r\nfunction SubmitButton({ canSubmit, submitting }) {\r\n  const { connected } = useWallet();\r\n  return (\r\n    <Button\r\n      htmlType=\"submit\"\r\n      type=\"primary\"\r\n      disabled={!canSubmit || submitting}\r\n    >\r\n      {!connected ? 'Wallet not connected' : 'Submit'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction MintInPoolSelector({\r\n  poolInfo,\r\n  label,\r\n  value,\r\n  onChange,\r\n  style,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n  label: string;\r\n  value: string;\r\n  onChange: (string) => void;\r\n  style: any;\r\n}) {\r\n  const mintToTickers = useMintToTickers();\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\r\n        {poolInfo.state.assets.map((asset) => (\r\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\r\n            {mintToTickers[asset.mint.toBase58()] ? (\r\n              <>\r\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\r\n              </>\r\n            ) : (\r\n              asset.mint.toBase58()\r\n            )}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    </Input.Group>\r\n  );\r\n}\r\n\r\nfunction MintSelector({ label, style, value, onChange }) {\r\n  const mintToTickers = useMintToTickers();\r\n  const options = useMemo(() => {\r\n    return Object.entries(mintToTickers)\r\n      .filter(\r\n        ([mintAddress, ticker]) =>\r\n          mintAddress.includes(value) ||\r\n          ticker.toLowerCase().includes(value.toLowerCase()),\r\n      )\r\n      .map(([mintAddress, ticker]) => ({\r\n        value: mintAddress,\r\n        label: (\r\n          <>\r\n            {ticker} ({mintAddress})\r\n          </>\r\n        ),\r\n      }));\r\n  }, [mintToTickers, value]);\r\n  return (\r\n    <Input.Group style={style}>\r\n      <span className=\"ant-input-group-addon\">{label}</span>\r\n      <AutoComplete\r\n        options={options}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </Input.Group>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport {\r\n  decodePoolState,\r\n  isAdminControlledPool,\r\n  PoolInfo,\r\n} from '@project-serum/pool';\r\nimport PoolInfoPanel from './PoolInfoPanel';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\r\nimport PoolBalancesPanel from './PoolBalancesPanel';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PoolAdminPanel } from './PoolAdminPanel';\r\nimport { useWallet } from '../../../utils/wallet';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function PoolPage() {\r\n  const { poolAddress } = useParams();\r\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\r\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\r\n  );\r\n  const history = useHistory();\r\n\r\n  const poolInfo: PoolInfo | null = useMemo(() => {\r\n    if (!poolAccountInfo) {\r\n      return null;\r\n    }\r\n    try {\r\n      return {\r\n        address: new PublicKey(poolAddress),\r\n        state: decodePoolState(poolAccountInfo.data),\r\n        program: poolAccountInfo.owner,\r\n      };\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }, [poolAddress, poolAccountInfo]);\r\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\r\n    poolInfo?.state.poolTokenMint,\r\n  );\r\n  const mintInfo = useMemo(\r\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\r\n    [mintAccountInfo],\r\n  );\r\n  const { wallet } = useWallet();\r\n\r\n  if (poolInfo && mintInfo && wallet) {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          title={<>Pool {poolInfo.address.toBase58()}</>}\r\n          onBack={() => history.push('/pools')}\r\n          subTitle={poolInfo.state.name}\r\n        />\r\n        <Row>\r\n          <Col xs={24} lg={12}>\r\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24} lg={12}>\r\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24}>\r\n            <PoolBalancesPanel poolInfo={poolInfo} />\r\n          </Col>\r\n          {wallet.connected &&\r\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\r\n          isAdminControlledPool(poolInfo) ? (\r\n            <Col xs={24}>\r\n              <PoolAdminPanel poolInfo={poolInfo} />\r\n            </Col>\r\n          ) : null}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={<>Pool {poolAddress}</>}\r\n        onBack={() => history.push('/pools')}\r\n      />\r\n      <FloatingElement>\r\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\r\n          <Spin />\r\n        ) : (\r\n          <Text>Invalid pool</Text>\r\n        )}\r\n      </FloatingElement>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction isPublicKey(address) {\r\n  try {\r\n    new PublicKey(address);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport React, { useState } from 'react';\r\nimport { Button, Input, Typography } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  margin-bottom: 48px;\r\n`;\r\n\r\nexport default function PoolListPage() {\r\n  const [poolAddress, setPoolAddress] = useState('');\r\n  const history = useHistory();\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    history.push(`/pools/${poolAddress}`);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={3}>Pools</Title>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            value={poolAddress}\r\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\r\n            placeholder=\"Pool address\"\r\n          />\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Go\r\n          </Button>\r\n        </Form>\r\n        <Link to=\"/pools/new\">Create new pool</Link>\r\n      </FloatingElement>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { Children, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\r\nimport { useLocalStorageState } from '../utils/utils';\r\nimport { ConnectionProvider, useConnection } from 'utils/connection';\r\nimport { Connection } from '@solana/web3.js';\r\nimport { useWallet, WalletProvider } from 'utils/wallet';\r\nimport { LOGO_WHITE } from 'assets';\r\nimport { PRIMARY_PINK } from 'consts/colors.consts';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nconst DashboardWrapper = styled.div({\r\n  marginTop: '40px',\r\n  '.dash-title': {\r\n    textAlign: 'center',\r\n    h1: {\r\n      fontWeight: 700,\r\n      fontSize: '60px',\r\n\r\n      img: {\r\n        width: '300px',\r\n      },\r\n    },\r\n  },\r\n\r\n  '.dash-body': {\r\n    gap: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    button: {\r\n      color: 'white',\r\n      fontSize: '24px',\r\n      fontWeight: 700,\r\n      padding: '20px 48px',\r\n      lineHeight: '32px',\r\n      borderRadius: '12px',\r\n      background: PRIMARY_PINK,\r\n    },\r\n\r\n    '.btn-sec': {\r\n      border: `3px solid ${PRIMARY_PINK}`,\r\n      background: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function DashboardPage() {\r\n  return (\r\n    <DashboardWrapper>\r\n      <div className=\"dash-title\">\r\n        <h1>\r\n          <div>Introducing</div> <img src={LOGO_WHITE} />\r\n        </h1>\r\n      </div>\r\n      <div className=\"dash-body\">\r\n        <button>DEX Trading</button>\r\n        <button className=\"btn-sec\">Nora Swap</button>\r\n      </div>\r\n    </DashboardWrapper>\r\n  );\r\n}\r\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport TradePage from './pages/TradePage';\r\nimport OpenOrdersPage from './pages/OpenOrdersPage';\r\nimport React from 'react';\r\nimport BalancesPage from './pages/BalancesPage';\r\nimport ConvertPage from './pages/ConvertPage';\r\nimport BasicLayout from './components/BasicLayout';\r\nimport ListNewMarketPage from './pages/ListNewMarketPage';\r\nimport NewPoolPage from './pages/pools/NewPoolPage';\r\nimport PoolPage from './pages/pools/PoolPage';\r\nimport PoolListPage from './pages/pools/PoolListPage';\r\nimport { getTradePageUrl } from './utils/markets';\r\nimport DashboardPage from 'pages/DashboardPage';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <>\r\n      <HashRouter basename={'/'}>\r\n        <BasicLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to={getTradePageUrl()} />\r\n            </Route>\r\n            <Route exact path=\"/trade/market/:marketAddress\">\r\n              <TradePage />\r\n            </Route>\r\n                 <Route exact path=\"/orders\" component={OpenOrdersPage} />\r\n            <Route exact path=\"/balances\" component={BalancesPage} />\r\n            <Route exact path=\"/swap\" component={ConvertPage} />\r\n            <Route exact path=\"/dashboard\" component={DashboardPage}/>\r\n            <Route\r\n              exact\r\n              path=\"/list-new-market\"\r\n              component={ListNewMarketPage}\r\n            />\r\n            <Route exact path=\"/pools\">\r\n              <PoolListPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/new\">\r\n              <NewPoolPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/:poolAddress\">\r\n              <PoolPage />\r\n            </Route>\r\n            <Route exact path=\"/dashboard\">\r\n              <DashboardPage/>\r\n            </Route>\r\n          </Switch>\r\n        </BasicLayout>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useConnection } from './connection';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport {\r\n  NameRegistryState,\r\n  getHashedName,\r\n  getNameAccountKey,\r\n  getTwitterRegistry,\r\n} from '@solana/spl-name-service';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { useLocalStorageState } from './utils';\r\n\r\ninterface ReferrerContextValues {\r\n  usdcRef: PublicKey | undefined;\r\n  usdtRef: PublicKey | undefined;\r\n  setRefCode: (arg: any) => void;\r\n  refCode: string | undefined;\r\n  allowRefLink: boolean;\r\n}\r\n\r\nconst ReferrerContext: React.Context<null | ReferrerContextValues> = React.createContext<null | ReferrerContextValues>(\r\n  null,\r\n);\r\n\r\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\r\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\r\n);\r\n\r\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\r\nconst USDT_MINT = new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');\r\n\r\nexport async function findAssociatedTokenAddress(\r\n  walletAddress: PublicKey,\r\n  tokenMintAddress: PublicKey,\r\n): Promise<PublicKey> {\r\n  return (\r\n    await PublicKey.findProgramAddress(\r\n      [\r\n        walletAddress.toBuffer(),\r\n        TOKEN_PROGRAM_ID.toBuffer(),\r\n        tokenMintAddress.toBuffer(),\r\n      ],\r\n      ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n}\r\n\r\n// Address of the SOL TLD\r\nexport const SOL_TLD_AUTHORITY = new PublicKey(\r\n  '58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx',\r\n);\r\n\r\nexport const getInputKey = async (input: string) => {\r\n  let hashed_input_name = await getHashedName(input);\r\n  let inputDomainKey = await getNameAccountKey(\r\n    hashed_input_name,\r\n    undefined,\r\n    SOL_TLD_AUTHORITY,\r\n  );\r\n  return { inputDomainKey: inputDomainKey, hashedInputName: hashed_input_name };\r\n};\r\n\r\nexport const useFeesAccountsFromRefCode = (refCode: string | undefined) => {\r\n  const connection = useConnection();\r\n  const [usdc, setUsdc] = useState<PublicKey | undefined>(undefined);\r\n  const [usdt, setUsdt] = useState<PublicKey | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    const fn = async () => {\r\n      let usdcAddress: undefined | PublicKey = undefined;\r\n      let usdtAddress: undefined | PublicKey = undefined;\r\n      if (!refCode) {\r\n        setUsdc(\r\n          process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS\r\n            ? new PublicKey(process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS)\r\n            : undefined,\r\n        );\r\n        setUsdt(\r\n          process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS\r\n            ? new PublicKey(process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS)\r\n            : undefined,\r\n        );\r\n        return;\r\n      }\r\n      try {\r\n        let nameRegistryState: NameRegistryState;\r\n        if (refCode.includes('.sol')) {\r\n          const { inputDomainKey } = await getInputKey(\r\n            refCode.replace('.sol', ''),\r\n          );\r\n          nameRegistryState = await NameRegistryState.retrieve(\r\n            connection,\r\n            inputDomainKey,\r\n          );\r\n        } else {\r\n          nameRegistryState = await getTwitterRegistry(connection, refCode);\r\n        }\r\n        usdcAddress = await findAssociatedTokenAddress(\r\n          nameRegistryState.owner,\r\n          USDC_MINT,\r\n        );\r\n        usdtAddress = await findAssociatedTokenAddress(\r\n          nameRegistryState.owner,\r\n          USDT_MINT,\r\n        );\r\n        const usdcAccountInfo = await connection.getAccountInfo(usdcAddress);\r\n        const usdtAccountInfo = await connection.getAccountInfo(usdtAddress);\r\n        if (!!usdcAccountInfo?.data) setUsdc(usdcAddress);\r\n        if (!!usdtAccountInfo?.data) setUsdt(usdtAddress);\r\n      } catch (err) {\r\n        console.warn(`Error getting refcode ${err}`);\r\n      }\r\n    };\r\n    fn();\r\n  }, [connection, refCode]);\r\n  return { usdcRef: usdc, usdtRef: usdt };\r\n};\r\n\r\nexport const ReferrerProvider = ({ children }) => {\r\n  const allowRefLink = process.env.REACT_APP_ALLOW_REF_LINK === 'true';\r\n  const [refCode, setRefCode] = useLocalStorageState('refCode');\r\n  const { usdcRef, usdtRef } = useFeesAccountsFromRefCode(\r\n    allowRefLink ? refCode : undefined,\r\n  );\r\n  useEffect(() => {\r\n    if (!allowRefLink) setRefCode(null);\r\n  }, [allowRefLink, setRefCode]);\r\n  return (\r\n    <ReferrerContext.Provider\r\n      value={{ usdcRef, usdtRef, setRefCode, refCode, allowRefLink }}\r\n    >\r\n      {children}\r\n    </ReferrerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useReferrer = () => {\r\n  const context = useContext(ReferrerContext);\r\n  if (!context) throw new Error('Missing referrer context');\r\n  return {\r\n    usdcRef: context.usdcRef,\r\n    usdtRef: context.usdtRef,\r\n    setRefCode: context.setRefCode,\r\n    refCode: context.refCode,\r\n    allowRefLink: context.allowRefLink,\r\n  };\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport './App.less';\r\nimport { ConnectionProvider } from './utils/connection';\r\nimport { WalletProvider } from './utils/wallet';\r\nimport { GlobalStyle } from './global_style';\r\nimport { Spin } from 'antd';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { Routes } from './routes';\r\nimport { ReferrerProvider } from './utils/referrer';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Suspense fallback={() => <Spin size=\"large\" />}>\r\n      <GlobalStyle />\r\n        <ConnectionProvider>\r\n          <ReferrerProvider>\r\n            <WalletProvider>\r\n              <Suspense fallback={() => <Spin size=\"large\" />}>\r\n                <Routes />\r\n              </Suspense>\r\n            </WalletProvider>\r\n          </ReferrerProvider>\r\n        </ConnectionProvider>\r\n    </Suspense>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}